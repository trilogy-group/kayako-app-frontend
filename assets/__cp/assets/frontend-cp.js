"use strict";
/* jshint ignore:start */

/* jshint ignore:end */

define('frontend-cp/acceptance-tests/main', ['exports', 'ember-cli-sri/acceptance-tests/main'], function (exports, main) {

	'use strict';



	exports['default'] = main['default'];

});
define('frontend-cp/adapters/access-log', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'accesslogs';
    }
  });

});
define('frontend-cp/adapters/activity', function () {

	'use strict';

	// import ApplicationAdapter from './application';
	//
	// export default ApplicationAdapter.extend({
	//   // replaceQueryParams: {
	//   //   userId: 'user'
	//   // }
	//
	//   buildURLFragment(type, id, snapshot, requestType, query) {
	//     let url = [];
	//     let hasParentURL = false;
	//
	//     if (snapshot) {
	//       snapshot.type.eachRelationship((name, relationship) => {
	//         if (relationship.options.parent) {
	//           hasParentURL = true;
	//           let parent = snapshot.belongsTo(name);
	//           let adapter = get(this, 'store').adapterFor(parent.modelName);
	//           url.push(adapter.buildURLFragment(parent.modelName, parent.id, parent, requestType, query));
	//           let reverseRelationship = snapshot.type.inverseFor(name);
	//           let relationshipMeta = parent.type.metaForProperty(reverseRelationship.name);
	//           url.push(relationshipMeta.options.url || reverseRelationship.name);
	//         }
	//       });
	//     // } else if (this.replaceQueryParams) {
	//     //   _.each(this.replaceQueryParams, (modelName, queryParam) => {
	//     //     let adapter = get(this, 'store').adapterFor(modelName);
	//     //     let value = query[queryParam];
	//     //     delete query[queryParam];
	//     //     url.push(adapter.buildURLFragment(modelName, value, null, requestType, query));
	//     //   });
	//     }
	//
	//     if (!hasParentURL && type) {
	//       let path = this.pathForType(type);
	//       if (path) { url.push(path); }
	//     }
	//
	//     if (id) {
	//       url.push(encodeURIComponent(id));
	//     }
	//
	//     return url.join('/');
	//   }
	// });

});
define('frontend-cp/adapters/application', ['exports', 'ember', 'ember-data', 'npm:lodash'], function (exports, Ember, DS, _) {

  'use strict';

  var get = Ember['default'].get;

  exports['default'] = DS['default'].RESTAdapter.extend({
    namespace: 'api/v1',
    primaryRecordKey: 'data',
    sessionService: Ember['default'].inject.service('session'),

    headers: (function () {
      var headers = {
        'Accept': 'application/json',
        'X-Options': 'flat',
        'X-Requested-With': 'XMLHttpRequest'
      };
      var sessionId = this.get('sessionService.sessionId');
      if (sessionId) {
        headers['X-Session-ID'] = sessionId;
      }
      return headers;
    }).property('sessionService.sessionId'),

    buildURL: function buildURL() {
      var url = [];
      var prefix = this.getURLPrefix();
      if (prefix) {
        url.push(prefix);
      }
      url.push(this.buildURLFragment.apply(this, arguments));
      url = url.join('/');

      var host = get(this, 'host');
      if (!host && url && url.charAt(0) !== '/') {
        url = '/' + url;
      }

      return url;
    },

    buildURLFragment: function buildURLFragment(type, id, snapshot, requestType, query) {
      var url = [];
      var inverseRelationship = undefined;
      var store = get(this, 'store');
      var typeObject = store.modelFor(type);
      var parentSnapshot = undefined;

      typeObject.eachRelationship(function (name, relationship) {
        if (relationship.options.parent) {
          // Entity representing the parent
          if (snapshot) {
            parentSnapshot = snapshot.belongsTo(name);
          } else if (query && query.parent) {
            parentSnapshot = query.parent._createSnapshot();
            delete query.parent;
          }
          // The inverse relationship (parent-child)
          inverseRelationship = typeObject.inverseFor(name, store);
        }
      });

      if (parentSnapshot) {
        // Adapter for the parent entity
        var adapter = store.adapterFor(parentSnapshot.modelName);
        // Build the URL for the parent entity
        url.push(adapter.buildURLFragment(parentSnapshot.modelName, parentSnapshot.id, parentSnapshot, requestType, query));
        // Options hash for the inverse relationship
        var relationshipMeta = parentSnapshot.type.metaForProperty(inverseRelationship.name);
        url.push(relationshipMeta.options.url || this.pathForType(type));
      } else {
        url.push(this.pathForType(type));
      }

      if (id) {
        url.push(encodeURIComponent(id));
      }

      return url.join('/');
    },

    urlPrefix: function urlPrefix(path, parentURL) {
      var host = get(this, 'host');
      var url = [];

      // Protocol relative url
      if (/^\/\//.test(path)) {// eslint-disable-line no-empty
        // Do nothing, the full host is already included. This branch
        // avoids the absolute path logic and the relative path logic.

        // Absolute path
      } else if (path.charAt(0) === '/') {
          if (host) {
            path = path.slice(1);
            url.push(host);
          }
          // Relative path
        } else if (!/^http(s)?:\/\//.test(path)) {
            url.push(parentURL);
          }
      url.push(path);

      return url.join('/');
    },

    getURLPrefix: function getURLPrefix() {
      var url = [];
      var host = this.get('host');
      var namespace = this.get('namespace');
      if (host) {
        url.push(host);
      }
      if (namespace) {
        url.push(namespace);
      }

      return url.join('/');
    },

    // If the items fetched via hasMany relationship refer to the related entity
    // as their parent (via "parent" property in options), a property with the
    // parent's ID will be added to every child.
    // Ideally it's a job of a serializer, but this is the only place where we can
    // get access the relationship object.
    findHasMany: function findHasMany(store, snapshot, url, relationship) {
      var _this = this;

      return this._super.apply(this, arguments).then(function (payload) {
        var inverse = snapshot.type.inverseFor(relationship.key, store);
        if (inverse && payload[_this.primaryRecordKey]) {
          // required for when collection payload is a hash and not an array - looking at you, locale strings
          if (!_['default'].isArray(payload[_this.primaryRecordKey])) {
            return payload;
          }
          payload[_this.primaryRecordKey].forEach(function (entry) {
            if (!entry[inverse]) {
              entry[inverse] = {
                id: snapshot.id,
                type: snapshot.type
              };
            }
          });
        }
        return payload;
      });
    },

    pathForType: function pathForType(type) {
      var dasherized = Ember['default'].String.dasherize(type);
      return Ember['default'].String.pluralize(dasherized);
    },

    query: function query(store, type, _query) {
      var url = this.buildURL(type.modelName, null, null, 'query', _query);

      if (this.sortQueryParams) {
        _query = this.sortQueryParams(_query);
      }

      return this.ajax(url, 'GET', { data: _query });
    },

    /* TODO: Remove when Ember 2.0 is released (just for deprecation warnings) */
    shouldReloadAll: function shouldReloadAll(store, snapshotRecordArray) {
      return true;
    },

    /* TODO: Remove when Ember 2.0 is relased (just for deprecation warnings) */
    shouldBackgroundReloadRecord: function shouldBackgroundReloadRecord(store, snapshot) {
      return false;
    }
  });

});
define('frontend-cp/adapters/case-field-type', ['exports', 'frontend-cp/adapters/static-model'], function (exports, StaticModel) {

	'use strict';

	exports['default'] = StaticModel['default'].extend({});

});
define('frontend-cp/adapters/case-field', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'cases/fields';
    }
  });

});
define('frontend-cp/adapters/case-form', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'cases/forms';
    }
  });

});
define('frontend-cp/adapters/case-message', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'messages';
    }
  });

});
define('frontend-cp/adapters/case-note', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'notes';
    }
  });

});
define('frontend-cp/adapters/case-priority', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'cases/priorities';
    }
  });

});
define('frontend-cp/adapters/case-reply', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'reply';
    }
  });

});
define('frontend-cp/adapters/case-status', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'cases/statuses';
    }
  });

});
define('frontend-cp/adapters/case-type', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'cases/types';
    }
  });

});
define('frontend-cp/adapters/column', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'views/columns';
    }
  });

});
define('frontend-cp/adapters/definition', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'views/definition';
    }
  });

});
define('frontend-cp/adapters/facebook-account', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'facebook/accounts';
    }
  });

});
define('frontend-cp/adapters/identity-twitter', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'identities/twitter';
    }
  });

});
define('frontend-cp/adapters/intl', ['exports', 'ember-intl/adapters/-intl-adapter', 'frontend-cp/locales/new-locale'], function (exports, IntlAdapter, Locale) {

  'use strict';

  exports['default'] = IntlAdapter['default'].extend({
    locales: {},

    findLanguage: function findLanguage(locale) {
      if (locale instanceof Locale['default']) {
        return locale;
      }

      if (typeof locale === 'string') {
        if (!this.locales[locale]) {
          this.locales[locale] = new (Locale['default'].extend({
            locale: locale
          }))();
        }
        return this.locales[locale];
      }
    }
  });

});
define('frontend-cp/adapters/macro', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'cases/macros';
    }
  });

});
define('frontend-cp/adapters/metric', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'cases/ratings/metrics';
    }
  });

});
define('frontend-cp/adapters/private', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

	'use strict';

	exports['default'] = ApplicationAdapter['default'].extend({
		namespace: 'base/admin/index.php?/Base'
	});

});
define('frontend-cp/adapters/search-result-group', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'base/search_all';
    },

    // we don't really want flat. And API is broken anyway.
    headers: function headers() {
      var headers = this._super();
      delete headers['X-Options'];
      return headers;
    }
  });

});
define('frontend-cp/adapters/session', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    namespace: 'api/v1',

    buildURLFragment: function buildURLFragment() {
      return 'session';
    },

    headers: (function () {
      var sessionId = this.get('sessionService.sessionId');
      var email = this.get('sessionService.email');
      var password = this.get('sessionService.password');
      var authorizationHeader = 'Basic ' + btoa(email + ':' + password);
      var withPassword = email && password;

      return {
        'Accept': 'application/json',
        'X-Options': 'flat',
        'X-Session-ID': withPassword ? undefined : sessionId,
        'Authorization': withPassword ? authorizationHeader : undefined,
        'X-Requested-With': 'XMLHttpRequest'
      };
    }).property('sessionService.email', 'sessionService.password', 'sessionService.sessionId')
  });

});
define('frontend-cp/adapters/slack-identity', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'identities/slack';
    }
  });

});
define('frontend-cp/adapters/static-model', ['exports', 'ember-data', 'npm:lodash'], function (exports, DS, _) {

  'use strict';

  exports['default'] = DS['default'].Adapter.extend({
    findAll: function findAll(store, typeClass) {
      return store.peekAll(typeClass);
    },

    find: function find(store, typeClass, id) {
      var records = this.findAll(store, typeClass);

      var matchingRecords = _['default'].select(records, function (record) {
        return record.id === id;
      });

      if (matchingRecords.length) {
        return matchingRecords.firstObject;
      }
    }
  });

});
define('frontend-cp/adapters/twitter-account', ['exports', 'frontend-cp/adapters/application'], function (exports, ApplicationAdapter) {

  'use strict';

  exports['default'] = ApplicationAdapter['default'].extend({
    pathForType: function pathForType() {
      return 'twitter/accounts';
    }
  });

});
define('frontend-cp/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'frontend-cp/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {

  'use strict';

  Ember['default'].MODEL_FACTORY_INJECTIONS = true;

  var App = Ember['default'].Application.extend({
    modulePrefix: config['default'].modulePrefix,
    podModulePrefix: config['default'].podModulePrefix,
    Resolver: Resolver['default']
  });

  loadInitializers['default'](App, config['default'].modulePrefix);

  exports['default'] = App;

});
define('frontend-cp/application/controller', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend({

    urlService: Ember['default'].inject.service('url'),
    sessionService: Ember['default'].inject.service('session'),

    exitSession: (function () {
      if (this.get('sessionService.sessionId') === null) {
        this.transitionToRoute('login');
      }
    }).observes('sessionService.sessionId').on('init'),

    currentPathDidChange: (function () {
      this.get('urlService').set('currentPath', this.get('currentPath'));
    }).observes('currentPath')
  });

});
define('frontend-cp/application/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({
    navMenu: null,
    sessionService: Ember['default'].inject.service('session'),

    beforeModel: function beforeModel(transition) {
      var _this = this;

      return this.get('sessionService').getSession().then(function () {
        // no subroute is requested
        if (transition.state.handlerInfos.length === 2) {
          _this.transitionTo('session');
        }
      }, function () {
        if (transition.targetName !== 'login') {
          _this.controllerFor('login').set('transitionOnLogin', transition);
          _this.transitionTo('login');
        }
      });
    },

    model: function model() {
      return Ember['default'].Object.create({
        navMenu: this.get('navMenu')
      });
    },

    setupController: function setupController(controller, model) {
      controller.set('model', model);
    }
  });

});
define('frontend-cp/application/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/application/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","outlet",["loc",[null,[1,0],[1,10]]]],
        ["inline","ko-context-modal",[],["floating",true],["loc",[null,[3,0],[3,34]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/application/view', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].View.extend({

    classNames: ['application']
  });

});
define('frontend-cp/components/ember-wormhole', ['exports', 'ember-wormhole/components/ember-wormhole'], function (exports, Component) {

	'use strict';

	exports['default'] = Component['default'];

});
define('frontend-cp/components/ko-add-participants-context-menu/component', ['exports', 'ember', 'frontend-cp/components/mixins/context-menu-set'], function (exports, Ember, ContextMenuSetComponentMixin) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend(ContextMenuSetComponentMixin['default'], {});

});
define('frontend-cp/components/ko-add-participants-context-menu/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-add-participants-context-menu/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","box");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("a");
          dom.setAttribute(el2,"href","#");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [3, 1]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createElementMorph(element1);
          morphs[2] = dom.createMorphAt(element1,0,0);
          return morphs;
        },
        statements: [
          ["inline","ko-add-participants-popover",[],["results",["subexpr","@mut",[["get","copyInParticipants",["loc",[null,[3,40],[3,58]]]]],[],[]],"isShowing",["subexpr","@mut",[["get","isShowing",["loc",[null,[3,69],[3,78]]]]],[],[]]],["loc",[null,[3,2],[3,80]]]],
          ["element","action",["next"],[],["loc",[null,[6,16],[6,33]]]],
          ["inline","format-message",[["subexpr","intl-get",["users.addnewuser"],[],["loc",[null,[6,51],[6,80]]]]],[],["loc",[null,[6,34],[6,82]]]]
        ],
        locals: ["isShowing"],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-add-participants-context-menu/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createElementMorph(element0);
          morphs[2] = dom.createMorphAt(element0,0,0);
          return morphs;
        },
        statements: [
          ["inline","ko-add-user-popover",[],["isShowing",["subexpr","@mut",[["get","isShowing",["loc",[null,[13,34],[13,43]]]]],[],[]]],["loc",[null,[13,2],[13,45]]]],
          ["element","action",["prev"],[],["loc",[null,[15,10],[15,27]]]],
          ["inline","format-message",[["subexpr","intl-get",["generic.popover.previous"],[],["loc",[null,[15,45],[15,82]]]]],[],["loc",[null,[15,28],[15,84]]]]
        ],
        locals: ["isShowing"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 26
          }
        },
        "moduleName": "frontend-cp/components/ko-add-participants-context-menu/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-context-modal-item",[],["index","0","title",["subexpr","format-message",[["subexpr","intl-get",["cases.addparticipant"],[],["loc",[null,[1,57],[1,90]]]]],[],["loc",[null,[1,41],[1,91]]]],"contextModalId",["subexpr","@mut",[["get","contextModalId",["loc",[null,[1,107],[1,121]]]]],[],[]]],0,null,["loc",[null,[1,0],[9,26]]]],
        ["block","ko-context-modal-item",[],["index","1","title",["subexpr","format-message",[["subexpr","intl-get",["users.addnewuser"],[],["loc",[null,[11,57],[11,86]]]]],[],["loc",[null,[11,41],[11,87]]]],"contextModalId",["subexpr","@mut",[["get","contextModalId",["loc",[null,[11,103],[11,117]]]]],[],[]]],1,null,["loc",[null,[11,0],[16,26]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-add-participants-popover/component', ['exports', 'ember', 'npm:lodash', 'frontend-cp/lib/keycodes'], function (exports, Ember, _, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    classNames: ['ko-add-participants-popover'],
    showResults: false,
    results: null,
    searchTerm: null,
    name: null,
    email: null,
    filteredParticipants: null,
    selectedParticipants: null,

    didShowingChange: (function () {
      if (this.get('isShowing')) {
        this.$().find('.input__text').focus();
      }
    }).observes('isShowing').on('init'),

    setupParticipants: (function () {
      this.set('selectedParticipants', new Ember['default'].A([]));
      this.set('filteredParticipants', this.get('results'));
    }).on('didInsertElement'),
    // TODO: when RFC implemented and its possible to invoke same actions via multiple events
    keyDown: function keyDown(e) {
      if (e.keyCode === KeyCodes.down) {
        return false;
      }
      if (e.keyCode === KeyCodes.up) {
        return false;
      }
      if (e.keyCode === KeyCodes.enter) {
        return false;
      }
    },
    // TODO: when RFC implemented and its possible to invoke same actions via multiple events
    keyUp: function keyUp(e) {
      if (e.keyCode === KeyCodes.down) {
        return false;
      }
      if (e.keyCode === KeyCodes.up) {
        return false;
      }
      if (e.keyCode === KeyCodes.enter) {
        return false;
      }
      return false;
    },

    actions: {

      query: function query() {
        var _this = this;

        var filteredResults = _['default'].filter(this.results, function (result) {
          return _['default'].some([result.name, result.company, result.email], function (result) {
            return result.indexOf(_this.searchTerm) !== -1;
          });
        });

        this.set('filteredParticipants', filteredResults);
        this.set('searchTerm', '');
      },

      removeParticipant: function removeParticipant(participant) {
        this.selectedParticipants.removeObject(participant);
      },

      participantSelected: function participantSelected(participant) {
        this.selectedParticipants.pushObject(participant);
        this.set('showResults', false);
        this.set('searchTerm', '');
      },

      whenKeyIsPressed: function whenKeyIsPressed() {
        this.set('showResults', true);
      }
    }

  });

});
define('frontend-cp/components/ko-add-participants-popover/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 9,
                "column": 4
              },
              "end": {
                "line": 24,
                "column": 4
              }
            },
            "moduleName": "frontend-cp/components/ko-add-participants-popover/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("ul");
            dom.setAttribute(el1,"class","ko-add-participants-popover__selected-list");
            dom.setAttribute(el1,"role","menu");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("li");
            dom.setAttribute(el2,"class","ko-add-participants-popover__selected-list-item");
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3,"class","u-inline-block");
            var el4 = dom.createTextNode("\n            ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n          ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("i");
            dom.setAttribute(el3,"class","i--close");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element5 = dom.childAt(fragment, [1, 1]);
            var element6 = dom.childAt(element5, [3]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element5, [1]),1,1);
            morphs[1] = dom.createElementMorph(element6);
            return morphs;
          },
          statements: [
            ["inline","ko-checkbox",[],["label",["subexpr","@mut",[["get","participant.name",["loc",[null,[14,20],[14,36]]]]],[],[]],"large",false,"disabled",false,"tabindex",0,"checked",true],["loc",[null,[13,12],[19,14]]]],
            ["element","action",["removeParticipant",["get","participant",["loc",[null,[21,59],[21,70]]]]],[],["loc",[null,[21,30],[21,72]]]]
          ],
          locals: ["participant"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 26,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-add-participants-popover/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","box ko-add-participants-popover__selected-list-container");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          return morphs;
        },
        statements: [
          ["block","each",[["get","selectedParticipants",["loc",[null,[9,12],[9,32]]]]],[],0,null,["loc",[null,[9,4],[24,13]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 35,
                "column": 6
              },
              "end": {
                "line": 50,
                "column": 6
              }
            },
            "moduleName": "frontend-cp/components/ko-add-participants-popover/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            dom.setAttribute(el1,"class","ko-add-participants-popover__filtered-list-item");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2,"class","flag--small flag--auto");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3,"class","flag__img");
            var el4 = dom.createTextNode("\n              ");
            dom.appendChild(el3, el4);
            var el4 = dom.createElement("img");
            dom.setAttribute(el4,"class","ko-add-participants-popover__image");
            dom.setAttribute(el4,"alt","");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n            ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3,"class","flag__body");
            var el4 = dom.createTextNode("\n              ");
            dom.appendChild(el3, el4);
            var el4 = dom.createElement("strong");
            var el5 = dom.createComment("");
            dom.appendChild(el4, el5);
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode(",\n              ");
            dom.appendChild(el3, el4);
            var el4 = dom.createElement("span");
            dom.setAttribute(el4,"class","caption");
            var el5 = dom.createTextNode("\n                ");
            dom.appendChild(el4, el5);
            var el5 = dom.createComment("");
            dom.appendChild(el4, el5);
            var el5 = dom.createTextNode("\n                ");
            dom.appendChild(el4, el5);
            var el5 = dom.createComment("");
            dom.appendChild(el4, el5);
            var el5 = dom.createTextNode("\n              ");
            dom.appendChild(el4, el5);
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n            ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var element1 = dom.childAt(element0, [1]);
            var element2 = dom.childAt(element1, [1, 1]);
            var element3 = dom.childAt(element1, [3]);
            var element4 = dom.childAt(element3, [3]);
            var morphs = new Array(5);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createAttrMorph(element2, 'src');
            morphs[2] = dom.createMorphAt(dom.childAt(element3, [1]),0,0);
            morphs[3] = dom.createMorphAt(element4,1,1);
            morphs[4] = dom.createMorphAt(element4,3,3);
            return morphs;
          },
          statements: [
            ["element","action",["participantSelected",["get","participant",["loc",[null,[36,99],[36,110]]]]],[],["loc",[null,[36,68],[36,112]]]],
            ["attribute","src",["concat",[["get","participant.image",["loc",[null,[39,69],[39,86]]]]]]],
            ["content","participant.name",["loc",[null,[42,22],[42,42]]]],
            ["content","participant.company",["loc",[null,[44,16],[44,39]]]],
            ["content","participant.email",["loc",[null,[45,16],[45,37]]]]
          ],
          locals: ["participant"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 28,
              "column": 0
            },
            "end": {
              "line": 53,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-add-participants-popover/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","box");
          var el2 = dom.createTextNode("\n    Showing 10 of 27 users\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-add-participants-popover__filtered-list-container");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("ul");
          dom.setAttribute(el2,"class","ko-add-participants-popover__filtered-list");
          dom.setAttribute(el2,"role","menu");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3, 1]),1,1);
          return morphs;
        },
        statements: [
          ["block","each",[["get","filteredParticipants",["loc",[null,[35,14],[35,34]]]]],[],0,null,["loc",[null,[35,6],[50,15]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 55,
              "column": 0
            },
            "end": {
              "line": 59,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-add-participants-popover/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","box header__subtitle");
          var el2 = dom.createTextNode("\n    These people will be copied in on your reply. They cannot see the entire conversation. ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("a");
          dom.setAttribute(el2,"href","#");
          var el3 = dom.createTextNode("Find out more about CC recipients.");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 11
          }
        },
        "moduleName": "frontend-cp/components/ko-add-participants-popover/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","box");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","input i--search-small");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 1]),1,1);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);
        morphs[3] = dom.createMorphAt(fragment,6,6,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","input",[],["class","input__text u-1/1 has-icon","type","text","placeholder","Type to search participants","value",["subexpr","@mut",[["get","searchTerm",["loc",[null,[3,107],[3,117]]]]],[],[]],"enter","query","key-press","whenKeyIsPressed"],["loc",[null,[3,4],[3,162]]]],
        ["block","unless",[["get","showResults",["loc",[null,[7,10],[7,21]]]]],[],0,null,["loc",[null,[7,0],[26,11]]]],
        ["block","if",[["get","showResults",["loc",[null,[28,6],[28,17]]]]],[],1,null,["loc",[null,[28,0],[53,7]]]],
        ["block","unless",[["get","showResults",["loc",[null,[55,10],[55,21]]]]],[],2,null,["loc",[null,[55,0],[59,11]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/components/ko-add-user-popover/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-add-user-popover/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 7
          }
        },
        "moduleName": "frontend-cp/components/ko-add-user-popover/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","box");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createElement("strong");
        var el5 = dom.createTextNode("Name");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode(" ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode(" ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createElement("strong");
        var el5 = dom.createTextNode("Email Address");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode(" ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode(" ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","box");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(element1,5,5);
        morphs[1] = dom.createMorphAt(element1,13,13);
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]),1,1);
        return morphs;
      },
      statements: [
        ["inline","input",[],["value",["subexpr","@mut",[["get","name",["loc",[null,[4,18],[4,22]]]]],[],[]],"class","input__text u-1/1","type","text"],["loc",[null,[4,4],[4,62]]]],
        ["inline","input",[],["value",["subexpr","@mut",[["get","email",["loc",[null,[7,18],[7,23]]]]],[],[]],"class","input__text u-1/1","type","email"],["loc",[null,[7,4],[7,64]]]],
        ["inline","input",[],["class","button button--primary","value","Add User","type","submit","disabled",true],["loc",[null,[10,4],[10,89]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-address/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    classNames: ['info-bar-item', 'u-no-bottom-border']
  });

});
define('frontend-cp/components/ko-address/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-address/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode(" ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          morphs[1] = dom.createMorphAt(element0,0,0);
          morphs[2] = dom.createMorphAt(element0,2,2);
          morphs[3] = dom.createMorphAt(dom.childAt(fragment, [5]),0,0);
          return morphs;
        },
        statements: [
          ["content","address.address1",["loc",[null,[3,5],[3,25]]]],
          ["content","address.address2",["loc",[null,[4,5],[4,25]]]],
          ["content","address.postCode",["loc",[null,[4,26],[4,46]]]],
          ["content","address.country",["loc",[null,[5,5],[5,24]]]]
        ],
        locals: ["address"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-address/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("p");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(fragment,4,4,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,3],[1,12]]]],
        ["block","each",[["get","address",["loc",[null,[2,8],[2,15]]]]],[],0,null,["loc",[null,[2,0],[6,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-admin-card-team/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    teamName: null,
    memberType: 'Agent',
    members: null,

    memberCount: (function () {
      return this.get('members.length');
    }).property('members'),

    pluralizedMemberType: (function () {
      if (this.get('memberCount') === 1) {
        return this.get('memberType');
      }
      return Ember['default'].Inflector.inflector.pluralize(this.get('memberType'));
    }).property('memberType', 'memberCount')

  });

});
define('frontend-cp/components/ko-admin-card-team/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 10,
                "column": 10
              },
              "end": {
                "line": 12,
                "column": 10
              }
            },
            "moduleName": "frontend-cp/components/ko-admin-card-team/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            var el2 = dom.createTextNode(" ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
            return morphs;
          },
          statements: [
            ["inline","ko-avatar",[],["avatar",["subexpr","@mut",[["get","member.avatar",["loc",[null,[11,38],[11,51]]]]],[],[]]],["loc",[null,[11,19],[11,53]]]]
          ],
          locals: ["member"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin-card-team/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin-card-team__header");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","ko-admin-card-team__team-name");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","ko-admin-card-team__membership");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode(" ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin-card-team__content");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("ul");
          dom.setAttribute(el2,"class","list-inline");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [3]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
          morphs[1] = dom.createMorphAt(element1,0,0);
          morphs[2] = dom.createMorphAt(element1,2,2);
          morphs[3] = dom.createMorphAt(dom.childAt(fragment, [3, 1]),1,1);
          return morphs;
        },
        statements: [
          ["content","teamName",["loc",[null,[4,51],[4,63]]]],
          ["content","members.length",["loc",[null,[5,52],[5,70]]]],
          ["content","pluralizedMemberType",["loc",[null,[5,71],[5,95]]]],
          ["block","each",[["get","members",["loc",[null,[10,18],[10,25]]]]],[],0,null,["loc",[null,[10,10],[12,19]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 29
          }
        },
        "moduleName": "frontend-cp/components/ko-admin-card-team/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-admin-selectable-card",[],[],0,null,["loc",[null,[1,0],[16,29]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-admin-card-user/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-admin-card-user/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin-card-user/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin-card-user__avatar");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin-card-user__name");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin-card-user__email");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);
          morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]),0,0);
          return morphs;
        },
        statements: [
          ["inline","ko-avatar",[],["avatar",["subexpr","@mut",[["get","user.avatar",["loc",[null,[2,63],[2,74]]]]],[],[]],"size","large"],["loc",[null,[2,44],[2,89]]]],
          ["content","user.fullName",["loc",[null,[3,42],[3,59]]]],
          ["content","user.primaryEmailAddress",["loc",[null,[4,43],[4,71]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 29
          }
        },
        "moduleName": "frontend-cp/components/ko-admin-card-user/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-admin-selectable-card",[],[],0,null,["loc",[null,[1,0],[5,29]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-admin-selectable-card/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    onComponentWasSelectedAction: null,
    onComponentWasDeselectedAction: null,
    selectableModelId: null,
    isSelected: false,
    isActive: true,

    classNameBindings: ['isActive::ko-admin-selectable-card--inactive', ':u-1/2'],

    modelWasSelectedOrDeSelected: (function () {
      if (this.get('isSelected')) {
        this.sendAction('onComponentWasSelectedAction', this.get('selectableModelId'));
      } else {
        this.sendAction('onComponentWasDeselectedAction', this.get('selectableModelId'));
      }
    }).observes('isSelected')
  });

});
define('frontend-cp/components/ko-admin-selectable-card/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-admin-selectable-card/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-admin-selectable-card__checkbox");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-admin-selectable-card__content");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);
        return morphs;
      },
      statements: [
        ["inline","ko-checkbox",[],["checked",["subexpr","@mut",[["get","isSelected",["loc",[null,[2,25],[2,35]]]]],[],[]]],["loc",[null,[2,2],[2,38]]]],
        ["content","yield",["loc",[null,[6,2],[6,11]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-admin/case-fields/edit/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    onOptionAddition: null,
    onOptionRemoval: null,

    actions: {
      addNewOption: function addNewOption(name, tag) {
        this.sendAction('onOptionAddition', name, tag);
      },
      removeOption: function removeOption(option) {
        this.sendAction('onOptionRemoval', option);
      }
    }
  });

});
define('frontend-cp/components/ko-admin/case-fields/edit/options/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    options: [],

    orderedOptionList: (function () {
      return this.get('options').sortBy('sortOrder');
    }).property('options', 'options.@each.sortOrder'),

    actions: {
      reorderList: function reorderList(list) {
        var order = 1;
        list.forEach(function (option) {
          option.set('sortOrder', order);
          order++;
        });
      },

      createOption: function createOption() {
        this.sendAction('onOptionAddition');
      },
      removeOption: function removeOption(option) {
        this.sendAction('onOptionRemoval', option);
      }
    }

  });

});
define('frontend-cp/components/ko-admin/case-fields/edit/options/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/options/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","u-inline-block");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element0,1,1);
          morphs[1] = dom.createMorphAt(element0,3,3);
          return morphs;
        },
        statements: [
          ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","option.value",["loc",[null,[8,32],[8,44]]]]],[],[]]],["loc",[null,[8,6],[8,46]]]],
          ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","option.tag",["loc",[null,[9,32],[9,42]]]]],[],[]]],["loc",[null,[9,6],[9,44]]]]
        ],
        locals: ["option"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/options/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["block","ko-reorderable-crud-list",[],["removeItemAction","removeOption","createItemAction","createOption","reorderListAction","reorderList","items",["subexpr","@mut",[["get","orderedOptionList",["loc",[null,[5,8],[5,25]]]]],[],[]]],0,null,["loc",[null,[1,0],[11,29]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-admin/case-fields/edit/priorities/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    options: [],

    orderedOptionList: (function () {
      return this.get('options').sortBy('sortOrder');
    }).property('options', 'options.@each.sortOrder'),

    actions: {
      reorderList: function reorderList(list) {
        list.forEach(function (option) {
          option.set('sortOrder', list.indexOf(option) + 1);
        });
      },

      createOption: function createOption() {
        this.sendAction('onOptionAddition');
      },
      removeOption: function removeOption(option) {
        this.sendAction('onOptionRemoval', option);
      }
    }
  });

});
define('frontend-cp/components/ko-admin/case-fields/edit/priorities/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 6
            },
            "end": {
              "line": 22,
              "column": 6
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/priorities/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","u-inline-block");
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          return morphs;
        },
        statements: [
          ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","option.value",["loc",[null,[20,38],[20,50]]]]],[],[]]],["loc",[null,[20,12],[20,52]]]]
        ],
        locals: ["option"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/priorities/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","form-section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-heading");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("fieldset");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("legend");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [3, 1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);
        morphs[2] = dom.createMorphAt(element1,4,4);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.heading.priorities"],[],["loc",[null,[2,48],[2,101]]]]],[],["loc",[null,[2,31],[2,103]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.priorities"],[],["loc",[null,[6,31],[6,82]]]]],[],["loc",[null,[6,14],[6,84]]]],
        ["block","ko-reorderable-crud-list",[],["removeItemAction","removeOption","createItemAction","createOption","reorderListAction","reorderList","items",["subexpr","@mut",[["get","orderedOptionList",["loc",[null,[17,12],[17,29]]]]],[],[]]],0,null,["loc",[null,[13,6],[22,35]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-admin/case-fields/edit/regex/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-admin/case-fields/edit/regex/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/regex/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","form-section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-heading");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","form-group");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","form-help");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [3, 1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
        morphs[1] = dom.createMorphAt(element1,1,1);
        morphs[2] = dom.createMorphAt(dom.childAt(element1, [3]),0,0);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.heading.regex"],[],["loc",[null,[2,48],[2,96]]]]],[],["loc",[null,[2,31],[2,98]]]],
        ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","caseField.regularExpression",["loc",[null,[6,32],[6,59]]]]],[],[]],"required",true],["loc",[null,[6,6],[6,75]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.help.regex"],[],["loc",[null,[7,46],[7,86]]]]],[],["loc",[null,[7,29],[7,88]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-admin/case-fields/edit/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("fieldset");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("legend");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("fieldset");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("legend");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","form-help");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("fieldset");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","form-help");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("fieldset");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","form-help");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [1]);
          var element6 = dom.childAt(fragment, [3]);
          var element7 = dom.childAt(fragment, [5]);
          var element8 = dom.childAt(fragment, [7]);
          var morphs = new Array(9);
          morphs[0] = dom.createMorphAt(dom.childAt(element5, [2]),0,0);
          morphs[1] = dom.createMorphAt(element5,4,4);
          morphs[2] = dom.createMorphAt(dom.childAt(element6, [2]),0,0);
          morphs[3] = dom.createMorphAt(element6,4,4);
          morphs[4] = dom.createMorphAt(dom.childAt(element6, [6]),0,0);
          morphs[5] = dom.createMorphAt(element7,1,1);
          morphs[6] = dom.createMorphAt(dom.childAt(element7, [3]),0,0);
          morphs[7] = dom.createMorphAt(element8,1,1);
          morphs[8] = dom.createMorphAt(dom.childAt(element8, [3]),0,0);
          return morphs;
        },
        statements: [
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.customer_field_title"],[],["loc",[null,[31,35],[31,96]]]]],[],["loc",[null,[31,18],[31,98]]]],
          ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","caseField.customerTitle",["loc",[null,[32,34],[32,57]]]]],[],[]]],["loc",[null,[32,8],[32,59]]]],
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.customer_field_description"],[],["loc",[null,[37,33],[37,100]]]]],[],["loc",[null,[37,16],[37,102]]]],
          ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","caseField.description",["loc",[null,[38,34],[38,55]]]]],[],[]]],["loc",[null,[38,8],[38,57]]]],
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.help.customer_field_description"],[],["loc",[null,[39,48],[39,114]]]]],[],["loc",[null,[39,31],[39,116]]]],
          ["inline","ko-checkbox",[],["label",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.is_editable_by_customers"],[],["loc",[null,[43,44],[43,109]]]]],[],["loc",[null,[43,28],[43,110]]]],"checked",["subexpr","@mut",[["get","caseField.isCustomerEditable",["loc",[null,[43,119],[43,147]]]]],[],[]]],["loc",[null,[43,8],[43,149]]]],
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.help.is_editable_by_customers"],[],["loc",[null,[44,48],[44,112]]]]],[],["loc",[null,[44,31],[44,114]]]],
          ["inline","ko-checkbox",[],["checked",["subexpr","@mut",[["get","caseField.isRequiredForCustomers",["loc",[null,[48,30],[48,62]]]]],[],[]],"label",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.is_required_for_customers"],[],["loc",[null,[48,85],[48,151]]]]],[],["loc",[null,[48,69],[48,152]]]]],["loc",[null,[48,8],[48,154]]]],
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.help.is_required_for_customers"],[],["loc",[null,[49,48],[49,113]]]]],[],["loc",[null,[49,31],[49,115]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 58,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","component",[["get","caseField.fieldType.adminEditComponentName",["loc",[null,[57,14],[57,56]]]]],["options",["subexpr","@mut",[["get","caseField.options",["loc",[null,[57,65],[57,82]]]]],[],[]],"onOptionAddition",["subexpr","@mut",[["get","onOptionAddition",["loc",[null,[57,100],[57,116]]]]],[],[]],"onOptionRemoval",["subexpr","@mut",[["get","onOptionRemoval",["loc",[null,[57,133],[57,148]]]]],[],[]]],["loc",[null,[57,2],[57,150]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 60,
              "column": 0
            },
            "end": {
              "line": 67,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","form-section");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","section-heading");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","section-content");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(element4, [1]),0,0);
          morphs[1] = dom.createMorphAt(dom.childAt(element4, [3]),1,1);
          return morphs;
        },
        statements: [
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.heading.field_options"],[],["loc",[null,[62,50],[62,106]]]]],[],["loc",[null,[62,33],[62,108]]]],
          ["inline","ko-admin/case-fields/edit/options",[],["options",["subexpr","@mut",[["get","caseField.options",["loc",[null,[64,50],[64,67]]]]],[],[]],"onOptionAddition",["subexpr","@mut",[["get","onOptionAddition",["loc",[null,[64,85],[64,101]]]]],[],[]],"onOptionRemoval",["subexpr","@mut",[["get","onOptionRemoval",["loc",[null,[64,118],[64,133]]]]],[],[]]],["loc",[null,[64,6],[64,135]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 69,
              "column": 0
            },
            "end": {
              "line": 86,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","form-section");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","section-heading");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","section-content");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("fieldset");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4,"class","form-help");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("fieldset");
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("legend");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n        ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4,"class","form-help");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [3]);
          var element2 = dom.childAt(element1, [1]);
          var element3 = dom.childAt(element1, [3]);
          var morphs = new Array(6);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
          morphs[1] = dom.createMorphAt(element2,1,1);
          morphs[2] = dom.createMorphAt(dom.childAt(element2, [3]),0,0);
          morphs[3] = dom.createMorphAt(dom.childAt(element3, [1]),0,0);
          morphs[4] = dom.createMorphAt(element3,3,3);
          morphs[5] = dom.createMorphAt(dom.childAt(element3, [5]),0,0);
          return morphs;
        },
        statements: [
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.heading.field_settings"],[],["loc",[null,[71,50],[71,107]]]]],[],["loc",[null,[71,33],[71,109]]]],
          ["inline","ko-toggle",[],["activated",["subexpr","@mut",[["get","caseField.isEnabled",["loc",[null,[75,30],[75,49]]]]],[],[]]],["loc",[null,[75,8],[75,51]]]],
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.help.is_enabled"],[],["loc",[null,[76,50],[76,100]]]]],[],["loc",[null,[76,33],[76,102]]]],
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.api_key"],[],["loc",[null,[80,33],[80,81]]]]],[],["loc",[null,[80,16],[80,83]]]],
          ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","caseField.key",["loc",[null,[81,34],[81,47]]]]],[],[]]],["loc",[null,[81,8],[81,49]]]],
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.help.api_key"],[],["loc",[null,[82,48],[82,95]]]]],[],["loc",[null,[82,31],[82,97]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 86,
            "column": 7
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/case-fields/edit/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","form-section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-heading");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","form-group");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","form-label");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","form-help");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","form-group");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","form-label");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","form-section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-heading");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("fieldset");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element9 = dom.childAt(fragment, [0]);
        var element10 = dom.childAt(element9, [3]);
        var element11 = dom.childAt(element10, [1]);
        var element12 = dom.childAt(element10, [3]);
        var element13 = dom.childAt(fragment, [2]);
        var element14 = dom.childAt(element13, [3]);
        var morphs = new Array(13);
        morphs[0] = dom.createMorphAt(dom.childAt(element9, [1]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(element11, [1]),0,0);
        morphs[2] = dom.createMorphAt(element11,3,3);
        morphs[3] = dom.createMorphAt(dom.childAt(element11, [5]),0,0);
        morphs[4] = dom.createMorphAt(dom.childAt(element12, [1]),0,0);
        morphs[5] = dom.createMorphAt(element12,3,3);
        morphs[6] = dom.createMorphAt(element12,5,5);
        morphs[7] = dom.createMorphAt(dom.childAt(element13, [1]),0,0);
        morphs[8] = dom.createMorphAt(dom.childAt(element14, [1]),1,1);
        morphs[9] = dom.createMorphAt(element14,3,3);
        morphs[10] = dom.createMorphAt(fragment,4,4,contextualElement);
        morphs[11] = dom.createMorphAt(fragment,6,6,contextualElement);
        morphs[12] = dom.createMorphAt(fragment,8,8,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.heading.agent_settings"],[],["loc",[null,[2,48],[2,105]]]]],[],["loc",[null,[2,31],[2,107]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.field_title"],[],["loc",[null,[6,47],[6,99]]]]],[],["loc",[null,[6,30],[6,101]]]],
        ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","caseField.title",["loc",[null,[7,32],[7,47]]]]],[],[]],"required",true],["loc",[null,[7,6],[7,63]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.help.field_title"],[],["loc",[null,[8,46],[8,97]]]]],[],["loc",[null,[8,29],[8,99]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.is_required_for_agents"],[],["loc",[null,[12,47],[12,110]]]]],[],["loc",[null,[12,30],[12,112]]]],
        ["inline","ko-checkbox",[],["label",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.is_required_for_agents_when_updating_case"],[],["loc",[null,[13,42],[13,124]]]]],[],["loc",[null,[13,26],[13,125]]]],"checked",["subexpr","@mut",[["get","caseField.isRequiredForAgents",["loc",[null,[13,134],[13,163]]]]],[],[]]],["loc",[null,[13,6],[13,165]]]],
        ["inline","ko-checkbox",[],["label",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.is_required_for_agents_when_resolving_case"],[],["loc",[null,[14,42],[14,125]]]]],[],["loc",[null,[14,26],[14,126]]]],"checked",["subexpr","@mut",[["get","caseField.isRequiredOnResolution",["loc",[null,[14,135],[14,167]]]]],[],[]]],["loc",[null,[14,6],[14,169]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.heading.customer_settings"],[],["loc",[null,[20,48],[20,108]]]]],[],["loc",[null,[20,31],[20,110]]]],
        ["inline","ko-checkbox",[],["label",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.edit.label.is_visible_to_customers"],[],["loc",[null,[24,42],[24,106]]]]],[],["loc",[null,[24,26],[24,107]]]],"checked",["subexpr","@mut",[["get","caseField.isVisibleToCustomers",["loc",[null,[24,116],[24,146]]]]],[],[]]],["loc",[null,[24,6],[24,148]]]],
        ["block","if",[["get","caseField.isVisibleToCustomers",["loc",[null,[27,10],[27,40]]]]],[],0,null,["loc",[null,[27,4],[52,11]]]],
        ["block","if",[["get","caseField.fieldType.adminEditComponentName",["loc",[null,[56,6],[56,48]]]]],[],1,null,["loc",[null,[56,0],[58,7]]]],
        ["block","if",[["get","caseField.fieldType.isChoiceField",["loc",[null,[60,6],[60,39]]]]],[],2,null,["loc",[null,[60,0],[67,7]]]],
        ["block","if",[["subexpr","not",[["get","caseField.isSystem",["loc",[null,[69,11],[69,29]]]]],[],["loc",[null,[69,6],[69,30]]]]],[],3,null,["loc",[null,[69,0],[86,7]]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  }()));

});
define('frontend-cp/components/ko-admin/case-fields/select-type/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    setCaseFieldTypeAction: 'setCaseFieldType',

    actions: {
      setCaseFieldType: function setCaseFieldType(caseFieldType) {
        this.sendAction('setCaseFieldTypeAction', caseFieldType);
      }
    }
  });

});
define('frontend-cp/components/ko-admin/case-fields/select-type/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-fields/select-type/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin_case-fields_select-type");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","ko-admin_case-fields_select-type__text");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [1]);
          var element2 = dom.childAt(element0, [3]);
          var morphs = new Array(4);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createAttrMorph(element1, 'class');
          morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]),0,0);
          morphs[3] = dom.createMorphAt(dom.childAt(element2, [3]),0,0);
          return morphs;
        },
        statements: [
          ["element","action",["setCaseFieldType",["get","fieldType",["loc",[null,[2,76],[2,85]]]]],[],["loc",[null,[2,48],[2,87]]]],
          ["attribute","class",["concat",["ko-admin_case-fields_select-type__icon ",["get","fieldType.id",["loc",[null,[3,57],[3,69]]]]]]],
          ["inline","format-message",[["subexpr","intl-get",[["get","fieldType.nameIntlKey",["loc",[null,[5,38],[5,59]]]]],[],["loc",[null,[5,28],[5,60]]]]],[],["loc",[null,[5,11],[5,62]]]],
          ["inline","format-message",[["subexpr","intl-get",[["get","fieldType.descriptionIntlKey",["loc",[null,[6,38],[6,66]]]]],[],["loc",[null,[6,28],[6,67]]]]],[],["loc",[null,[6,11],[6,69]]]]
        ],
        locals: ["fieldType"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/case-fields/select-type/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","each",[["get","caseFieldTypes",["loc",[null,[1,8],[1,22]]]]],[],0,null,["loc",[null,[1,0],[9,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-admin/case-fields/type-icon/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    fieldType: null,

    iconClass: Ember['default'].computed.readOnly('fieldType.id'),
    classNameBindings: [':ko-admin_case-fields_type-icon', 'iconClass']
  });

});
define('frontend-cp/components/ko-admin/case-fields/type-icon/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/case-fields/type-icon/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-admin/case-forms/edit/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    caseForm: null,

    actions: {
      addCaseFieldToForm: function addCaseFieldToForm(caseField) {
        this.get('caseForm.fields').pushObject(caseField);
      },
      removeCaseFieldFromForm: function removeCaseFieldFromForm(caseField) {
        this.get('caseForm.fields').removeObject(caseField);
      }
    }

  });

});
define('frontend-cp/components/ko-admin/case-forms/edit/fields/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    caseFields: [],

    store: Ember['default'].inject.service(),
    availableCaseFields: [],
    addCaseFieldToForm: 'addCaseFieldToForm',
    removeCaseFieldFromForm: 'removeCaseFieldFromForm',

    initAvailableCaseFields: (function () {
      var _this = this;

      this.get('store').find('case-field').then(function (caseFields) {
        _this.set('availableCaseFields', caseFields);
      });
    }).on('init'),

    systemCaseFields: (function () {
      return this.get('caseFields').filter(function (caseField) {
        return caseField.get('isSystem');
      });
    }).property('caseFields', 'caseFields.@each.isSystem'),

    customCaseFields: (function () {
      return this.get('caseFields').filter(function (caseField) {
        return !caseField.get('isSystem');
      });
    }).property('caseFields', 'caseFields.@each.isSystem'),

    unusedCaseFields: (function () {
      var usedCustomFields = this.get('customCaseFields');

      var availableCustomFields = this.get('availableCaseFields').filter(function (field) {
        return !field.get('isSystem');
      });

      return availableCustomFields.filter(function (customField) {
        return usedCustomFields.indexOf(customField) === -1;
      });
    }).property('customCaseFields', 'availableCaseFields'),

    actions: {
      addCustomField: function addCustomField(customField) {
        this.sendAction('addCaseFieldToForm', customField);
      },
      removeCustomField: function removeCustomField(customField) {
        this.sendAction('removeCaseFieldFromForm', customField);
      }
    }

  });

});
define('frontend-cp/components/ko-admin/case-forms/edit/fields/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 6,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/fields/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","u-inline-block ko-admin_case-forms_edit_fields__field-title");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","u-inline-block");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","u-inline-block");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);
            morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]),0,0);
            return morphs;
          },
          statements: [
            ["content","field.title",["loc",[null,[3,77],[3,92]]]],
            ["inline","ko-admin/case-fields/type-icon",[],["fieldType",["subexpr","@mut",[["get","field.fieldType",["loc",[null,[4,75],[4,90]]]]],[],[]]],["loc",[null,[4,32],[4,92]]]],
            ["inline","format-message",[["subexpr","intl-get",[["get","field.fieldType.nameIntlKey",["loc",[null,[5,59],[5,86]]]]],[],["loc",[null,[5,49],[5,87]]]]],[],["loc",[null,[5,32],[5,89]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/fields/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-simple-box-row",[],[],0,null,["loc",[null,[2,2],[6,24]]]]
        ],
        locals: ["field"],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 10,
                "column": 2
              },
              "end": {
                "line": 15,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/fields/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","u-inline-block ko-admin_case-forms_edit_fields__field-title");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","u-inline-block");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","u-inline-block");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","u-inline-block ko-admin_case-forms_edit_fields__field-actions");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [7]);
            var morphs = new Array(5);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);
            morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]),0,0);
            morphs[3] = dom.createElementMorph(element0);
            morphs[4] = dom.createMorphAt(element0,0,0);
            return morphs;
          },
          statements: [
            ["content","field.title",["loc",[null,[11,77],[11,92]]]],
            ["inline","ko-admin/case-fields/type-icon",[],["fieldType",["subexpr","@mut",[["get","field.fieldType",["loc",[null,[12,75],[12,90]]]]],[],[]]],["loc",[null,[12,32],[12,92]]]],
            ["inline","format-message",[["subexpr","intl-get",[["get","field.fieldType.nameIntlKey",["loc",[null,[13,59],[13,86]]]]],[],["loc",[null,[13,49],[13,87]]]]],[],["loc",[null,[13,32],[13,89]]]],
            ["element","action",["removeCustomField",["get","field",["loc",[null,[14,108],[14,113]]]]],[],["loc",[null,[14,79],[14,115]]]],
            ["inline","format-message",[["subexpr","intl-get",["admin.caseforms.remove_from_form"],[],["loc",[null,[14,133],[14,178]]]]],[],["loc",[null,[14,116],[14,180]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/fields/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-simple-box-row",[],[],0,null,["loc",[null,[10,2],[15,24]]]]
        ],
        locals: ["field"],
        templates: [child0]
      };
    }());
    var child2 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 21,
                  "column": 4
                },
                "end": {
                  "line": 21,
                  "column": 83
                }
              },
              "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/fields/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [
              ["content","field.title",["loc",[null,[21,68],[21,83]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 19,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/fields/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["block","ko-dropdown/list/item",[],["action","addCustomField","content",["subexpr","@mut",[["get","field",["loc",[null,[21,61],[21,66]]]]],[],[]]],0,null,["loc",[null,[21,4],[21,109]]]]
          ],
          locals: ["field"],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 23,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/fields/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","each",[["get","unusedCaseFields",["loc",[null,[19,10],[19,26]]]]],[],0,null,["loc",[null,[19,2],[22,11]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/fields/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","each",[["get","systemCaseFields",["loc",[null,[1,8],[1,24]]]]],[],0,null,["loc",[null,[1,0],[7,9]]]],
        ["block","ko-reorderable-list",[],["reorderedListAction","reorderFields","items",["subexpr","@mut",[["get","customCaseFields",["loc",[null,[9,65],[9,81]]]]],[],[]]],1,null,["loc",[null,[9,0],[16,24]]]],
        ["block","ko-dropdown/select",[],["label",["subexpr","format-message",[["subexpr","intl-get",["admin.caseforms.label.add_new_field"],[],["loc",[null,[18,44],[18,92]]]]],[],["loc",[null,[18,28],[18,93]]]]],2,null,["loc",[null,[18,0],[23,23]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/components/ko-admin/case-forms/edit/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("fieldset");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("legend");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("fieldset");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("legend");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(fragment, [3]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [2]),0,0);
          morphs[1] = dom.createMorphAt(element0,4,4);
          morphs[2] = dom.createMorphAt(dom.childAt(element1, [2]),0,0);
          morphs[3] = dom.createMorphAt(element1,4,4);
          return morphs;
        },
        statements: [
          ["inline","format-message",[["subexpr","intl-get",["admin.caseforms.label.customer_form_title"],[],["loc",[null,[26,33],[26,87]]]]],[],["loc",[null,[26,16],[26,89]]]],
          ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","caseForm.customerTitle",["loc",[null,[27,34],[27,56]]]]],[],[]]],["loc",[null,[27,8],[27,58]]]],
          ["inline","format-message",[["subexpr","intl-get",["admin.caseforms.label.customer_form_description"],[],["loc",[null,[32,33],[32,93]]]]],[],["loc",[null,[32,16],[32,95]]]],
          ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","caseForm.description",["loc",[null,[33,34],[33,54]]]]],[],[]]],["loc",[null,[33,8],[33,56]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 57,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/case-forms/edit/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","form-section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-heading");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","form-group");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","form-label");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","form-section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-heading");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("fieldset");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","form-help");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","form-section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-heading");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("fieldset");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","form-help");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","form-section");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-heading");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","section-content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var element3 = dom.childAt(element2, [3, 1]);
        var element4 = dom.childAt(fragment, [2]);
        var element5 = dom.childAt(element4, [3]);
        var element6 = dom.childAt(element5, [1]);
        var element7 = dom.childAt(fragment, [4]);
        var element8 = dom.childAt(element7, [3, 1]);
        var element9 = dom.childAt(fragment, [6]);
        var morphs = new Array(12);
        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(element3, [1]),0,0);
        morphs[2] = dom.createMorphAt(element3,3,3);
        morphs[3] = dom.createMorphAt(dom.childAt(element4, [1]),0,0);
        morphs[4] = dom.createMorphAt(element6,1,1);
        morphs[5] = dom.createMorphAt(dom.childAt(element6, [3]),0,0);
        morphs[6] = dom.createMorphAt(element5,3,3);
        morphs[7] = dom.createMorphAt(dom.childAt(element7, [1]),0,0);
        morphs[8] = dom.createMorphAt(element8,1,1);
        morphs[9] = dom.createMorphAt(dom.childAt(element8, [3]),0,0);
        morphs[10] = dom.createMorphAt(dom.childAt(element9, [1]),0,0);
        morphs[11] = dom.createMorphAt(dom.childAt(element9, [3]),1,1);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["admin.caseforms.heading.agent_settings"],[],["loc",[null,[2,48],[2,99]]]]],[],["loc",[null,[2,31],[2,101]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.caseforms.label.field_title"],[],["loc",[null,[6,47],[6,93]]]]],[],["loc",[null,[6,30],[6,95]]]],
        ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","caseForm.title",["loc",[null,[7,32],[7,46]]]]],[],[]],"required",true],["loc",[null,[7,6],[7,62]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.caseforms.heading.customer_settings"],[],["loc",[null,[14,48],[14,102]]]]],[],["loc",[null,[14,31],[14,104]]]],
        ["inline","ko-checkbox",[],["label",["subexpr","format-message",[["subexpr","intl-get",["admin.caseforms.label.is_visible_to_customers"],[],["loc",[null,[18,42],[18,100]]]]],[],["loc",[null,[18,26],[18,101]]]],"checked",["subexpr","@mut",[["get","caseForm.isVisibleToCustomers",["loc",[null,[18,110],[18,139]]]]],[],[]]],["loc",[null,[18,6],[18,141]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.caseforms.help.is_visible_to_customers"],[],["loc",[null,[19,46],[19,103]]]]],[],["loc",[null,[19,29],[19,105]]]],
        ["block","if",[["get","caseForm.isVisibleToCustomers",["loc",[null,[22,10],[22,39]]]]],[],0,null,["loc",[null,[22,4],[36,11]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.heading.field_settings"],[],["loc",[null,[41,48],[41,105]]]]],[],["loc",[null,[41,31],[41,107]]]],
        ["inline","ko-toggle",[],["activated",["subexpr","@mut",[["get","caseForm.isEnabled",["loc",[null,[45,28],[45,46]]]]],[],[]]],["loc",[null,[45,6],[45,48]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.edit.help.is_enabled"],[],["loc",[null,[46,46],[46,96]]]]],[],["loc",[null,[46,29],[46,98]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.caseforms.heading.configure_form"],[],["loc",[null,[52,48],[52,99]]]]],[],["loc",[null,[52,31],[52,101]]]],
        ["inline","ko-admin/case-forms/edit/fields",[],["caseFields",["subexpr","@mut",[["get","caseForm.fields",["loc",[null,[55,49],[55,64]]]]],[],[]]],["loc",[null,[55,4],[55,66]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-admin/page-footer/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    cancelButtonText: 'Cancel',

    actions: {
      cancelAction: function cancelAction() {
        this.sendAction('cancelAction');
      },

      buttonAction: function buttonAction() {
        this.sendAction('buttonAction');
      }
    }
  });

});
define('frontend-cp/components/ko-admin/page-footer/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/page-footer/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin_page-footer__cancel");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1,1,1);
          return morphs;
        },
        statements: [
          ["element","action",["cancelAction"],[],["loc",[null,[2,44],[2,69]]]],
          ["content","cancelButtonText",["loc",[null,[3,4],[3,24]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/page-footer/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin_page-footer__action-button button button--primary");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0,1,1);
          return morphs;
        },
        statements: [
          ["element","action",["buttonAction"],[],["loc",[null,[8,74],[8,99]]]],
          ["content","buttonText",["loc",[null,[9,4],[9,18]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 7
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/page-footer/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","if",[["get","cancelAction",["loc",[null,[1,6],[1,18]]]]],[],0,null,["loc",[null,[1,0],[5,7]]]],
        ["block","if",[["get","buttonText",["loc",[null,[7,6],[7,16]]]]],[],1,null,["loc",[null,[7,0],[11,7]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-admin/page-header/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    title: null,

    classNames: ['ko-admin_page-header'],

    cancelButtonText: 'Cancel',

    titleTrail: (function () {
      var title = this.get('title');
      return title.slice(0, title.lastIndexOf('/') + 1);
    }).property('title'),

    pageTitle: (function () {
      var title = this.get('title');
      return title.slice(title.lastIndexOf('/') + 1).trim();
    }).property('title'),

    actions: {
      cancelAction: function cancelAction() {
        this.sendAction('cancelAction');
      },

      buttonAction: function buttonAction() {
        this.sendAction('buttonAction');
      }
    }
  });

});
define('frontend-cp/components/ko-admin/page-header/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/page-header/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1,"class","t-caption");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          return morphs;
        },
        statements: [
          ["content","titleTrail",["loc",[null,[3,28],[3,42]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/page-header/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin_page-header__cancel");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1,1,1);
          return morphs;
        },
        statements: [
          ["element","action",["cancelAction"],[],["loc",[null,[9,44],[9,69]]]],
          ["content","cancelButtonText",["loc",[null,[10,4],[10,24]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 18,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-admin/page-header/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-admin_page-header__action-button button button--primary");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0,1,1);
          return morphs;
        },
        statements: [
          ["element","action",["buttonAction"],[],["loc",[null,[15,74],[15,99]]]],
          ["content","buttonText",["loc",[null,[16,4],[16,18]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 7
          }
        },
        "moduleName": "frontend-cp/components/ko-admin/page-header/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-admin_page-header__title");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(element2,1,1);
        morphs[1] = dom.createMorphAt(element2,3,3);
        morphs[2] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[3] = dom.createMorphAt(fragment,4,4,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","if",[["get","titleTrail",["loc",[null,[2,8],[2,18]]]]],[],0,null,["loc",[null,[2,2],[4,9]]]],
        ["content","pageTitle",["loc",[null,[5,2],[5,15]]]],
        ["block","if",[["get","cancelAction",["loc",[null,[8,6],[8,18]]]]],[],1,null,["loc",[null,[8,0],[12,7]]]],
        ["block","if",[["get","buttonText",["loc",[null,[14,6],[14,16]]]]],[],2,null,["loc",[null,[14,0],[18,7]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/components/ko-agent-dropdown/component', ['exports', 'ember', 'frontend-cp/lib/keycodes', 'frontend-cp/components/mixins/drop-down-keyboard-nav'], function (exports, Ember, KeyCodes, DropdownKeyboardNav) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend(DropdownKeyboardNav['default'], {
    attributeBindings: ['data-region', 'tabindex'],
    dataRegion: 'navigation-new',
    tabindex: 0,
    classNames: ['u-inline-block'],
    navItems: [{ text: 'Case', path: 'session.cases.new', icon: 'images/icons/case.svg' }, { text: 'User', icon: 'images/icons/user.svg' }, { text: 'Organization', icon: 'images/icons/organization.svg' }],
    showDropdown: false,
    isMouseAccess: false,
    keyboardPosition: 0,
    skipNextClick: false,

    click: function click() {
      var skipNextClick = this.get('skipNextClick');
      if (!skipNextClick) {
        this.set('showDropdown', false);
      }
      this.set('skipNextClick', false);
      this.set('isMouseAccess', true);
    },

    focusIn: function focusIn() {
      var mouseAccess = this.get('isMouseAccess');
      if (!mouseAccess) {
        this.set('showDropdown', true);
      }
    },

    focusOut: function focusOut() {
      this.set('isMouseAccess', false);
      this.set('keyboardPosition', 0);
      this.set('showDropdown', false);
    },

    keyDown: function keyDown(e) {
      switch (e.keyCode) {
        case KeyCodes.up:
          {
            var navItems = this.get('navItems');
            this.moveSelectedItem(navItems.length, 'ul', 'up', 'keyboardPosition');
            return false;
          }
        case KeyCodes.down:
          {
            var navItems = this.get('navItems');
            this.set('showDropdown', true);
            this.moveSelectedItem(navItems.length, 'ul', 'down', 'keyboardPosition');
            return false;
          }
        case KeyCodes.tab:
          {
            this.set('showDropdown', false);
          }
        case KeyCodes.enter:
          {
            var keyboardPosition = this.get('keyboardPosition');
            this.$('ul li:nth-child(' + keyboardPosition + ') a').click();
            this.$().focus();
            this.set('showDropdown', false);
            this.set('keyboardPosition', 0);
            return false;
          }
      }
    },

    actions: {
      showDropdown: function showDropdown() {
        this.set('skipNextClick', true);
        this.set('showDropdown', true);
      }
    }
  });

});
define('frontend-cp/components/ko-agent-dropdown/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 8
              },
              "end": {
                "line": 12,
                "column": 8
              }
            },
            "moduleName": "frontend-cp/components/ko-agent-dropdown/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("img");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","t-center");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'src');
            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);
            return morphs;
          },
          statements: [
            ["attribute","src",["concat",[["get","item.icon",["loc",[null,[8,20],[8,29]]]]]]],
            ["content","item.text",["loc",[null,[10,10],[10,23]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 6
            },
            "end": {
              "line": 14,
              "column": 6
            }
          },
          "moduleName": "frontend-cp/components/ko-agent-dropdown/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1,"class","ko-agent-dropdown__item");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          return morphs;
        },
        statements: [
          ["block","link-to",[["get","item.path",["loc",[null,[7,19],[7,28]]]]],["class","ko-agent-dropdown__link"],0,null,["loc",[null,[7,8],[12,20]]]]
        ],
        locals: ["item"],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-agent-dropdown/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("a");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"tabindex","-1");
        dom.setAttribute(el1,"role","menu");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","box box--secondary");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("ul");
        dom.setAttribute(el3,"class","list-inline");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","box");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-caption t-small u-mb-");
        var el4 = dom.createTextNode("\n    Recently viewed:\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","flag flag--auto flag--small u-mb-");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag__img");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("img");
        dom.setAttribute(el5,"class","avatar");
        dom.setAttribute(el5,"src","https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg");
        dom.setAttribute(el5,"alt","");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag__body");
        var el5 = dom.createTextNode("\n        I can't open the internet.\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("p");
        dom.setAttribute(el5,"class","t-small t-caption");
        var el6 = dom.createTextNode("Samantha Jones");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","flag flag--auto flag--small u-mb-");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag__img");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("img");
        dom.setAttribute(el5,"class","avatar");
        dom.setAttribute(el5,"src","https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg");
        dom.setAttribute(el5,"alt","");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag__body");
        var el5 = dom.createTextNode("\n        I can't open the internet.\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("p");
        dom.setAttribute(el5,"class","t-small t-caption");
        var el6 = dom.createTextNode("Samantha Jones");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","flag flag--auto flag--small");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag__img");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("img");
        dom.setAttribute(el5,"class","avatar");
        dom.setAttribute(el5,"src","https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg");
        dom.setAttribute(el5,"alt","");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag__body");
        var el5 = dom.createTextNode("\n        I can't open the internet.\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("p");
        dom.setAttribute(el5,"class","t-small t-caption");
        var el6 = dom.createTextNode("Samantha Jones");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(fragment, [2]);
        var morphs = new Array(4);
        morphs[0] = dom.createAttrMorph(element1, 'class');
        morphs[1] = dom.createElementMorph(element1);
        morphs[2] = dom.createAttrMorph(element2, 'class');
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [1, 1]),1,1);
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",["ko-agent-dropdown__nav-new i-plus i-size-base",["subexpr","if",[["get","showDropdown",["loc",[null,[1,60],[1,72]]]]," is-active"],[],["loc",[null,[1,55],[1,87]]]]]]],
        ["element","action",["showDropdown"],[],["loc",[null,[1,89],[1,114]]]],
        ["attribute","class",["concat",["ko-agent-dropdown__drop box-container ",["subexpr","unless",[["get","showDropdown",["loc",[null,[2,59],[2,71]]]],"u-hidden"],[],["loc",[null,[2,50],[2,84]]]]]]],
        ["block","each",[["get","navItems",["loc",[null,[5,14],[5,22]]]]],[],0,null,["loc",[null,[5,6],[14,15]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-avatar/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    avatar: null,
    size: 'normal', // [small | normal | large]

    isLarge: (function () {
      return this.get('size') === 'large';
    }).property('size'),

    isSmall: (function () {
      return this.get('size') === 'small';
    }).property('size'),

    // will be used flip between avatar / gravatar etc when we need that functionality!
    imageURL: (function () {
      return this.get('avatar');
    }).property('avatar')
  });

});
define('frontend-cp/components/ko-avatar/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-avatar/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("img");
        dom.setAttribute(el2,"alt","");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0, 1]);
        var morphs = new Array(2);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createAttrMorph(element0, 'src');
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",["ko-avatar__image ",["subexpr","if",[["get","isSmall",["loc",[null,[2,36],[2,43]]]],"ko-avatar__image--small"],[],["loc",[null,[2,31],[2,71]]]]," ",["subexpr","if",[["get","isLarge",["loc",[null,[2,77],[2,84]]]],"ko-avatar__image--large"],[],["loc",[null,[2,72],[2,112]]]]]]],
        ["attribute","src",["concat",[["get","imageURL",["loc",[null,[2,121],[2,129]]]]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-breadcrumbs/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    breadcrumbs: null,
    activeBreadcrumb: null,

    initBreadcrumbs: (function () {
      if (!this.get('breadcrumbs')) {
        this.set('breadcrumbs', []);
      }
    }).on('init'),

    actions: {
      breadcrumbChange: function breadcrumbChange(id) {
        this.sendAction('action', id);
      }
    }
  });

});
define('frontend-cp/components/ko-breadcrumbs/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 4
            },
            "end": {
              "line": 5,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-breadcrumbs/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createElementMorph(element0);
          morphs[2] = dom.createMorphAt(element0,0,0);
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",["breadcrumbs__item ",["subexpr","if",[["subexpr","eq",[["get","activeBreadcrumb",["loc",[null,[4,42],[4,58]]]],["get","breadcrumb.id",["loc",[null,[4,59],[4,72]]]]],[],["loc",[null,[4,38],[4,73]]]],"breadcrumbs__item--active"],[],["loc",[null,[4,33],[4,103]]]]]]],
          ["element","action",["breadcrumbChange",["get","breadcrumb.id",["loc",[null,[4,133],[4,146]]]]],[],["loc",[null,[4,105],[4,148]]]],
          ["content","breadcrumb.name",["loc",[null,[4,149],[4,168]]]]
        ],
        locals: ["breadcrumb"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-breadcrumbs/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("ul");
        dom.setAttribute(el2,"class","breadcrumbs");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("li");
        dom.setAttribute(el3,"class","breadcrumbs__item breadcrumbs__action");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-large-right i-color-grey--dark");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0, 1]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(element1,1,1);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]),1,1);
        return morphs;
      },
      statements: [
        ["block","each",[["get","breadcrumbs",["loc",[null,[3,12],[3,23]]]]],[],0,null,["loc",[null,[3,4],[5,13]]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.next"],[],["loc",[null,[7,23],[7,48]]]]],[],["loc",[null,[7,6],[7,50]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-case-content/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    store: Ember['default'].inject.service(),
    errors: [],

    initChannel: (function () {
      this.set('channel', this.get('case.sourceChannel'));
    }).on('init'),

    initMessages: (function () {
      var _this = this;

      this.get('store').query('case-message', { parent: this.get('case'), page: 1 }).then(function (messages) {
        _this.set('messages', messages);
      });
    }).on('init'),

    tags: (function () {
      return this.get('case.tags').map(function (tag) {
        return tag.get('name');
      });
    }).property('case.tags.@each.name'),

    editedCaseFields: new Ember['default'].Object(),
    initDirtyCaseFieldHash: (function () {
      this.updateDirtyCaseFieldHash();
      this.set('isCaseSubjectEdited', this.get('case').hasDirtyAttribute('subject'));
      this.set('isTagsFieldEdited', this.get('case').hasDirtyHasManyRelationship('tags'));
    }).on('init'),

    macros: [],
    initMacros: (function () {
      var _this2 = this;

      this.get('store').find('macro').then(function (macros) {
        _this2.set('macros', macros);
      });
    }).on('init'),

    caseOrFormFields: (function () {
      var caseFields = this.get('caseFields');
      var form = this.get('case.form');
      return form ? form.get('fields') : caseFields;
    }).property('caseFields', 'case.form'),

    hasBrand: (function () {
      return !!this.get('case.brand.companyName');
    }).property('case.brand.companyName'),

    componentFor: function componentFor(fieldType) {
      switch (fieldType) {
        case 'CHECKBOX':
          return 'ko-case-field/checkbox';
        case 'TEXT':
          return 'ko-case-field/text';
        case 'SELECT':
          return 'ko-case-field/select';
        case 'STATUS':
          return 'ko-case-field/status';
        case 'TYPE':
          return 'ko-case-field/type';
        case 'PRIORITY':
          return 'ko-case-field/priority';
        case 'ASSIGNEE':
          return 'ko-case-field/assignee';
        default:
          return '';
      }
    },

    optionsForField: function optionsForField(field) {
      /*
       * System fields
       */
      switch (field.get('fieldType.id')) {
        case 'PRIORITY':
          return this.get('store').peekAll('case-priority');
        case 'STATUS':
          return this.get('store').peekAll('case-status').filter(function (status) {
            return status.get('statusType') !== 'NEW' && status.get('statusType') !== 'CLOSED';
          });
        case 'TYPE':
          return this.get('store').peekAll('case-type');

      }
    },

    updateDirtyCaseFieldHash: function updateDirtyCaseFieldHash() {
      var _this3 = this;

      var editedCaseFields = this.get('editedCaseFields');
      this.get('caseOrFormFields').forEach(function (field) {
        var relationshipKey = field.get('key');

        /* Hack for type - type is a reserved word */
        if (relationshipKey === 'type') {
          relationshipKey = 'caseType';
        }

        /* Hack for assignee - it is made up from two properties (case.assginee.team and case.assignee.agent) */
        if (relationshipKey === 'assignee') {
          if (_this3.get('case.assignee')) {
            editedCaseFields.set(field.get('id'), _this3.get('case.assignee').hasDirtyChanges());
          }
        } else {
          editedCaseFields.set(field.get('id'), _this3.get('case').hasDirtyBelongsToRelationship(relationshipKey));
        }
      });
      //console.log(editedCaseFields);
    },

    resetCaseFormState: function resetCaseFormState() {
      this.set('errors', []);
      this.get('postEditor').clear();
      this.updateDirtyCaseFieldHash();
      this.set('isCaseSubjectEdited', this.get('case').hasDirtyAttribute('subject'));
    },

    actions: {
      setChannel: function setChannel(channel) {
        this.set('channel', channel);
      },
      setPriority: function setPriority(priority) {
        this.set('case.priority', priority);
        this.updateDirtyCaseFieldHash();
      },
      setStatus: function setStatus(status) {
        this.set('case.status', status);
        this.updateDirtyCaseFieldHash();
      },
      setType: function setType(type) {
        this.set('case.caseType', type);
        this.updateDirtyCaseFieldHash();
      },
      setSubject: function setSubject(subject) {
        this.set('case.subject', subject);
        this.set('isCaseSubjectEdited', this.get('case').hasDirtyAttribute('subject'));
      },
      setAssignee: function setAssignee(team, agent) {
        if (!this.get('case.assignee.teamFragment')) {
          this.set('case.assignee.teamFragment', this.get('store').createFragment('relationship-fragment'));
        }
        this.set('case.assignee.teamFragment.relationshipId', team.get('id'));

        if (!this.get('case.assginee.agentFragment')) {
          this.set('case.assignee.agentFragment', this.get('store').createFragment('relationship-fragment'));
        }
        this.set('case.assignee.agentFragment.relationshipId', agent ? agent.get('id') : null);
        this.updateDirtyCaseFieldHash();
      },

      addTag: function addTag(tagName) {
        var newTag = this.get('store').createRecord('tag', { name: tagName });
        this.get('case.tags').pushObject(newTag);
        this.set('isTagsFieldEdited', this.get('case').hasDirtyHasManyRelationship('tags'));
      },
      removeTag: function removeTag(tagName) {
        var tags = this.get('case.tags');
        var tag = tags.find(function (tag) {
          return tag.get('name') === tagName;
        });
        if (tag) {
          tags.removeObject(tag);
          this.set('isTagsFieldEdited', this.get('case').hasDirtyHasManyRelationship('tags'));
        }
      },

      submit: function submit() {
        var _this4 = this;

        var channel = this.get('channel');
        var editor = this.get('postEditor');
        var post = editor.getMarkdown().trim();

        if (!post) {
          // we are just updating the case -- don't create a case-reply
          this.get('case').save().then(function () {
            _this4.resetCaseFormState();
          }, function (e) {
            _this4.set('errors', e.errors);
          });
        } else {
          if (editor.get('activeMode') === 'note') {
            this.get('case').saveWithNote(post).then(function (caseNote) {
              _this4.resetCaseFormState();
            }, function (e) {
              _this4.set('errors', e.errors);
            });
          } else {
            this.get('case').saveWithPost(post, channel).then(function (caseReply) {
              caseReply.get('post').then(function (newPost) {
                _this4.get('messages').pushObject(newPost);
              });
              _this4.resetCaseFormState();
            }, function (e) {
              _this4.set('errors', e.errors);
            });
          }
        }
      },

      replyWithQuote: function replyWithQuote(quote) {
        this.$('.ql-editor div').remove();
        this.$('.ql-editor').append('<blockquote>' + quote + '</blockquote>');
      },

      applyMacro: function applyMacro(macro) {
        var currentCase = this.get('case');
        var contentsToAdd = macro.get('contents');
        var newStatus = macro.get('properties.status');
        var newPriority = macro.get('properties.priority');
        var newType = macro.get('properties.macroType');
        var newAssignedTeam = macro.get('assignee') ? macro.get('assignee.team') : null;
        var newAssignedAgent = macro.get('assignee') ? macro.get('assignee.agent') : null;

        if (contentsToAdd) {
          var currentContents = this.get('postEditor').getMarkdown();
          if (currentContents) {
            this.get('postEditor').appendHTML('<div></div><div></div>' + currentContents);
          } else {
            this.get('postEditor').setHTML(currentContents);
          }
        }

        if (newStatus) {
          currentCase.set('status', newStatus);
        }
        if (newPriority) {
          currentCase.set('priority', newPriority);
        }
        if (newType) {
          currentCase.set('caseType', newType);
        }
        if (newAssignedTeam) {
          this.send('setAssignee', newAssignedTeam, newAssignedAgent);
        }
      }
    }
  });

});
define('frontend-cp/components/ko-case-content/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 55,
                  "column": 10
                },
                "end": {
                  "line": 63,
                  "column": 10
                }
              },
              "moduleName": "frontend-cp/components/ko-case-content/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["inline","component",[["subexpr","ko-helper",[["get","componentFor",["loc",[null,[56,35],[56,47]]]],["get","field.fieldType.id",["loc",[null,[56,48],[56,66]]]]],[],["loc",[null,[56,24],[56,67]]]]],["case",["subexpr","@mut",[["get","case",["loc",[null,[57,19],[57,23]]]]],[],[]],"field",["subexpr","@mut",[["get","field",["loc",[null,[58,20],[58,25]]]]],[],[]],"errors",["subexpr","@mut",[["get","errors",["loc",[null,[59,21],[59,27]]]]],[],[]],"options",["subexpr","ko-contextual-helper",[["get","optionsForField",["loc",[null,[60,44],[60,59]]]],["get","this",["loc",[null,[60,60],[60,64]]]],["get","field",["loc",[null,[60,65],[60,70]]]]],[],["loc",[null,[60,22],[60,71]]]],"editedCaseFields",["subexpr","@mut",[["get","editedCaseFields",["loc",[null,[61,31],[61,47]]]]],[],[]]],["loc",[null,[56,12],[62,14]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 54,
                "column": 8
              },
              "end": {
                "line": 64,
                "column": 8
              }
            },
            "moduleName": "frontend-cp/components/ko-case-content/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","if",[["subexpr","ko-helper",[["get","componentFor",["loc",[null,[55,27],[55,39]]]],["get","field.fieldType.id",["loc",[null,[55,40],[55,58]]]]],[],["loc",[null,[55,16],[55,59]]]]],[],0,null,["loc",[null,[55,10],[63,17]]]]
          ],
          locals: ["field"],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 6
            }
          },
          "moduleName": "frontend-cp/components/ko-case-content/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1,"class","info-bar-item");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2,"class","button button--primary u-1/1");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(6);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0,0,0);
          morphs[2] = dom.createMorphAt(fragment,3,3,contextualElement);
          morphs[3] = dom.createMorphAt(fragment,5,5,contextualElement);
          morphs[4] = dom.createMorphAt(fragment,7,7,contextualElement);
          morphs[5] = dom.createMorphAt(fragment,9,9,contextualElement);
          return morphs;
        },
        statements: [
          ["element","action",["submit"],[],["loc",[null,[50,55],[50,74]]]],
          ["inline","format-message",[["subexpr","intl-get",["cases.submit"],[],["loc",[null,[50,92],[50,117]]]]],[],["loc",[null,[50,75],[50,119]]]],
          ["inline","ko-case-field/requester",[],["requester",["subexpr","@mut",[["get","case.requester",["loc",[null,[52,44],[52,58]]]]],[],[]]],["loc",[null,[52,8],[52,60]]]],
          ["inline","ko-case-field/tags",[],["tags",["subexpr","@mut",[["get","tags",["loc",[null,[53,34],[53,38]]]]],[],[]],"onTagAddition","addTag","onTagRemoval","removeTag","isEdited",["subexpr","@mut",[["get","isTagsFieldEdited",["loc",[null,[53,96],[53,113]]]]],[],[]]],["loc",[null,[53,8],[53,115]]]],
          ["block","each",[["get","caseOrFormFields",["loc",[null,[54,16],[54,32]]]]],[],0,null,["loc",[null,[54,8],[64,17]]]],
          ["inline","ko-case/sla-sidebar",[],["sla",["subexpr","@mut",[["get","case.sla",["loc",[null,[65,34],[65,42]]]]],[],[]],"slaMetrics",["subexpr","@mut",[["get","case.slaMetrics",["loc",[null,[65,54],[65,69]]]]],[],[]]],["loc",[null,[65,8],[65,71]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 70,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-case-content/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout layout--flush u-mt");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","layout__item u-2/3");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag--bottom");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__img");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("img");
        dom.setAttribute(el6,"alt","");
        dom.setAttribute(el6,"class","header__image");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__body");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("h4");
        dom.setAttribute(el6,"class","header__title");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("p");
        dom.setAttribute(el6,"class","header__subtitle");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("\n ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","layout__item u-1/3");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__body");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("ul");
        dom.setAttribute(el6,"class","list-inline u-mv t-right");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("li");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("li");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("li");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout--flush u-mt");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","layout__item u-2/3");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","content__main content__main--has-infobar");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("\n ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","layout__item u-1/3");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element2, [1, 1]);
        var element4 = dom.childAt(element3, [1, 1]);
        var element5 = dom.childAt(element3, [3]);
        var element6 = dom.childAt(element2, [3, 1, 1, 1]);
        var element7 = dom.childAt(element1, [3]);
        var element8 = dom.childAt(element7, [1, 1]);
        var morphs = new Array(9);
        morphs[0] = dom.createAttrMorph(element4, 'src');
        morphs[1] = dom.createMorphAt(dom.childAt(element5, [1]),1,1);
        morphs[2] = dom.createMorphAt(dom.childAt(element5, [3]),1,1);
        morphs[3] = dom.createMorphAt(dom.childAt(element6, [1]),1,1);
        morphs[4] = dom.createMorphAt(dom.childAt(element6, [3]),1,1);
        morphs[5] = dom.createMorphAt(dom.childAt(element6, [5]),1,1);
        morphs[6] = dom.createMorphAt(element8,1,1);
        morphs[7] = dom.createMorphAt(element8,3,3);
        morphs[8] = dom.createMorphAt(dom.childAt(element7, [3]),1,1);
        return morphs;
      },
      statements: [
        ["attribute","src",["concat",[["get","case.requester.avatar",["loc",[null,[6,22],[6,43]]]]]]],
        ["inline","ko-editable-text",[],["value",["subexpr","@mut",[["get","case.subject",["loc",[null,[10,37],[10,49]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isCaseSubjectEdited",["loc",[null,[10,59],[10,78]]]]],[],[]],"onValueChange","setSubject"],["loc",[null,[10,12],[10,107]]]],
        ["inline","format-message",[["subexpr","intl-get",["cases.subheader"],[],["loc",[null,[13,29],[13,57]]]]],["time",["subexpr","@mut",[["get","case.createdAt",["loc",[null,[14,17],[14,31]]]]],[],[]],"channel",["subexpr","format-message",[["subexpr","intl-get",[["subexpr","ko-concat",["cases.channelType.",["get","case.sourceChannel.channelType",["loc",[null,[15,78],[15,108]]]]],[],["loc",[null,[15,46],[15,109]]]]],[],["loc",[null,[15,36],[15,110]]]]],[],["loc",[null,[15,20],[15,111]]]],"hasBrand",["subexpr","@mut",[["get","hasBrand",["loc",[null,[16,21],[16,29]]]]],[],[]],"brand",["subexpr","@mut",[["get","case.brand.companyName",["loc",[null,[17,18],[17,40]]]]],[],[]]],["loc",[null,[13,12],[17,42]]]],
        ["inline","ko-case/macro-selector",[],["macros",["subexpr","@mut",[["get","macros",["loc",[null,[27,46],[27,52]]]]],[],[]],"onMacroSelected","applyMacro"],["loc",[null,[27,14],[27,83]]]],
        ["inline","ko-case/macro-selector",[],["macros",["subexpr","@mut",[["get","macros",["loc",[null,[30,46],[30,52]]]]],[],[]],"onMacroSelected","applyMacro"],["loc",[null,[30,14],[30,83]]]],
        ["inline","ko-case/macro-selector",[],["macros",["subexpr","@mut",[["get","macros",["loc",[null,[33,46],[33,52]]]]],[],[]],"onMacroSelected","applyMacro"],["loc",[null,[33,14],[33,83]]]],
        ["inline","ko-text-editor",[],["viewName","postEditor","channels",["subexpr","@mut",[["get","case.replyChannels",["loc",[null,[43,56],[43,74]]]]],[],[]],"channel",["subexpr","@mut",[["get","channel",["loc",[null,[43,83],[43,90]]]]],[],[]],"onChannelChange","setChannel"],["loc",[null,[43,8],[43,121]]]],
        ["inline","ko-feed",[],["events",["subexpr","@mut",[["get","messages",["loc",[null,[44,25],[44,33]]]]],[],[]],"onReplyWithQuote","replyWithQuote"],["loc",[null,[44,8],[44,69]]]],
        ["block","ko-info-bar",[],[],0,null,["loc",[null,[48,6],[66,22]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-case-field/assignee/component', ['exports', 'ember', 'frontend-cp/components/ko-case-field/base/component'], function (exports, Ember, BaseCaseField) {

  'use strict';

  exports['default'] = BaseCaseField['default'].extend({
    //Params:
    'case': null,
    onAssigneeSelected: 'setAssignee',

    assigneeValues: [],
    store: Ember['default'].inject.service(),

    currentlySelectedValue: (function () {
      var agentName = this.get('case.assignee.agent.fullName');
      var teamName = this.get('case.assignee.team.title');
      return this.generateTeamAgentValue(teamName, agentName).split(',').join('/');
    }).property('case.assignee.agent.fullName', 'case.assignee.team.title'),

    setAssigneeValues: (function () {
      var _this = this;

      var assigneeValuePromises = {
        agents: this.get('store').find('user', { role: 'agent' }),
        teams: this.get('store').find('team')
      };

      Ember['default'].RSVP.hash(assigneeValuePromises).then(function (hash) {
        var assigneeValues = [];

        hash.agents.forEach(function (agent) {
          var teams = agent.get('teams');
          teams.forEach(function (team) {
            var teamAgentId = _this.generateTeamAgentId(team.get('id'), agent.get('id'));
            var teamAgentValue = _this.generateTeamAgentValue(team.get('title'), agent.get('fullName'));
            assigneeValues.pushObject({ id: teamAgentId, value: teamAgentValue });
          });
        });

        hash.teams.forEach(function (team) {
          assigneeValues.pushObject({ id: team.get('id'), value: team.get('title') });
        });

        _this.set('assigneeValues', assigneeValues);
      });
    }).on('init'),

    actions: {
      onAssigneeSelected: function onAssigneeSelected(agentTeamId) {
        var agent = this.getAgentFromAgentTeamId(agentTeamId);
        var team = this.getTeamFromAgentTeamId(agentTeamId);
        this.sendAction('onAssigneeSelected', team, agent);
      }
    },

    getAgentFromAgentTeamId: function getAgentFromAgentTeamId(agentTeamId) {
      var idParts = agentTeamId.split('-');
      if (idParts.length !== 2) {
        return null;
      }
      var agentId = idParts[1];
      return this.get('store').getById('user', agentId);
    },

    getTeamFromAgentTeamId: function getTeamFromAgentTeamId(agentTeamId) {
      var teamId = agentTeamId.split('-')[0];
      return this.get('store').getById('team', teamId);
    },

    generateTeamAgentId: function generateTeamAgentId(teamId, agentId) {
      if (!agentId) {
        return teamId;
      }
      return teamId + '-' + agentId;
    },

    generateTeamAgentValue: function generateTeamAgentValue(teamName, agentName) {
      teamName = teamName ? teamName : '';

      return agentName ? teamName + ',' + agentName : teamName;
    }
  });

});
define('frontend-cp/components/ko-case-field/assignee/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/assignee/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/drill-down",[],["title","Assignee","options",["subexpr","@mut",[["get","assigneeValues",["loc",[null,[3,10],[3,24]]]]],[],[]],"value",["subexpr","@mut",[["get","currentlySelectedValue",["loc",[null,[4,8],[4,30]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[5,11],[5,19]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","caseFieldError",["loc",[null,[6,12],[6,26]]]]],[],[]],"onValueChange","onAssigneeSelected"],["loc",[null,[1,0],[8,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-field/base/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: '',
    isEdited: false,
    updateIsEditedFromHash: (function () {
      var _this = this;

      /*
       * We take an object holding the edited status of all case fields with the format:
       * { id: isEdited, ... }
       *
       * we need to observe isEditedObject[field.id] which we can't do as a normal CP because field.id is dynamic
       * So this is just a computed property wrapped in an observer (so we have the context)
       */
      this.set('isEdited', Ember['default'].computed('editedCaseFields.' + this.get('field.id'), function () {
        return _this.get('editedCaseFields').get(_this.get('field.id'));
      }));
    }).observes('field.id').on('init'),

    actions: {
      valueChanged: function valueChanged(newValue) {
        this.set('isErrored', false);
        this.sendAction('onValueChanged', newValue);
      }
    }

  });

});
define('frontend-cp/components/ko-case-field/checkbox/component', ['exports', 'frontend-cp/components/ko-case-field/custom/component'], function (exports, Custom) {

  'use strict';

  var valueToArray = function valueToArray(value) {
    return (value || '').split(',').filter(function (v) {
      return v !== '';
    });
  };

  exports['default'] = Custom['default'].extend({
    value: (function () {
      return valueToArray(this.get('valueObject.value'));
    }).property('valueObject.value'),

    isEdited: (function () {
      var valueObject = this.get('valueObject');
      var originalValue = this.get('valueObject._data.value');
      if (originalValue === undefined && valueObject) {
        // Special treatment when the value didn't exist before and is set
        // to an empty array
        return !!valueObject.get('value.length');
      } else {
        return !!valueObject && !!valueObject.changedAttributes().value;
      }
    }).property('valueObject', 'valueObject.value'),

    actions: {
      selectionChanged: function selectionChanged(value) {
        this.send('valueChanged', value.join(','));
      }
    }
  });

});
define('frontend-cp/components/ko-case-field/checkbox/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/checkbox/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/checkbox",[],["title",["subexpr","@mut",[["get","field.title",["loc",[null,[2,8],[2,19]]]]],[],[]],"options",["subexpr","@mut",[["get","field.options",["loc",[null,[3,10],[3,23]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[4,11],[4,19]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","isErrored",["loc",[null,[5,12],[5,21]]]]],[],[]],"value",["subexpr","@mut",[["get","value",["loc",[null,[6,8],[6,13]]]]],[],[]],"onValueChange","selectionChanged"],["loc",[null,[1,0],[8,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-field/custom/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  var findCustomFieldValue = function findCustomFieldValue(values, field) {
    return values.reduce(function (acc, value) {
      return acc || (value.get('field') === field ? value : acc);
    });
  };

  exports['default'] = Ember['default'].Component.extend({
    // params
    'case': null,
    field: null,
    errors: [],

    tagName: '',
    store: Ember['default'].inject.service(),

    allValues: Ember['default'].computed.oneWay('case.customFields'),

    valueObject: (function () {
      return findCustomFieldValue(this.get('allValues'), this.get('field'));
    }).property('allValues.@each.field', 'field'),

    isEdited: (function () {
      var valueObject = this.get('valueObject');
      return !!valueObject && !!valueObject.changedAttributes().value;
    }).property('valueObject', 'valueObject.value'),

    onErrors: (function () {
      var _this = this;

      this.set('isErrored', this.get('errors').reduce(function (acc, error) {
        return acc || error.parameter === _this.get('field.key');
      }, false));
    }).observes('errors.@each'),

    actions: {
      valueChanged: function valueChanged(value) {
        this.set('isErrored', false);
        var field = this.get('field');
        var valueObject = findCustomFieldValue(this.get('allValues'), field);
        if (!valueObject) {
          valueObject = this.get('allValues').createFragment({
            fieldFragment: this.get('store').createFragment('relationship-fragment', {
              relationshipId: field.id,
              relationshipType: field.type
            })
          });
        }
        valueObject.set('value', value);
      }
    }
  });

});
define('frontend-cp/components/ko-case-field/priority/component', ['exports', 'ember', 'frontend-cp/components/ko-case-field/base/component'], function (exports, Ember, BaseCaseField) {

  'use strict';

  exports['default'] = BaseCaseField['default'].extend({
    // params
    'case': null,
    field: null,
    errors: [],
    editedCaseFields: null,
    options: null,

    tagName: '',
    isErrored: false,
    onValueChanged: 'setPriority',

    value: Ember['default'].computed.readOnly('case.priority'),

    onErrors: (function () {
      this.set('isErrored', this.get('errors').reduce(function (acc, error) {
        return acc || error.parameter === 'priority_id';
      }, false));
    }).observes('errors.@each')
  });

});
define('frontend-cp/components/ko-case-field/priority/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/priority/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/select",[],["title",["subexpr","@mut",[["get","field.title",["loc",[null,[2,8],[2,19]]]]],[],[]],"options",["subexpr","@mut",[["get","options",["loc",[null,[3,10],[3,17]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[4,11],[4,19]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","isErrored",["loc",[null,[5,12],[5,21]]]]],[],[]],"value",["subexpr","@mut",[["get","value",["loc",[null,[6,8],[6,13]]]]],[],[]],"onValueChange","valueChanged","labelPath","label"],["loc",[null,[1,0],[9,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-field/requester/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: ''
  });

});
define('frontend-cp/components/ko-case-field/requester/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/requester/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/text",[],["title",["subexpr","format-message",[["subexpr","intl-get",["cases.field_title.requester"],[],["loc",[null,[2,24],[2,64]]]]],[],["loc",[null,[2,8],[2,65]]]],"value",["subexpr","@mut",[["get","requester.fullName",["loc",[null,[3,8],[3,26]]]]],[],[]],"editable",false],["loc",[null,[1,0],[5,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-field/select/component', ['exports', 'frontend-cp/components/ko-case-field/custom/component'], function (exports, Custom) {

	'use strict';

	exports['default'] = Custom['default'].extend({});

});
define('frontend-cp/components/ko-case-field/select/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/select/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/select",[],["title",["subexpr","@mut",[["get","field.title",["loc",[null,[2,8],[2,19]]]]],[],[]],"options",["subexpr","@mut",[["get","field.options",["loc",[null,[3,10],[3,23]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[4,11],[4,19]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","isErrored",["loc",[null,[5,12],[5,21]]]]],[],[]],"value",["subexpr","@mut",[["get","valueObject.value",["loc",[null,[6,8],[6,25]]]]],[],[]],"onValueChange","valueChanged","idPath","id","labelPath","value"],["loc",[null,[1,0],[10,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-field/status/component', ['exports', 'ember', 'frontend-cp/components/ko-case-field/base/component'], function (exports, Ember, BaseCaseField) {

  'use strict';

  exports['default'] = BaseCaseField['default'].extend({
    // params
    'case': null,
    field: null,
    errors: [],
    options: [],

    tagName: '',
    store: Ember['default'].inject.service(),
    isErrored: false,
    isEdited: false,
    onValueChanged: 'setStatus',

    value: Ember['default'].computed.readOnly('case.status'),

    onErrors: (function () {
      this.set('isErrored', this.get('errors').reduce(function (acc, error) {
        return acc || error.parameter === 'status_id';
      }, false));
    }).observes('errors.@each')
  });

});
define('frontend-cp/components/ko-case-field/status/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/status/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/select",[],["title",["subexpr","@mut",[["get","field.title",["loc",[null,[2,8],[2,19]]]]],[],[]],"options",["subexpr","@mut",[["get","options",["loc",[null,[3,10],[3,17]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[4,11],[4,19]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","isErrored",["loc",[null,[5,12],[5,21]]]]],[],[]],"value",["subexpr","@mut",[["get","value",["loc",[null,[6,8],[6,13]]]]],[],[]],"onValueChange","valueChanged","labelPath","label"],["loc",[null,[1,0],[9,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-field/tags/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    tags: [],
    onTagAddition: null,
    onTagRemoval: null,

    actions: {
      onTagAddition: function onTagAddition(tagName) {
        this.sendAction('onTagAddition', tagName);
      },
      onTagRemoval: function onTagRemoval(tagName) {
        this.sendAction('onTagRemoval', tagName);
      }
    }
  });

});
define('frontend-cp/components/ko-case-field/tags/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 111
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/tags/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/tags",[],["selectedTags",["subexpr","@mut",[["get","tags",["loc",[null,[1,29],[1,33]]]]],[],[]],"onTagAddition","onTagAddition","onTagRemoval","onTagRemoval","isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[1,101],[1,109]]]]],[],[]]],["loc",[null,[1,0],[1,111]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-field/text/component', ['exports', 'frontend-cp/components/ko-case-field/custom/component'], function (exports, Custom) {

	'use strict';

	exports['default'] = Custom['default'].extend({});

});
define('frontend-cp/components/ko-case-field/text/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/text/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/text",[],["title",["subexpr","@mut",[["get","field.title",["loc",[null,[2,8],[2,19]]]]],[],[]],"value",["subexpr","@mut",[["get","valueObject.value",["loc",[null,[3,8],[3,25]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[4,11],[4,19]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","isErrored",["loc",[null,[5,12],[5,21]]]]],[],[]],"onValueChange","valueChanged"],["loc",[null,[1,0],[7,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-field/type/component', ['exports', 'ember', 'frontend-cp/components/ko-case-field/base/component'], function (exports, Ember, BaseCaseField) {

  'use strict';

  exports['default'] = BaseCaseField['default'].extend({
    // params
    'case': null,
    field: null,

    tagName: '',
    isEdited: false,
    onValueChanged: 'setType',

    value: Ember['default'].computed.readOnly('case.caseType')
  });

});
define('frontend-cp/components/ko-case-field/type/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case-field/type/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-field/select",[],["title",["subexpr","@mut",[["get","field.title",["loc",[null,[2,8],[2,19]]]]],[],[]],"options",["subexpr","@mut",[["get","options",["loc",[null,[3,10],[3,17]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[4,11],[4,19]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","isErrored",["loc",[null,[5,12],[5,21]]]]],[],[]],"value",["subexpr","@mut",[["get","value",["loc",[null,[6,8],[6,13]]]]],[],[]],"onValueChange","valueChanged","labelPath","label"],["loc",[null,[1,0],[9,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case-metric/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'li',
    classNames: ['info-bar-item', 'u-no-bottom-border']
  });

});
define('frontend-cp/components/ko-case-metric/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-case-metric/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h1");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","flag__body");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("h4");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("p");
          dom.setAttribute(el2,"class","t-small t-caption");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
          morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]),0,0);
          return morphs;
        },
        statements: [
          ["content","metric.value",["loc",[null,[5,6],[5,22]]]],
          ["inline","format-message",[["subexpr","intl-get",["cases.metric.unresolved"],[],["loc",[null,[8,25],[8,61]]]]],[],["loc",[null,[8,8],[8,63]]]],
          ["inline","format-message",[["subexpr","intl-get",["cases.metric.total"],[],["loc",[null,[9,50],[9,81]]]]],["number",["subexpr","@mut",[["get","metric.total",["loc",[null,[9,89],[9,101]]]]],[],[]]],["loc",[null,[9,33],[9,103]]]]
        ],
        locals: ["metric"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-case-metric/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("p");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","flag flag--auto flag--small u-mb-");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,3],[1,12]]]],
        ["block","each",[["get","metrics",["loc",[null,[4,8],[4,15]]]]],[],0,null,["loc",[null,[4,0],[11,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-case/macro-selector/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    macros: [],
    onMacroSelected: null,

    // build a value list for the option drilldown
    macroValueList: (function () {
      var valueList = this.get('macros').map(function (macro) {
        return { id: macro.get('id'), value: macro.get('title') };
      });
      return valueList;
    }).property('macros.@each'),

    actions: {
      onMacroSelected: function onMacroSelected(macroId) {
        var selectedMacro = this.get('macros').filter(function (macro) {
          return macro.get('id') === macroId;
        }).get('firstObject');
        this.sendAction('onMacroSelected', selectedMacro);
      }
    }

  });

});
define('frontend-cp/components/ko-case/macro-selector/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/components/ko-case/macro-selector/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-dropdown/drill-down",[],["label","Macro","title",["subexpr","format-message",[["subexpr","intl-get",["cases.applymacro"],[],["loc",[null,[3,24],[3,53]]]]],[],["loc",[null,[3,8],[3,54]]]],"placeholder",["subexpr","format-message",[["subexpr","intl-get",["cases.applymacroplaceholder"],[],["loc",[null,[4,30],[4,70]]]]],[],["loc",[null,[4,14],[4,71]]]],"options",["subexpr","@mut",[["get","macroValueList",["loc",[null,[5,10],[5,24]]]]],[],[]],"contextModalId","macroDrillDownInline","onSelect","onMacroSelected"],["loc",[null,[1,0],[8,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-case/sla-sidebar/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    sla: null,
    slaMetrics: null
  });

});
define('frontend-cp/components/ko-case/sla-sidebar/metric/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    metric: null,

    tagName: 'tr',

    statusClassName: (function () {
      var status = this.get('metric.status');
      return 'ko-case_sla-sidebar__data--' + status.toLowerCase();
    }).property('metric.status'),

    iconClass: (function () {
      var state = this.get('metric.state'),
          status = this.get('metric.status');

      var iconClass = this.getIconClassName(state, status);
      return iconClass + ' t-' + status.toLowerCase();
    }).property('metric.state', 'metric.status'),

    getIconClassName: function getIconClassName(state, status) {
      if (state === 'PAUSED') {
        return 'i-paused';
      }
      if (state === 'ACTIVE') {
        return 'i-clock';
      }
      // state must be COMPLETED
      if (status === 'GOOD') {
        return 'i-tick';
      }
      return 'i-cross-bold';
    }
  });

});
define('frontend-cp/components/ko-case/sla-sidebar/metric/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-case/sla-sidebar/metric/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    -\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 14,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-case/sla-sidebar/metric/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
          return morphs;
        },
        statements: [
          ["content","metric.numberOfWholeDaysRemaining",["loc",[null,[13,4],[13,41]]]],
          ["inline","format-message",[["subexpr","intl-get",["generic.day_abbreviation"],[],["loc",[null,[13,58],[13,95]]]]],[],["loc",[null,[13,41],[13,97]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 18,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-case/sla-sidebar/metric/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
          return morphs;
        },
        statements: [
          ["content","metric.numberOfWholeHoursRemaining",["loc",[null,[17,4],[17,42]]]],
          ["inline","format-message",[["subexpr","intl-get",["generic.hour_abbreviation"],[],["loc",[null,[17,59],[17,97]]]]],[],["loc",[null,[17,42],[17,99]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-case/sla-sidebar/metric/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
          return morphs;
        },
        statements: [
          ["content","metric.numberOfWholeMinutesRemaining",["loc",[null,[21,4],[21,44]]]],
          ["inline","format-message",[["subexpr","intl-get",["generic.minute_abbreviation"],[],["loc",[null,[21,61],[21,101]]]]],[],["loc",[null,[21,44],[21,103]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-case/sla-sidebar/metric/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("td");
        dom.setAttribute(el1,"class","ko-case_sla-sidebar__label");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        dom.setAttribute(el1,"class","u-pr- t-right");
        var el2 = dom.createTextNode("\n  in\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("td");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("i");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var element1 = dom.childAt(element0, [9]);
        var morphs = new Array(7);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);
        morphs[1] = dom.createAttrMorph(element0, 'class');
        morphs[2] = dom.createMorphAt(element0,1,1);
        morphs[3] = dom.createMorphAt(element0,3,3);
        morphs[4] = dom.createMorphAt(element0,5,5);
        morphs[5] = dom.createMorphAt(element0,7,7);
        morphs[6] = dom.createAttrMorph(element1, 'class');
        return morphs;
      },
      statements: [
        ["content","metric.title",["loc",[null,[2,2],[2,18]]]],
        ["attribute","class",["concat",["ko-case_sla-sidebar__data ",["get","statusClassName",["loc",[null,[7,39],[7,54]]]]]]],
        ["block","if",[["get","metric.isBreached",["loc",[null,[8,8],[8,25]]]]],[],0,null,["loc",[null,[8,2],[10,9]]]],
        ["block","if",[["get","metric.numberOfWholeDaysRemaining",["loc",[null,[12,8],[12,41]]]]],[],1,null,["loc",[null,[12,2],[14,9]]]],
        ["block","if",[["get","metric.numberOfWholeHoursRemaining",["loc",[null,[16,8],[16,42]]]]],[],2,null,["loc",[null,[16,2],[18,9]]]],
        ["block","if",[["get","metric.numberOfWholeMinutesRemaining",["loc",[null,[20,8],[20,44]]]]],[],3,null,["loc",[null,[20,2],[22,9]]]],
        ["attribute","class",["concat",[["get","iconClass",["loc",[null,[24,14],[24,23]]]]," i-size-base i-after"]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  }()));

});
define('frontend-cp/components/ko-case/sla-sidebar/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-case/sla-sidebar/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-case/sla-sidebar/metric",[],["metric",["subexpr","@mut",[["get","metric",["loc",[null,[5,40],[5,46]]]]],[],[]]],["loc",[null,[5,4],[5,48]]]]
        ],
        locals: ["metric"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-case/sla-sidebar/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("b");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("table");
        dom.setAttribute(el1,"class","ko-case_sla-sidebar");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]),1,1);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["generic.SLA"],[],["loc",[null,[1,20],[1,44]]]]],[],["loc",[null,[1,3],[1,46]]]],
        ["content","sla.title",["loc",[null,[1,51],[1,64]]]],
        ["block","each",[["get","slaMetrics",["loc",[null,[4,10],[4,20]]]]],[],0,null,["loc",[null,[4,2],[6,11]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/assignee/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/assignee/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/assignment-due-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/assignment-due-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/created-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/created-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ago",[["get","case.createdAt",["loc",[null,[1,6],[1,20]]]]],[],["loc",[null,[1,0],[1,22]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/creator/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/creator/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/id/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 15
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/id/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","case.maskId",["loc",[null,[1,0],[1,15]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/last-replier/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/last-replier/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/priority/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 38
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/priority/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-priority",[],["priority",["subexpr","@mut",[["get","case.priority",["loc",[null,[1,23],[1,36]]]]],[],[]]],["loc",[null,[1,0],[1,38]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/rating/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/rating/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/reply-due-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/reply-due-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/requester/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/requester/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/resolution-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/resolution-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/satisfaction-status/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/satisfaction-status/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/status/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 15
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/status/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","case.status",["loc",[null,[1,0],[1,15]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/subject/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Can't have parent div or ellipsis will break
    tagName: ''
  });

});
define('frontend-cp/components/ko-cases-list/column/subject/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 2,
              "column": 75
            }
          },
          "moduleName": "frontend-cp/components/ko-cases-list/column/subject/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["content","case.subject",["loc",[null,[2,59],[2,75]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/subject/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-avatar",[],["class","u-mr-","avatar",["subexpr","@mut",[["get","case.creator.avatar",["loc",[null,[1,33],[1,52]]]]],[],[]]],["loc",[null,[1,0],[1,54]]]],
        ["block","link-to",["session.cases.case",["get","case",["loc",[null,[2,32],[2,36]]]]],["class","t-naked-link"],0,null,["loc",[null,[2,0],[2,87]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/type/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/type/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/column/updated-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/column/updated-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ago",[["get","case.updatedAt",["loc",[null,[1,6],[1,20]]]]],[],["loc",[null,[1,0],[1,22]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    cases: [],
    onCaseListSort: null,
    columns: [],

    componentForHeader: function componentForHeader(column) {
      return 'ko-cases-list/header/' + Ember['default'].String.dasherize(column.get('name'));
    },

    componentForColumn: function componentForColumn(column) {
      return 'ko-cases-list/column/' + Ember['default'].String.dasherize(column.get('name'));
    },

    isFixed: function isFixed(column) {
      return column.get('name') === 'subject';
    },

    actions: {
      tableSorted: function tableSorted(column, order) {
        this.sendAction('onCaseListSort', column, order);
      }
    }
  });

});
define('frontend-cp/components/ko-cases-list/header/assignee/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/assignee/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/assignment-due-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/assignment-due-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/created-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/created-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/creator/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/creator/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/id/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/id/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["cases.ticketid"],[],["loc",[null,[1,17],[1,44]]]]],[],["loc",[null,[1,0],[1,46]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/last-replier/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/last-replier/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/priority/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/priority/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["cases.priority"],[],["loc",[null,[1,17],[1,44]]]]],[],["loc",[null,[1,0],[1,46]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/rating/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/rating/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/reply-due-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/reply-due-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/requester/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/requester/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/resolution-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/resolution-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/satisfaction-status/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/satisfaction-status/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/status/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/status/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/subject/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 45
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/subject/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["cases.subject"],[],["loc",[null,[1,17],[1,43]]]]],[],["loc",[null,[1,0],[1,45]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/type/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/type/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/header/updated-at/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/header/updated-at/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["cases.activity"],[],["loc",[null,[1,17],[1,44]]]]],[],["loc",[null,[1,0],[1,46]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-cases-list/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 18,
                    "column": 6
                  },
                  "end": {
                    "line": 18,
                    "column": 77
                  }
                },
                "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [
                ["inline","component",[["subexpr","ko-helper",[["get","componentForHeader",["loc",[null,[18,49],[18,67]]]],["get","column",["loc",[null,[18,68],[18,74]]]]],[],["loc",[null,[18,38],[18,75]]]]],[],["loc",[null,[18,26],[18,77]]]]
              ],
              locals: [],
              templates: []
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 17,
                  "column": 4
                },
                "end": {
                  "line": 19,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
            },
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["block","ko-table/column",[],[],0,null,["loc",[null,[18,6],[18,97]]]]
            ],
            locals: ["column"],
            templates: [child0]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 2
              },
              "end": {
                "line": 20,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","each",[["get","columns",["loc",[null,[17,12],[17,19]]]]],[],0,null,["loc",[null,[17,4],[19,13]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      var child1 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            var child0 = (function() {
              var child0 = (function() {
                return {
                  meta: {
                    "revision": "Ember@1.13.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 25,
                        "column": 10
                      },
                      "end": {
                        "line": 25,
                        "column": 150
                      }
                    },
                    "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
                  },
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createComment("");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
                    dom.insertBoundary(fragment, 0);
                    dom.insertBoundary(fragment, null);
                    return morphs;
                  },
                  statements: [
                    ["inline","component",[["subexpr","ko-helper",[["get","componentForColumn",["loc",[null,[25,112],[25,130]]]],["get","column",["loc",[null,[25,131],[25,137]]]]],[],["loc",[null,[25,101],[25,138]]]]],["case",["subexpr","@mut",[["get","case",["loc",[null,[25,144],[25,148]]]]],[],[]]],["loc",[null,[25,89],[25,150]]]]
                  ],
                  locals: [],
                  templates: []
                };
              }());
              return {
                meta: {
                  "revision": "Ember@1.13.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 24,
                      "column": 8
                    },
                    "end": {
                      "line": 26,
                      "column": 8
                    }
                  },
                  "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
                },
                arity: 1,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("          ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
                  return morphs;
                },
                statements: [
                  ["block","ko-table/cell",[],["class",["subexpr","if",[["subexpr","ko-helper",[["get","isFixed",["loc",[null,[25,48],[25,55]]]],["get","column",["loc",[null,[25,56],[25,62]]]]],[],["loc",[null,[25,37],[25,63]]]],"ko-table_cell--fixed"],[],["loc",[null,[25,33],[25,87]]]]],0,null,["loc",[null,[25,10],[25,168]]]]
                ],
                locals: ["column"],
                templates: [child0]
              };
            }());
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 23,
                    "column": 6
                  },
                  "end": {
                    "line": 27,
                    "column": 6
                  }
                },
                "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [
                ["block","each",[["get","columns",["loc",[null,[24,16],[24,23]]]]],[],0,null,["loc",[null,[24,8],[26,17]]]]
              ],
              locals: [],
              templates: [child0]
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 22,
                  "column": 4
                },
                "end": {
                  "line": 28,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
            },
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [
              ["block","ko-table/row",[],[],0,null,["loc",[null,[23,6],[27,23]]]]
            ],
            locals: ["case"],
            templates: [child0]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","each",[["get","cases",["loc",[null,[22,12],[22,17]]]]],[],0,null,["loc",[null,[22,4],[28,13]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-table/header",[],["onSort","tableSorted"],0,null,["loc",[null,[16,2],[20,22]]]],
          ["block","ko-table/body",[],[],1,null,["loc",[null,[21,2],[29,20]]]]
        ],
        locals: [],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-cases-list/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","layout u-mv");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout__item u-2/3");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h4");
        dom.setAttribute(el3,"class","heading i-chevron-large-down i-color-grey--dark");
        var el4 = dom.createTextNode("Custom filter name");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout__item u-1/3 t-right");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--highlight");
        var el4 = dom.createTextNode("\n      Update 4 cases\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--highlight");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-large-down");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-table",[],["selectable",true],0,null,["loc",[null,[15,0],[30,13]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-center/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    classNames: ['ko-center']
  });

});
define('frontend-cp/components/ko-center/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 48
          }
        },
        "moduleName": "frontend-cp/components/ko-center/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-center__contents");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,33],[1,42]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-channel-select/button/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    label: '',
    iconClass: '',
    classNames: ['ko-channel-select__button']
  });

});
define('frontend-cp/components/ko-channel-select/button/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-channel-select/button/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","ko-dropdown-select__icon i-select");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",[["get","iconClass",["loc",[null,[1,15],[1,24]]]]]]],
        ["content","label",["loc",[null,[1,35],[1,44]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-channel-select/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    hideOnClick: false,

    didInsertElement: function didInsertElement() {
      var width = this.$('.ko-channel-select__button').outerWidth(true);
      this.set('contentStyle', ('min-width:' + width + 'px;').htmlSafe());
    },
    contentStyle: null
  });

});
define('frontend-cp/components/ko-channel-select/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-channel-select/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-channel-select/button",[],["label",["subexpr","@mut",[["get","label",["loc",[null,[3,37],[3,42]]]]],[],[]],"iconClass",["subexpr","@mut",[["get","iconClass",["loc",[null,[3,53],[3,62]]]]],[],[]]],["loc",[null,[3,4],[3,64]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      var child1 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 6,
                  "column": 4
                },
                "end": {
                  "line": 8,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-channel-select/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["content","yield",["loc",[null,[7,6],[7,15]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 9,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-channel-select/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","ko-dropdown/list",[],["class","ko-dropdown-select__content","style",["subexpr","@mut",[["get","contentStyle",["loc",[null,[6,66],[6,78]]]]],[],[]]],0,null,["loc",[null,[6,4],[8,25]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-channel-select/template.hbs"
        },
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[2,12],[2,16]]]],"button"],[],["loc",[null,[2,8],[2,26]]]]],[],0,null,["loc",[null,[2,2],[4,9]]]],
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[5,12],[5,16]]]],"content"],[],["loc",[null,[5,8],[5,27]]]]],[],1,null,["loc",[null,[5,2],[9,9]]]]
        ],
        locals: ["name","dropdownContext"],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-channel-select/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-dropdown/container",[],["hideOnClick",["subexpr","@mut",[["get","hideOnClick",["loc",[null,[1,37],[1,48]]]]],[],[]],"hideOnChildFocus",true],0,null,["loc",[null,[1,0],[10,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-checkbox/component', ['exports', 'ember', 'frontend-cp/lib/keycodes'], function (exports, Ember, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    disabled: false,
    large: false,
    checked: false,
    ariaLive: 'assertive',
    tabindex: 0,
    label: '',
    classNames: ['ko-checkbox'],

    keyDown: function keyDown(e) {
      if (e.keyCode === KeyCodes.space) {
        return false;
      }
    },

    keyUp: function keyUp(e) {
      if (e.keyCode === KeyCodes.space) {
        this.send('toggleCheckbox');
      }
      return false;
    },

    actions: {
      toggleCheckbox: function toggleCheckbox() {
        if (!this.disabled) {
          if (this.get('onCheck')) {
            this.sendAction('onCheck', !this.get('checked'));
          } else {
            this.toggleProperty('checked');
          }
        }
      }
    }
  });

});
define('frontend-cp/components/ko-checkbox/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-checkbox/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1,"class","ko-checkbox__tick i-tick");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-checkbox/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createAttrMorph(element0, 'for');
          morphs[2] = dom.createElementMorph(element0);
          morphs[3] = dom.createMorphAt(element0,0,0);
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",["ko-checkbox__label ",["subexpr","if",[["get","disabled",["loc",[null,[7,40],[7,48]]]],"ko-checkbox__label--disabled"],[],["loc",[null,[7,35],[7,81]]]]]]],
          ["attribute","for",["concat",[["get","elementId",["loc",[null,[7,90],[7,99]]]],"-checkbox"]]],
          ["element","action",["toggleCheckbox"],[],["loc",[null,[7,112],[7,139]]]],
          ["content","label",["loc",[null,[7,140],[7,149]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-checkbox/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"role","checkbox");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var morphs = new Array(9);
        morphs[0] = dom.createAttrMorph(element1, 'class');
        morphs[1] = dom.createAttrMorph(element1, 'aria-checked');
        morphs[2] = dom.createAttrMorph(element1, 'tabindex');
        morphs[3] = dom.createAttrMorph(element1, 'aria-disabled');
        morphs[4] = dom.createAttrMorph(element1, 'aria-live');
        morphs[5] = dom.createAttrMorph(element1, 'id');
        morphs[6] = dom.createElementMorph(element1);
        morphs[7] = dom.createMorphAt(element1,1,1);
        morphs[8] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",["ko-checkbox__checkbox ",["subexpr","if",[["get","large",["loc",[null,[1,39],[1,44]]]],"ko-checkbox__checkbox--large"],[],["loc",[null,[1,34],[1,77]]]]," ",["subexpr","if",[["get","disabled",["loc",[null,[1,83],[1,91]]]],"ko-checkbox__checkbox--disabled"],[],["loc",[null,[1,78],[1,127]]]]]]],
        ["attribute","aria-checked",["concat",[["get","checked",["loc",[null,[1,161],[1,168]]]]]]],
        ["attribute","tabindex",["concat",[["get","tabindex",["loc",[null,[1,184],[1,192]]]]]]],
        ["attribute","aria-disabled",["concat",[["subexpr","if",[["get","disabled",["loc",[null,[1,216],[1,224]]]],"true","false"],[],["loc",[null,[1,211],[1,241]]]]]]],
        ["attribute","aria-live",["concat",[["get","ariaLive",["loc",[null,[1,256],[1,264]]]]]]],
        ["attribute","id",["concat",[["get","elementId",["loc",[null,[1,274],[1,283]]]],"-checkbox"]]],
        ["element","action",["toggleCheckbox"],[],["loc",[null,[1,296],[1,323]]]],
        ["block","if",[["get","checked",["loc",[null,[2,8],[2,15]]]]],[],0,null,["loc",[null,[2,2],[4,9]]]],
        ["block","if",[["get","label",["loc",[null,[6,6],[6,11]]]]],[],1,null,["loc",[null,[6,0],[8,7]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-contact-info/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    classNames: ['info-bar-item', 'u-no-bottom-border']
  });

});
define('frontend-cp/components/ko-contact-info/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-contact-info/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1,"class","i--case-phone");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("br");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,3,3,contextualElement);
          return morphs;
        },
        statements: [
          ["content","phone",["loc",[null,[4,32],[4,41]]]]
        ],
        locals: ["phone"],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-contact-info/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1,"class","i--case-twitter");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("br");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,3,3,contextualElement);
          return morphs;
        },
        statements: [
          ["content","twitterAccount",["loc",[null,[8,34],[8,52]]]]
        ],
        locals: ["twitterAccount"],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-contact-info/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1,"class","i--case-facebook");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("br");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,3,3,contextualElement);
          return morphs;
        },
        statements: [
          ["content","facebookAccount",["loc",[null,[12,35],[12,54]]]]
        ],
        locals: ["facebookAccount"],
        templates: []
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-contact-info/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1,"class","i--case-email");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("br");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,3,3,contextualElement);
          return morphs;
        },
        statements: [
          ["content","email",["loc",[null,[16,32],[16,41]]]]
        ],
        locals: ["email"],
        templates: []
      };
    }());
    var child4 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 19,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-contact-info/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1,"class","i--case-linkedin");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("br");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,3,3,contextualElement);
          return morphs;
        },
        statements: [
          ["content","linkedinAccount",["loc",[null,[20,35],[20,54]]]]
        ],
        locals: ["linkedinAccount"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-contact-info/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("p");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(fragment,4,4,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,8,8,contextualElement);
        morphs[3] = dom.createMorphAt(fragment,12,12,contextualElement);
        morphs[4] = dom.createMorphAt(fragment,16,16,contextualElement);
        morphs[5] = dom.createMorphAt(fragment,20,20,contextualElement);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,3],[1,12]]]],
        ["block","each",[["get","phones",["loc",[null,[3,8],[3,14]]]]],[],0,null,["loc",[null,[3,0],[5,9]]]],
        ["block","each",[["get","twitter",["loc",[null,[7,8],[7,15]]]]],[],1,null,["loc",[null,[7,0],[9,9]]]],
        ["block","each",[["get","facebook",["loc",[null,[11,8],[11,16]]]]],[],2,null,["loc",[null,[11,0],[13,9]]]],
        ["block","each",[["get","emails",["loc",[null,[15,8],[15,14]]]]],[],3,null,["loc",[null,[15,0],[17,9]]]],
        ["block","each",[["get","linkedin",["loc",[null,[19,8],[19,16]]]]],[],4,null,["loc",[null,[19,0],[21,9]]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  }()));

});
define('frontend-cp/components/ko-context-modal-item/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    contextModalService: Ember['default'].inject.service('context-modal'),
    activeContextModalId: Ember['default'].computed.alias('contextModalService.activeContextModalId'),
    activeIndex: Ember['default'].computed.alias('contextModalService.index'),

    isShowing: false,

    /**
     * Check this is the correct modal set
     * @return {undefined}
     */
    isContextModalActive: (function () {
      return this.get('activeContextModalId') === this.get('contextModalId') && this.get('activeContextModalId') !== null;
    }).property('activeContextModalId', 'contextModalId'),

    /**
     * Check the modal set is both active and that we are on the correct index (page)
     * @return {undefined}
     */
    isHidden: (function () {
      return this.get('activeIndex') !== Number(this.get('index')) || !this.get('isContextModalActive');
    }).property('activeIndex', 'index', 'isContextModalActive'),

    inline: (function () {
      return this.get('isContextModalActive') ? this.get('contextModalService.inline') : false;
    }).property('isContextModalActive', 'contextModalService.inline'),

    didShow: (function () {
      var _this = this;

      if (!this.get('isHidden')) {
        this.get('contextModalService').set('title', this.get('title'));
      }

      Ember['default'].run.next(function () {
        _this.set('isShowing', !_this.get('isHidden'));
      });
    }).observes('isHidden').on('init'),

    /**
     * Need to SafeString bound style attributes
     */

    modalItemStyle: (function () {
      if (this.get('isHidden')) {
        return 'display: none;'.htmlSafe();
      }
    }).property('isHidden')
  });

});
define('frontend-cp/components/ko-context-modal-item/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 4
              },
              "end": {
                "line": 5,
                "column": 4
              }
            },
            "moduleName": "frontend-cp/components/ko-context-modal-item/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","yield",[["get","isShowing",["loc",[null,[4,14],[4,23]]]]],[],["loc",[null,[4,6],[4,25]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-context-modal-item/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-context-modal__inline");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'style');
          morphs[1] = dom.createMorphAt(element0,1,1);
          return morphs;
        },
        statements: [
          ["attribute","style",["get","modalItemStyle",["loc",[null,[2,48],[2,62]]]]],
          ["block","ko-context-modal",[],["inline",["subexpr","@mut",[["get","inline",["loc",[null,[3,31],[3,37]]]]],[],[]]],0,null,["loc",[null,[3,4],[5,25]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 9,
                  "column": 4
                },
                "end": {
                  "line": 11,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-context-modal-item/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["inline","yield",[["get","isShowing",["loc",[null,[10,14],[10,23]]]]],[],["loc",[null,[10,6],[10,25]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 8,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-context-modal-item/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","if",[["subexpr","not",[["get","isHidden",["loc",[null,[9,15],[9,23]]]]],[],["loc",[null,[9,10],[9,24]]]]],[],0,null,["loc",[null,[9,4],[11,11]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-context-modal-item/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ember-wormhole",[],["to","ko-context-modal__content"],0,null,["loc",[null,[8,2],[12,21]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 7
          }
        },
        "moduleName": "frontend-cp/components/ko-context-modal-item/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","if",[["get","inline",["loc",[null,[1,6],[1,12]]]]],[],0,1,["loc",[null,[1,0],[13,7]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-context-modal/component', ['exports', 'ember', 'jquery'], function (exports, Ember, $) {

  'use strict';

  var POSITION_MARGIN = 18,
      // Padding around window bounds to apply if modal's natural position is outside the bounds and it gets moved inside.
  ARROW_OFFSET = 9,
      // Distance between the originating element and the modal
  ARROW_SIZE = 9; // Size of the arrow in pixels (can be confirmed in _arrow.scss)

  exports['default'] = Ember['default'].Component.extend({

    classNameBindings: [':overlay', 'visible:u-visible'],

    contextModalService: Ember['default'].inject.service('context-modal'),

    event: Ember['default'].computed.alias('contextModalService.event'),
    title: Ember['default'].computed.alias('contextModalService.title'),
    visible: Ember['default'].computed.alias('contextModalService.visible'),
    activeContextModalId: Ember['default'].computed.alias('contextModalService.activeContextModalId'),
    activeIndex: Ember['default'].computed.alias('contextModalService.index'),

    $modal: null,

    eventX: null,
    eventY: null,
    eventInlineX: null,
    eventInlineY: null,
    buttonWidth: null,
    buttonHeight: null,
    windowWidth: null,
    windowHeight: null,
    documentWidth: null,
    documentHeight: null,
    modalWidth: null,
    naturalModalHeight: null,
    modalVisible: false,
    headerHeight: null,
    scrollableModalContents: Ember['default'].computed.not('inline'),
    preventBodyScroll: Ember['default'].computed.not('inline'),

    didInsertElement: function didInsertElement() {
      var _this = this;

      this.set('$modal', this.$().find('.ko-context-modal__container'));
      $['default'](window).on('resize.contextModal', function () {
        _this.set('modalVisible', false);
        Ember['default'].run.next(_this, _this.updatePositionInputs);
      });
    },

    willDestroyElement: function willDestroyElement() {
      $['default'](window).off('resize.contextModal');
    },

    actions: {
      close: function close() {
        this.get('contextModalService').close();
      }
    },

    isHiddenFloatingModal: (function () {
      return !!(this.get('floating') && this.get('contextModalService.inline'));
    }).property('floating', 'contextModalService.inline'),

    eventDidChange: (function () {
      this.set('modalVisible', false);
      this.get('activeContextModalId');
      this.get('activeIndex');
      this.get('event');
      Ember['default'].run.next(this, this.updatePositionInputs);
    }).observes('event', 'activeContextModalId', 'activeIndex').on('init'),

    updatePositionInputs: function updatePositionInputs() {
      var _this2 = this;

      if (this.get('isDestroyed') || this.get('isDestroying')) {
        return;
      }

      var event = this.get('event');

      if (event === undefined || event === null) {
        return;
      }

      var $modal = this.get('$modal');

      var eventPosition = this.getPosition(event.target);
      Ember['default'].run(function () {
        _this2.set('isResetting', true);
      });
      Ember['default'].run(function () {
        _this2.set('eventX', eventPosition.x);
        _this2.set('eventY', eventPosition.y);
        _this2.set('eventInlineX', eventPosition.inlineX);
        _this2.set('eventInlineY', eventPosition.inlineY);
        _this2.set('headerHeight', _this2.$().find('.ko-context-modal__header-container').outerHeight());
        _this2.set('buttonHeight', $['default'](event.target).outerHeight());
        _this2.set('buttonWidth', $['default'](event.target).outerWidth(true));
        _this2.set('windowWidth', $['default'](window).width());
        _this2.set('windowHeight', $['default'](window).height());
        _this2.set('documentWidth', $['default'](document).width());
        _this2.set('documentHeight', $['default'](document).height());
        _this2.set('modalWidth', $modal.outerWidth(true));
        _this2.set('naturalModalHeight', $modal.outerHeight());
        _this2.set('modalVisible', true);
        _this2.set('isResetting', false);
      });
    },

    /**
     * Calculates the x position of the arrow, relative to the left of the modal.
     * @return {Number} Arrow x Position
     */
    arrowX: (function () {
      return this.get('modalWidth') / 2 + this.get('boundingOffsetX') - ARROW_SIZE / 2;
    }).property('modalWidth', 'boundingOffsetX'),

    /**
     * Based on the vertical position of the modal, set the arrow to appear on the top or bottom of the modal
     * @return {[type]} [description]
     */
    arrowClass: (function () {
      return 'arrow--' + (this.get('isArrowUnderneath') ? 'bottom' : 'top') + ' arrow';
    }).property('isArrowUnderneath'),

    targetModalOriginX: (function () {
      var originX = this.get('eventX') + this.get('buttonWidth') / 2; // Find the coordinate for the centre of the element clicked
      return originX - this.get('modalWidth') / 2; // Move the modal 50% of its width to the left of the centre of element clicked
    }).property('eventX', 'buttonWidth', 'modalWidth'),

    positionX: (function () {
      return Math.max(POSITION_MARGIN, Math.min(this.get('targetModalOriginX'), this.get('windowWidth') - this.get('modalWidth') - POSITION_MARGIN));
    }).property('targetModalOriginX', 'windowWidth', 'modalWidth'),

    positionY: (function () {
      var y = this.get('inline') ? this.get('eventInlineY') : this.get('eventY');
      if (this.get('isModalBelowClickedElement')) {
        return y + this.get('buttonHeight') + ARROW_OFFSET;
      } else {
        return y - this.get('constrainedModalHeight') - ARROW_OFFSET - ARROW_SIZE;
      }
    }).property('isModalBelowClickedElement', 'eventY', 'eventInlineY', 'buttonHeight', 'constrainedModalHeight', 'inline'),

    constrainedModalHeight: (function () {
      if (!this.get('scrollableModalContents')) {
        return this.get('naturalModalHeight');
      }
      return Math.min(this.get('isModalBelowClickedElement') ? this.get('spaceBelow') : this.get('spaceAbove'), this.get('naturalModalHeight'));
    }).property('isModalBelowClickedElement', 'spaceAbove', 'spaceBelow', 'naturalModalHeight'),

    modalContentHeightStyle: (function () {
      return 'height:' + this.get('modalContentHeight') + 'px';
    }).property('modalContentHeight'),

    isConstrained: (function () {
      if (this.get('isResetting')) {
        return false;
      }
      return this.get('naturalModalHeight') !== this.get('constrainedModalHeight');
    }).property('naturalModalHeight', 'constrainedModalHeight', 'isResetting'),

    modalContentHeight: (function () {
      return this.get('constrainedModalHeight') - this.get('headerHeight') - ARROW_SIZE;
    }).property('headerHeight', 'constrainedModalHeight'),

    isArrowUnderneath: Ember['default'].computed.not('isModalBelowClickedElement'),

    /**
     * Will place the modal above if there is enough space and there is more space above than below
     * @return {Boolean} [description]
     */
    isModalBelowClickedElement: (function () {
      if (this.get('inline')) {
        return !(this.get('spaceAbove') > this.get('spaceBelow') && this.get('naturalModalHeight') < this.get('spaceAbove'));
      } else {
        return this.get('spaceAbove') < this.get('spaceBelow');
      }
    }).property('spaceAbove', 'spaceBelow', 'inline', 'naturalModalHeight'),

    spaceAbove: (function () {
      var space = this.get('eventY') - POSITION_MARGIN - ARROW_SIZE;
      return space;
    }).property('eventY'),

    spaceBelow: (function () {
      var space = this.get('windowHeight') - this.get('eventY') - this.get('buttonHeight') - POSITION_MARGIN - ARROW_SIZE;
      return space;
    }).property('windowHeight', 'eventY', 'buttonHeight'),

    /**
     * Distance between where we want to put the modal, and where the bounding logic has moved it
     * @return {Number} X Distance in px between bounded and unbounded modal position
     */
    boundingOffsetX: (function () {
      return this.get('targetModalOriginX') - this.get('positionX');
    }).property('targetModalOriginX', 'positionX'),

    /**
     * Returns the x and y coordinates of the element passed in.
     * For a detailed breakdown and analysis of what is going on and why, please see:
     * http://www.kirupa.com/html5/get_element_position_using_javascript.htm
     *
     * @param {{HTMLElement}} element - DOM node to base positioning off of.
     * @returns {{x: number, y: number}}
     */
    getPosition: function getPosition(element) {
      if (!element) {
        throw new Error('No element found, cannot calculate coordinates');
      }

      var x = 0,
          y = 0,
          inlineX = element.offsetLeft,
          inlineY = element.offsetTop;

      while (element) {
        x += element.offsetLeft - element.scrollLeft + element.clientLeft;
        y += element.offsetTop - element.scrollTop + element.clientTop;
        element = element.offsetParent;
      }

      return { x: x, y: y, inlineX: inlineX, inlineY: inlineY };
    },

    /**
     * Need to SafeString all bound style attributes
     */

    floatingModalStyle: (function () {
      if (this.get('isHiddenFloatingModal')) {
        return 'display: none;'.htmlSafe();
      }
    }).property('isHiddenFloatingModal'),

    overlayStyle: (function () {
      return ('width:' + this.get('documentWidth') + 'px;' + 'height:' + this.get('documentHeight') + 'px;').htmlSafe();
    }).property('documentWidth', 'documentHeight'),

    containerStyle: (function () {
      var visibility = undefined;
      if (!this.get('modalVisible')) {
        visibility = 'visibility: hidden;';
      }
      return ('top:' + this.get('positionY') + 'px;' + 'left:' + this.get('positionX') + 'px;' + visibility).htmlSafe();
    }).property('positionY', 'positionX', 'modalVisible'),

    contentStyle: (function () {
      if (this.get('isConstrained')) {
        return this.get('modalContentHeightStyle').htmlSafe();
      }
    }).property('isConstrained', 'modalContentHeightStyle'),

    arrowStyle: (function () {
      return ('left:' + this.get('arrowX') + 'px;').htmlSafe();
    }).property('arrowX')

  });

});
define('frontend-cp/components/ko-context-modal/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-context-modal/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-context-modal__overlay");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element3, 'style');
          morphs[1] = dom.createElementMorph(element3);
          return morphs;
        },
        statements: [
          ["attribute","style",["get","overlayStyle",["loc",[null,[3,51],[3,63]]]]],
          ["element","action",["close"],[],["loc",[null,[3,66],[3,84]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 11,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-context-modal/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","box box--secondary ko-context-modal__header-container");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("h6");
          dom.setAttribute(el2,"class","ko-context-modal__header");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("a");
          dom.setAttribute(el2,"href","#");
          dom.setAttribute(el2,"class","ko-context-modal__action");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);
          morphs[1] = dom.createElementMorph(element2);
          morphs[2] = dom.createMorphAt(element2,0,0);
          return morphs;
        },
        statements: [
          ["content","title",["loc",[null,[8,45],[8,54]]]],
          ["element","action",["close"],[],["loc",[null,[9,53],[9,71]]]],
          ["inline","format-message",[["subexpr","intl-get",["generic.close"],[],["loc",[null,[9,89],[9,115]]]]],[],["loc",[null,[9,72],[9,117]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 4
            },
            "end": {
              "line": 16,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-context-modal/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","box ko-context-modal__content");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          return morphs;
        },
        statements: [
          ["content","yield",["loc",[null,[14,8],[14,17]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 4
            },
            "end": {
              "line": 18,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-context-modal/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"id","ko-context-modal__content");
          dom.setAttribute(el1,"class","ko-context-modal__content");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'style');
          return morphs;
        },
        statements: [
          ["attribute","style",["get","contentStyle",["loc",[null,[17,84],[17,96]]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-context-modal/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","ko-context-modal__container");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element4 = dom.childAt(fragment, [0]);
        var element5 = dom.childAt(element4, [3]);
        var element6 = dom.childAt(element5, [4]);
        var morphs = new Array(7);
        morphs[0] = dom.createAttrMorph(element4, 'style');
        morphs[1] = dom.createMorphAt(element4,1,1);
        morphs[2] = dom.createAttrMorph(element5, 'style');
        morphs[3] = dom.createMorphAt(element5,1,1);
        morphs[4] = dom.createMorphAt(element5,2,2);
        morphs[5] = dom.createAttrMorph(element6, 'class');
        morphs[6] = dom.createAttrMorph(element6, 'style');
        return morphs;
      },
      statements: [
        ["attribute","style",["get","floatingModalStyle",["loc",[null,[1,13],[1,31]]]]],
        ["block","if",[["get","preventBodyScroll",["loc",[null,[2,8],[2,25]]]]],[],0,null,["loc",[null,[2,2],[4,9]]]],
        ["attribute","style",["get","containerStyle",["loc",[null,[5,51],[5,65]]]]],
        ["block","if",[["get","title",["loc",[null,[6,10],[6,15]]]]],[],1,null,["loc",[null,[6,4],[11,11]]]],
        ["block","if",[["get","inline",["loc",[null,[12,10],[12,16]]]]],[],2,3,["loc",[null,[12,4],[18,11]]]],
        ["attribute","class",["concat",[["get","arrowClass",["loc",[null,[19,18],[19,28]]]]]]],
        ["attribute","style",["get","arrowStyle",["loc",[null,[19,40],[19,50]]]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  }()));

});
define('frontend-cp/components/ko-datepicker/component', ['exports', 'ember', 'npm:lodash', 'moment', 'frontend-cp/config/environment', 'frontend-cp/lib/keycodes'], function (exports, Ember, _, moment, config, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    attributeBindings: ['tabindex'],
    tabindex: '-1',

    today: moment['default'](),
    shownDate: null,
    date: moment['default'](''),

    assetRoot: config['default'].assetRoot,

    momentDate: (function () {
      return moment['default'](this.get('date'));
    }).property('date'),

    onDateParamChange: (function () {
      this.set('shownDate', moment['default'](this.get('momentDate').isValid() ? this.get('momentDate') : this.get('today')).toDate());
    }).observes('momentDate').on('init'),

    month: (function () {
      return moment['default'](this.get('shownDate')).month();
    }).property('shownDate'),

    year: (function () {
      return moment['default'](this.get('shownDate')).year();
    }).property('shownDate'),

    weekdays: (function () {
      var weekdays = moment['default'].weekdaysShort();
      var firstDayOfWeek = moment['default'].localeData().firstDayOfWeek();
      _['default'].times(firstDayOfWeek, function () {
        return weekdays.push(weekdays.shift());
      });
      return weekdays;
    }).property(),

    days: (function () {
      var date = moment['default']({
        year: this.get('year'),
        month: this.get('month'),
        day: 1
      }).startOf('week');

      var end = moment['default']({
        year: this.get('year'),
        month: this.get('month'),
        day: 1
      }).add(1, 'month').endOf('week');

      var dates = [];
      while (date.isBefore(end, 'day') || date.isSame(end, 'day')) {
        dates.push({
          date: date.date(),
          currentMonth: date.month() === this.get('month'),
          today: this.get('today').isSame(date, 'day'),
          selected: date.isSame(this.get('momentDate'), 'day')
        });
        date.add(1, 'day');
      }
      return dates;
    }).property('year', 'month', 'today', 'momentDate'),

    jumpDateBy: function jumpDateBy(method, range) {
      if (this.get('momentDate').isValid()) {
        this.setDate(moment['default'](this.get('momentDate'))[method](1, range));
      }
      return false;
    },

    setDate: function setDate(date) {
      this.sendAction('on-date-change', date.toDate());
    },

    actions: {
      previousMonth: function previousMonth() {
        this.set('shownDate', moment['default'](this.get('shownDate')).subtract(1, 'month').toDate());
      },

      nextMonth: function nextMonth() {
        this.set('shownDate', moment['default'](this.get('shownDate')).add(1, 'month').toDate());
      },

      selectDate: function selectDate(date) {
        this.setDate(moment['default']({
          year: this.get('year'),
          month: this.get('month'),
          day: date.date
        }));
      },

      today: function today() {
        this.setDate(moment['default'](this.get('today')));
      },

      clear: function clear() {
        this.setDate(moment['default'](''));
      },

      close: function close() {
        this.sendAction('close');
      }
    },

    keyDown: function keyDown(e) {
      switch (e.keyCode) {
        case KeyCodes.up:
          {
            return this.jumpDateBy('subtract', 'week');
          }
        case KeyCodes.down:
          {
            return this.jumpDateBy('add', 'week');
          }
        case KeyCodes.left:
          {
            return this.jumpDateBy('subtract', 'day');
          }
        case KeyCodes.right:
          {
            return this.jumpDateBy('add', 'day');
          }
      }
    }
  });

});
define('frontend-cp/components/ko-datepicker/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-datepicker/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1,"class","ko-datepicker__weekday");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          return morphs;
        },
        statements: [
          ["content","weekday",["loc",[null,[11,41],[11,52]]]]
        ],
        locals: ["weekday"],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 17,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-datepicker/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createElementMorph(element0);
          morphs[2] = dom.createMorphAt(element0,0,0);
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",["ko-datepicker__date ",["subexpr","if",[["get","date.currentMonth",["loc",[null,[14,42],[14,59]]]],"ko-datepicker__date--current-month"],[],["loc",[null,[14,37],[14,98]]]],"\n    ",["subexpr","if",[["get","date.today",["loc",[null,[15,9],[15,19]]]],"ko-datepicker__date--today"],[],["loc",[null,[15,4],[15,50]]]]," ",["subexpr","if",[["get","date.selected",["loc",[null,[15,56],[15,69]]]],"ko-datepicker__date--selected"],[],["loc",[null,[15,51],[15,103]]]]]]],
          ["element","action",["selectDate",["get","date",["loc",[null,[16,26],[16,30]]]]],[],["loc",[null,[16,4],[16,32]]]],
          ["content","date.date",["loc",[null,[16,33],[16,46]]]]
        ],
        locals: ["date"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 25,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-datepicker/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-datepicker__header");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2,"class","ko-datepicker__month");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2,"class","ko-datepicker__year");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2,"class","ko-datepicker__previous");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2,"class","ko-datepicker__next");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-datepicker__calendar");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-datepicker__actions");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","ko-datepicker__action");
        var el3 = dom.createElement("span");
        var el4 = dom.createElement("img");
        dom.setAttribute(el4,"alt","");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","ko-datepicker__action");
        var el3 = dom.createElement("span");
        var el4 = dom.createElement("img");
        dom.setAttribute(el4,"alt","");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","ko-datepicker__action");
        var el3 = dom.createElement("span");
        var el4 = dom.createElement("img");
        dom.setAttribute(el4,"alt","");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [1]);
        var element2 = dom.childAt(element1, [5]);
        var element3 = dom.childAt(element1, [7]);
        var element4 = dom.childAt(fragment, [3]);
        var element5 = dom.childAt(fragment, [5]);
        var element6 = dom.childAt(element5, [1, 0]);
        var element7 = dom.childAt(element6, [0]);
        var element8 = dom.childAt(element5, [3, 0]);
        var element9 = dom.childAt(element8, [0]);
        var element10 = dom.childAt(element5, [5, 0]);
        var element11 = dom.childAt(element10, [0]);
        var morphs = new Array(15);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]),0,0);
        morphs[2] = dom.createElementMorph(element2);
        morphs[3] = dom.createElementMorph(element3);
        morphs[4] = dom.createMorphAt(element4,1,1);
        morphs[5] = dom.createMorphAt(element4,2,2);
        morphs[6] = dom.createElementMorph(element6);
        morphs[7] = dom.createAttrMorph(element7, 'src');
        morphs[8] = dom.createMorphAt(element6,1,1);
        morphs[9] = dom.createElementMorph(element8);
        morphs[10] = dom.createAttrMorph(element9, 'src');
        morphs[11] = dom.createMorphAt(element8,1,1);
        morphs[12] = dom.createElementMorph(element10);
        morphs[13] = dom.createAttrMorph(element11, 'src');
        morphs[14] = dom.createMorphAt(element10,1,1);
        return morphs;
      },
      statements: [
        ["inline","format-date",[["get","shownDate",["loc",[null,[3,51],[3,60]]]]],["format","month"],["loc",[null,[3,37],[3,77]]]],
        ["inline","format-date",[["get","shownDate",["loc",[null,[4,50],[4,59]]]]],["format","year"],["loc",[null,[4,36],[4,75]]]],
        ["element","action",["previousMonth"],[],["loc",[null,[5,40],[5,66]]]],
        ["element","action",["nextMonth"],[],["loc",[null,[6,36],[6,58]]]],
        ["block","each",[["get","weekdays",["loc",[null,[10,10],[10,18]]]]],[],0,null,["loc",[null,[10,2],[12,11]]]],
        ["block","each",[["get","days",["loc",[null,[13,10],[13,14]]]]],[],1,null,["loc",[null,[13,2],[17,11]]]],
        ["element","action",["today"],[],["loc",[null,[21,43],[21,61]]]],
        ["attribute","src",["concat",[["get","assetRoot",["loc",[null,[21,74],[21,83]]]],"/images/icons/datepicker-today.svg"]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.datepicker.today"],[],["loc",[null,[21,147],[21,184]]]]],[],["loc",[null,[21,130],[21,186]]]],
        ["element","action",["clear"],[],["loc",[null,[22,43],[22,61]]]],
        ["attribute","src",["concat",[["get","assetRoot",["loc",[null,[22,74],[22,83]]]],"/images/icons/datepicker-clear.svg"]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.datepicker.clear"],[],["loc",[null,[22,147],[22,184]]]]],[],["loc",[null,[22,130],[22,186]]]],
        ["element","action",["close"],[],["loc",[null,[23,43],[23,61]]]],
        ["attribute","src",["concat",[["get","assetRoot",["loc",[null,[23,74],[23,83]]]],"/images/icons/datepicker-close.svg"]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.datepicker.close"],[],["loc",[null,[23,147],[23,184]]]]],[],["loc",[null,[23,130],[23,186]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-draggable-dropzone/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    totalSize: 0,
    dragCounter: 0,
    classNames: ['koDraggableDropzone'],
    classNameBindings: ['dragClass:ko-draggable-dropzone--activated:ko-draggable-dropzone--deactivated'],
    dragClass: false,

    dragEnter: function dragEnter(event) {
      event.preventDefault();
      this.incrementProperty('dragCounter');
      this.set('dragClass', true);
    },

    dragOver: function dragOver(event) {
      event.preventDefault();
    },

    dragLeave: function dragLeave(event) {
      event.preventDefault();
      this.decrementProperty('dragCounter');
      if (this.dragCounter === 0) {
        this.set('dragClass', false);
      }
    },

    drop: function drop(event) {
      var _this = this;

      event.preventDefault();
      var file = event.dataTransfer.files[0];
      var reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = function () {
        _this.sendAction('dropped', reader.result);
      };
      this.set('dragClass', false);
    }

  });

});
define('frontend-cp/components/ko-draggable-dropzone/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-draggable-dropzone/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-draggable-dropzone__container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-draggable-dropzone__border");
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[2,2],[2,11]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-drill-down-context-menu/component', ['exports', 'ember', 'frontend-cp/components/mixins/context-menu-set'], function (exports, Ember, ContextMenuSetComponentMixin) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend(ContextMenuSetComponentMixin['default'], {

    actions: {
      onDrillDownSelectionComplete: function onDrillDownSelectionComplete(value) {
        this.sendAction('onSelect', value);
      }
    }
  });

});
define('frontend-cp/components/ko-drill-down-context-menu/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-drill-down-context-menu/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-drill-down-popover",[],["placeholder",["subexpr","@mut",[["get","placeholder",["loc",[null,[3,38],[3,49]]]]],[],[]],"options",["subexpr","@mut",[["get","options",["loc",[null,[3,58],[3,65]]]]],[],[]],"onDrillDownSelectionComplete","onDrillDownSelectionComplete","isShowing",["subexpr","@mut",[["get","isShowing",["loc",[null,[3,136],[3,145]]]]],[],[]]],["loc",[null,[3,2],[3,147]]]]
        ],
        locals: ["isShowing"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-drill-down-context-menu/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-context-modal-item",[],["index","0","title",["subexpr","@mut",[["get","title",["loc",[null,[1,41],[1,46]]]]],[],[]],"contextModalId",["subexpr","@mut",[["get","contextModalId",["loc",[null,[1,62],[1,76]]]]],[],[]]],0,null,["loc",[null,[1,0],[5,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-drill-down-popover/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    contextModalService: Ember['default'].inject.service('contextModal'),

    //params
    title: null,
    field: new Ember['default'].A([]),
    value: null,
    isEdited: false,
    isErrored: false,
    onValueChange: null,
    isShowing: false,

    tagName: 'div',

    didShowingChange: (function () {
      var isShowing = this.get('isShowing');

      if (isShowing) {
        this.$().find('input:input').focus();
      }
    }).observes('isShowing').on('init'),

    actions: {
      onComponentValueChange: function onComponentValueChange(value) {
        this.sendAction('onDrillDownSelectionComplete', value);
        this.get('contextModalService').close();
      }
    }
  });

});
define('frontend-cp/components/ko-drill-down-popover/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-drill-down-popover/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-option-list-drill-down",[],["options",["subexpr","@mut",[["get","options",["loc",[null,[2,10],[2,17]]]]],[],[]],"placeholder",["subexpr","@mut",[["get","placeholder",["loc",[null,[3,14],[3,25]]]]],[],[]],"showExpandedByDefault",true,"onValueChange","onComponentValueChange"],["loc",[null,[1,0],[6,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/container/button/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-dropdown/container/button/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/container/button/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/container/component', ['exports', 'ember', 'jquery'], function (exports, Ember, $) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    // Set to true if you include links in the content and you want to hide the dropdown when the links are clicked
    hideOnChildFocus: null,
    // Set to true if you want non link clicks to also hide the dropdown
    hideOnClick: null,
    //Allows components that need to signal when the dropdown should close
    hideDropdown: null,
    onFocusChanged: null,

    tabindex: 0,
    isFocussed: null,
    attributeBindings: ['tabindex'],
    classNames: 'ko-dropdown-container',

    onHideDropdown: (function () {
      var hideDropdown = this.get('hideDropdown');
      if (hideDropdown) {
        this.send('onContentRequestClose');
      }
    }).observes('hideDropdown'),

    focusOut: function focusOut(event) {
      // Ignore focusOut events that are focusing on another item which is a child of this one
      if (event.relatedTarget === null || !$['default'].contains(this.get('context.element'), event.relatedTarget)) {
        this.set('isFocussed', false);
        this.sendAction('onFocusChanged', false);
      }
    },

    focusIn: function focusIn() {
      this.set('isFocussed', true);
      this.sendAction('onFocusChanged', true);
    },

    actions: {
      onContentRequestClose: function onContentRequestClose() {
        this.$().blur();
        this.set('hideDropdown', false);
      },

      hide: function hide() {
        this.get('contentComponent').send('hide');
      }
    }
  });

});
define('frontend-cp/components/ko-dropdown/container/content/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    isParentFocussed: null,
    // hideOnChildFocus is useful because links become focussed when clicked so you can
    // hide the dropdown when someone clicks a link
    hideOnChildFocus: null,
    hideOnClick: null,
    // registerAs allows this component to be registered with its parent so the parent can call actions on it
    registerAs: null,

    role: 'menu',
    attributeBindings: ['role'],
    isFocussed: false,
    focussedObject: null,

    classNameBindings: ['isParentBlurred:u-hidden'],

    isParentBlurred: Ember['default'].computed.not('isParentFocussed'),

    registerOnParent: (function () {
      this.set('registerAs', this);
    }).on('init'),

    mouseUp: function mouseUp() {
      if (this.get('hideOnChildFocus') || this.get('hideOnClick')) {
        if (this.get('isFocussed') && this.get('focussedObject')) {
          this.$(this.get('focussedObject')).blur();
        } else if (this.get('hideOnClick')) {
          this.sendAction('onClose');
        }
      }
    },

    focusOut: function focusOut() {
      this.set('focussedObject', null);
      this.set('isFocussed', false);
    },

    focusIn: function focusIn(event) {
      this.set('focussedObject', event.target);
      this.set('isFocussed', true);
    },

    actions: {
      hide: function hide() {
        if (this.get('isFocussed') && this.get('focussedObject')) {
          this.$(this.get('focussedObject')).blur();
        } else {
          this.sendAction('onClose');
        }
      }
    }
  });

});
define('frontend-cp/components/ko-dropdown/container/content/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/container/content/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/container/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-dropdown/container/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","yield",["button",["get","this",["loc",[null,[2,19],[2,23]]]]],[],["loc",[null,[2,2],[2,25]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-dropdown/container/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","yield",["content",["get","this",["loc",[null,[6,20],[6,24]]]]],[],["loc",[null,[6,2],[6,26]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/container/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["block","ko-dropdown/container/button",[],[],0,null,["loc",[null,[1,0],[3,33]]]],
        ["block","ko-dropdown/container/content",[],["registerAs",["subexpr","@mut",[["get","contentComponent",["loc",[null,[5,44],[5,60]]]]],[],[]],"isParentFocussed",["subexpr","@mut",[["get","isFocussed",["loc",[null,[5,78],[5,88]]]]],[],[]],"hideOnChildFocus",["subexpr","@mut",[["get","hideOnChildFocus",["loc",[null,[5,106],[5,122]]]]],[],[]],"hideOnClick",["subexpr","@mut",[["get","hideOnClick",["loc",[null,[5,135],[5,146]]]]],[],[]],"onClose","onContentRequestClose"],1,null,["loc",[null,[5,0],[7,34]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/drill-down/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    hideOnClick: false,

    hideDropdown: false,
    contentStyle: null,

    actions: {
      onSelect: function onSelect(value) {
        this.sendAction('onSelect', value);
        this.set('hideDropdown', true);
      }
    }
  });

});
define('frontend-cp/components/ko-dropdown/drill-down/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-dropdown/drill-down/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-dropdown/select/button",[],["label",["subexpr","@mut",[["get","label",["loc",[null,[3,38],[3,43]]]]],[],[]]],["loc",[null,[3,4],[3,45]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      var child1 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-dropdown/drill-down/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-option-list-drill-down",[],["options",["subexpr","@mut",[["get","options",["loc",[null,[7,14],[7,21]]]]],[],[]],"placeholder",["subexpr","@mut",[["get","placeholder",["loc",[null,[8,18],[8,29]]]]],[],[]],"showExpandedByDefault",true,"onValueChange","onSelect"],["loc",[null,[6,4],[11,6]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-dropdown/drill-down/template.hbs"
        },
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[2,12],[2,16]]]],"button"],[],["loc",[null,[2,8],[2,26]]]]],[],0,null,["loc",[null,[2,2],[4,9]]]],
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[5,12],[5,16]]]],"content"],[],["loc",[null,[5,8],[5,27]]]]],[],1,null,["loc",[null,[5,2],[12,9]]]]
        ],
        locals: ["name","dropdownContext"],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/drill-down/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-dropdown/container",[],["hideOnClick",["subexpr","@mut",[["get","hideOnClick",["loc",[null,[1,37],[1,48]]]]],[],[]],"hideOnChildFocus",true,"hideDropdown",["subexpr","@mut",[["get","hideDropdown",["loc",[null,[1,84],[1,96]]]]],[],[]]],0,null,["loc",[null,[1,0],[13,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/list/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'ul',
    // Allow users of dropdown list to set style directly in template eg:
    // {{#ko-dropdown/list style="width: 1000px;"}}
    //    {{yield}}
    // {{/ko-dropdown/list}}
    attributeBindings: ['style'],

    classNames: ['ko-dropdown-list']
  });

});
define('frontend-cp/components/ko-dropdown/list/group/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-dropdown/list/group/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/list/group/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-dropdown-list_group__label");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-dropdown-list_group__content");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),0,0);
        return morphs;
      },
      statements: [
        ["content","label",["loc",[null,[1,43],[1,52]]]],
        ["content","yield",["loc",[null,[2,45],[2,54]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/list/hr/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-dropdown/list/hr/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/list/hr/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/list/item/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    link: null,
    action: null,
    content: null,

    tagName: 'li',
    classNameBindings: ['link:ko-dropdown-list_item--link'],

    click: function click() {
      if (this.get('action')) {
        // we take action as a parameter - we want to fire that action on the parent component
        // and specify which item was clicked on using the content parameter.
        // the this.set() bit saves the name of the action passed in
        // This way we conveniently have both the named action passed in AND we are passing it up the
        // chain in one fell swoop.
        this.set('actionToFire', this.get('action'));
        this.sendAction('actionToFire', this.get('content'));
      }
    }

  });

});
define('frontend-cp/components/ko-dropdown/list/item/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 2,
                "column": 64
              }
            },
            "moduleName": "frontend-cp/components/ko-dropdown/list/item/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["content","yield",["loc",[null,[2,55],[2,64]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-dropdown/list/item/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["block","link-to",[["get","link",["loc",[null,[2,13],[2,17]]]]],["class","ko-dropdown-list_item__link"],0,null,["loc",[null,[2,2],[2,76]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-dropdown/list/item/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["content","yield",["loc",[null,[4,2],[4,11]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/list/item/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","if",[["get","link",["loc",[null,[1,6],[1,10]]]]],[],0,1,["loc",[null,[1,0],[5,7]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/list/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/list/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/select/button/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    label: '',
    classNames: ['ko-dropdown-select__button']
  });

});
define('frontend-cp/components/ko-dropdown/select/button/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 64
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/select/button/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","ko-dropdown-select__icon i-select");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","label",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-dropdown/select/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    hideOnClick: false,

    didInsertElement: function didInsertElement() {
      var width = this.$('.ko-dropdown-select__button').outerWidth(true);
      this.set('contentStyle', ('min-width:' + width + 'px;').htmlSafe());
    },
    contentStyle: null
  });

});
define('frontend-cp/components/ko-dropdown/select/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-dropdown/select/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-dropdown/select/button",[],["label",["subexpr","@mut",[["get","label",["loc",[null,[3,38],[3,43]]]]],[],[]]],["loc",[null,[3,4],[3,45]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      var child1 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 6,
                  "column": 4
                },
                "end": {
                  "line": 8,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-dropdown/select/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["content","yield",["loc",[null,[7,6],[7,15]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 9,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-dropdown/select/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","ko-dropdown/list",[],["class","ko-dropdown-select__content","style",["subexpr","@mut",[["get","contentStyle",["loc",[null,[6,66],[6,78]]]]],[],[]]],0,null,["loc",[null,[6,4],[8,25]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-dropdown/select/template.hbs"
        },
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[2,12],[2,16]]]],"button"],[],["loc",[null,[2,8],[2,26]]]]],[],0,null,["loc",[null,[2,2],[4,9]]]],
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[5,12],[5,16]]]],"content"],[],["loc",[null,[5,8],[5,27]]]]],[],1,null,["loc",[null,[5,2],[9,9]]]]
        ],
        locals: ["name","dropdownContext"],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-dropdown/select/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-dropdown/container",[],["hideOnClick",["subexpr","@mut",[["get","hideOnClick",["loc",[null,[1,37],[1,48]]]]],[],[]],"hideOnChildFocus",true],0,null,["loc",[null,[1,0],[10,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-editable-text/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    onValueChange: null,

    isEditing: false,
    isEdited: false,
    valueToSave: null,

    valueDidChange: (function () {
      if (this.get('isEditing')) {
        return;
      }
      this.set('valueToSave', this.get('value'));
    }).observes('value'),

    actions: {
      edit: function edit() {
        this.startEditing();
      },

      editComplete: function editComplete() {
        this.stopEditing();
        if (this.get('onValueChange')) {
          this.sendAction('onValueChange', this.get('valueToSave'));
        } else {
          this.set('value', this.get('valueToSave'));
        }
        //this.set('isEdited', true);
      }
    },

    focusOut: function focusOut() {
      this.stopEditing();
    },

    startEditing: function startEditing() {
      var _this = this;

      this.set('isEditing', true);
      this.set('valueToSave', this.get('value'));
      Ember['default'].run.scheduleOnce('afterRender', this, function () {
        _this.$().find('.editable-text__input').focus();
      });
    },

    stopEditing: function stopEditing() {
      this.set('isEditing', false);
    }
  });

});
define('frontend-cp/components/ko-editable-text/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-editable-text/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","i-pencil i-color-grey i-size-14 u-invisible");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(fragment, [4]);
        var morphs = new Array(5);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createElementMorph(element0);
        morphs[2] = dom.createMorphAt(element0,0,0);
        morphs[3] = dom.createAttrMorph(element1, 'class');
        morphs[4] = dom.createMorphAt(element1,0,0);
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",["editable-text__text ",["subexpr","if",[["get","isEditing",["loc",[null,[1,55],[1,64]]]],"u-hidden"],[],["loc",[null,[1,50],[1,77]]]]," ",["subexpr","if",[["get","isEdited",["loc",[null,[1,84],[1,92]]]],"editable-text__text--edited"],[],["loc",[null,[1,78],[1,125]]]]]]],
        ["element","action",["edit"],[],["loc",[null,[1,5],[1,22]]]],
        ["content","value",["loc",[null,[1,127],[1,136]]]],
        ["attribute","class",["concat",[["subexpr","unless",[["get","isEditing",["loc",[null,[4,21],[4,30]]]],"u-hidden"],[],["loc",[null,[4,12],[4,43]]]]]]],
        ["inline","input",[],["value",["subexpr","@mut",[["get","valueToSave",["loc",[null,[4,59],[4,70]]]]],[],[]],"enter","editComplete","class","editable-text__input"],["loc",[null,[4,45],[4,122]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-event-button/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'span',
    click: function click(event) {
      this.sendAction('on-click', event);
    }
  });

});
define('frontend-cp/components/ko-event-button/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 26
          }
        },
        "moduleName": "frontend-cp/components/ko-event-button/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("button");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,8],[1,17]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-feed/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    events: null,

    orderedEvents: (function () {
      var events = this.get('events');

      if (!events || !events.get('length')) {
        //no events yet
        return;
      }
      return events.sortBy('createdAt').reverse();
    }).property('events.@each'),

    actions: {
      onReplyWithQuote: function onReplyWithQuote(quote) {
        this.sendAction('onReplyWithQuote', quote);
      }
    }
  });

});
define('frontend-cp/components/ko-feed/item/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //params
    event: null,

    showMenu: false,

    mouseEnter: function mouseEnter() {
      this.set('showMenu', true);
    },

    mouseLeave: function mouseLeave() {
      this.set('showMenu', false);
    },

    actions: {
      onReplyWithQuote: function onReplyWithQuote() {
        var quote = this.$('.feed__content').text().trim();

        this.sendAction('onReplyWithQuote', quote);
      }
    }
  });

});
define('frontend-cp/components/ko-feed/item/menu/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //params
    showMenu: false,
    classNameBindings: ['showMenu::u-hidden'],
    tagName: 'ul',
    classNames: ['list-inline'],

    actions: {
      replyWithQuote: function replyWithQuote() {
        this.sendAction('onReplyWithQuote');
      }
    }
  });

});
define('frontend-cp/components/ko-feed/item/menu/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-feed/item/menu/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("li");
        dom.setAttribute(el1,"class","ko-feed-item_menu__item i-quote i-color-grey--dark");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(1);
        morphs[0] = dom.createElementMorph(element0);
        return morphs;
      },
      statements: [
        ["element","action",["replyWithQuote"],[],["loc",[null,[1,4],[1,31]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-feed/item/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-feed/item/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createUnsafeMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["content","event.bodyHtml",["loc",[null,[8,6],[8,26]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 4
            },
            "end": {
              "line": 11,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-feed/item/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["content","event.bodyText",["loc",[null,[10,6],[10,24]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 4
              },
              "end": {
                "line": 17,
                "column": 4
              }
            },
            "moduleName": "frontend-cp/components/ko-feed/item/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("img");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode(" ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("br");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode(" ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element0, 'src');
            morphs[1] = dom.createMorphAt(fragment,5,5,contextualElement);
            morphs[2] = dom.createMorphAt(fragment,7,7,contextualElement);
            return morphs;
          },
          statements: [
            ["attribute","src",["concat",[["get","attachment.thumbnails.firstObject.url",["loc",[null,[15,18],[15,55]]]]]]],
            ["content","attachment.name",["loc",[null,[16,6],[16,25]]]],
            ["inline","ko-file-size",[],["size",["subexpr","@mut",[["get","attachment.size",["loc",[null,[16,46],[16,61]]]]],[],[]]],["loc",[null,[16,26],[16,63]]]]
          ],
          locals: ["attachment"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 18,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-feed/item/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","each",[["get","event.attachments",["loc",[null,[14,12],[14,29]]]]],[],0,null,["loc",[null,[14,4],[17,13]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-feed/item/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","feed__item");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","feed__image");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","feed__title");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","feed__title--small");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","feed__content");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [3]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);
        morphs[1] = dom.createMorphAt(element2,0,0);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [2]),0,0);
        morphs[3] = dom.createMorphAt(dom.childAt(element1, [5]),1,1);
        morphs[4] = dom.createMorphAt(element1,7,7);
        morphs[5] = dom.createMorphAt(element1,9,9);
        return morphs;
      },
      statements: [
        ["inline","ko-avatar",[],["avatar",["subexpr","@mut",[["get","event.creator.avatar",["loc",[null,[2,46],[2,66]]]]],[],[]],"size","large"],["loc",[null,[2,27],[2,81]]]],
        ["content","event.creator.fullName",["loc",[null,[3,27],[3,53]]]],
        ["inline","format-message",[["subexpr","intl-get",["feed.replied"],[],["loc",[null,[4,53],[4,78]]]]],["ago",["subexpr","ago",[["get","event.createdAt",["loc",[null,[4,88],[4,103]]]]],[],["loc",[null,[4,83],[4,104]]]]],["loc",[null,[4,36],[4,106]]]],
        ["block","if",[["get","event.bodyHtml",["loc",[null,[7,10],[7,24]]]]],[],0,1,["loc",[null,[7,4],[11,11]]]],
        ["block","if",[["get","event.attachments",["loc",[null,[13,8],[13,25]]]]],[],2,null,["loc",[null,[13,2],[18,9]]]],
        ["inline","ko-feed/item/menu",[],["showMenu",["subexpr","@mut",[["get","showMenu",["loc",[null,[19,31],[19,39]]]]],[],[]],"onReplyWithQuote","onReplyWithQuote"],["loc",[null,[19,2],[19,77]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/components/ko-feed/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-feed/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-feed/item",[],["event",["subexpr","@mut",[["get","event",["loc",[null,[2,23],[2,28]]]]],[],[]],"onReplyWithQuote","onReplyWithQuote"],["loc",[null,[2,2],[2,66]]]]
        ],
        locals: ["event"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-feed/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","each",[["get","orderedEvents",["loc",[null,[1,8],[1,21]]]]],[],0,null,["loc",[null,[1,0],[3,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-feedback/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'li',
    classNames: ['info-bar-item', 'u-no-bottom-border'],
    icon: function icon(feedback) {
      return feedback === 1 ? 'i--feedback-positive' : 'i--feedback-negative';
    }
  });

});
define('frontend-cp/components/ko-feedback/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-feedback/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","u-inline-block ko-feedback__item");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("TODO");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","u-inline-block ko-feedback__item");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("TODO");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","u-inline-block ko-feedback__item");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("TODO");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1]);
          var element1 = dom.childAt(fragment, [3, 1]);
          var element2 = dom.childAt(fragment, [5, 1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createAttrMorph(element1, 'class');
          morphs[2] = dom.createAttrMorph(element2, 'class');
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",[["subexpr","ko-helper",[["get","icon",["loc",[null,[6,26],[6,30]]]],["get","feedbackItem.yesterday",["loc",[null,[6,31],[6,53]]]]],[],["loc",[null,[6,14],[6,55]]]]]]],
          ["attribute","class",["concat",[["subexpr","ko-helper",[["get","icon",["loc",[null,[11,26],[11,30]]]],["get","feedbackItem.lastWeek",["loc",[null,[11,31],[11,52]]]]],[],["loc",[null,[11,14],[11,54]]]]]]],
          ["attribute","class",["concat",[["subexpr","ko-helper",[["get","icon",["loc",[null,[16,26],[16,30]]]],["get","feedbackItem.lastYear",["loc",[null,[16,31],[16,52]]]]],[],["loc",[null,[16,14],[16,54]]]]]]]
        ],
        locals: ["feedbackItem"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-feedback/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("p");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(fragment,4,4,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,3],[1,12]]]],
        ["block","each",[["get","feedback",["loc",[null,[3,8],[3,16]]]]],[],0,null,["loc",[null,[3,0],[20,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-field/checkbox/component', ['exports', 'ember', 'npm:lodash'], function (exports, Ember, _) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    title: '',
    options: null,
    isErrored: false,
    isEdited: false,
    value: [],
    onValueChange: null,

    tagName: 'li',
    classNames: ['info-bar-item'],
    classNameBindings: ['isEdited:info-bar-item--edited', 'isErrored:info-bar-item--error'],

    isChecked: function isChecked(value, id) {
      return _['default'].contains(value, id.toString());
    },

    actions: {
      valueChanged: function valueChanged(id, checked) {
        var value = _['default'].clone(this.get('value'));
        if (checked) {
          value.push(id.toString());
        } else {
          value.splice(value.indexOf(id.toString()), 1);
        }
        value.sort();
        this.sendAction('onValueChange', value);
      }
    }
  });

});
define('frontend-cp/components/ko-field/checkbox/single/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    checked: false,
    label: '',
    optionId: '',
    onValueChange: null,

    actions: {
      valueChanged: function valueChanged(value) {
        this.sendAction('onValueChange', this.get('optionId'), value);
      }
    }
  });

});
define('frontend-cp/components/ko-field/checkbox/single/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 66
          }
        },
        "moduleName": "frontend-cp/components/ko-field/checkbox/single/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-checkbox",[],["checked",["subexpr","@mut",[["get","checked",["loc",[null,[1,22],[1,29]]]]],[],[]],"label",["subexpr","@mut",[["get","label",["loc",[null,[1,36],[1,41]]]]],[],[]],"onCheck","valueChanged"],["loc",[null,[1,0],[1,66]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-field/checkbox/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-field/checkbox/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-field/checkbox/single",[],["checked",["subexpr","ko-helper",[["get","isChecked",["loc",[null,[3,48],[3,57]]]],["get","value",["loc",[null,[3,58],[3,63]]]],["get","option.id",["loc",[null,[3,64],[3,73]]]]],[],["loc",[null,[3,37],[3,74]]]],"label",["subexpr","@mut",[["get","option.value",["loc",[null,[3,81],[3,93]]]]],[],[]],"onValueChange","valueChanged","optionId",["subexpr","@mut",[["get","option.id",["loc",[null,[3,132],[3,141]]]]],[],[]]],["loc",[null,[3,2],[3,143]]]]
        ],
        locals: ["option"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-field/checkbox/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","info-bar-item__header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,36],[1,45]]]],
        ["block","each",[["get","options",["loc",[null,[2,8],[2,15]]]]],[],0,null,["loc",[null,[2,0],[4,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-field/date/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    title: '',
    isErrored: false,
    isEdited: false,
    value: null,
    onValueChange: null,

    tagName: 'li',
    attributeBindings: ['tabindex', 'role'],
    classNames: ['info-bar-item'],
    classNameBindings: ['isEdited:info-bar-item--edited', 'isErrored:info-bar-item--error'],
    tabindex: 0,
    isShowingCalendar: false,
    isMouseAccess: false,

    role: 'menuitem',

    click: function click() {
      this.set('isMouseAccess', true);
    },

    focusIn: function focusIn() {
      var mouseAccess = this.get('isMouseAccess');
      if (!mouseAccess) {
        this.set('isShowingCalendar', true);
      }
    },

    focusOut: function focusOut() {
      this.set('isMouseAccess', false);
      this.set('isShowingCalendar', false);
    },

    actions: {

      dateChange: function dateChange(date) {
        this.sendAction('onValueChange', date);
        this.set('isShowingCalendar', false);
      }
    }
  });

});
define('frontend-cp/components/ko-field/date/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-field/date/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","format-date",[["get","value",["loc",[null,[4,18],[4,23]]]]],["format","full"],["loc",[null,[4,4],[4,39]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-field/date/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","info-bar-item__header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("a");
        dom.setAttribute(el1,"class","dropdown i-select");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"role","menu");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [4]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);
        morphs[2] = dom.createAttrMorph(element0, 'class');
        morphs[3] = dom.createMorphAt(element0,1,1);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,36],[1,45]]]],
        ["block","if",[["get","value",["loc",[null,[3,8],[3,13]]]]],[],0,null,["loc",[null,[3,2],[5,9]]]],
        ["attribute","class",["concat",["dropdown-menu ",["subexpr","if",[["get","isShowingCalendar",["loc",[null,[7,31],[7,48]]]],"","u-hidden"],[],["loc",[null,[7,26],[7,64]]]]]]],
        ["inline","ko-datepicker",[],["date",["subexpr","@mut",[["get","value",["loc",[null,[8,23],[8,28]]]]],[],[]],"on-date-change","dateChange"],["loc",[null,[8,2],[8,58]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-field/drill-down/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //params
    title: null,
    options: new Ember['default'].A([]),
    value: null,
    isEdited: false,
    isErrored: false,
    onValueChange: null,

    tagName: 'li',
    classNames: ['info-bar-item'],
    classNameBindings: ['isEdited:info-bar-item--edited', 'isErrored:info-bar-item--error'],

    actions: {
      onComponentValueChange: function onComponentValueChange(value) {
        this.sendAction('onValueChange', value);
      }
    }
  });

});
define('frontend-cp/components/ko-field/drill-down/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-field/drill-down/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-option-list-drill-down",[],["title",["subexpr","@mut",[["get","title",["loc",[null,[2,8],[2,13]]]]],[],[]],"options",["subexpr","@mut",[["get","options",["loc",[null,[3,10],[3,17]]]]],[],[]],"value",["subexpr","@mut",[["get","value",["loc",[null,[4,8],[4,13]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isEdited",["loc",[null,[5,11],[5,19]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","isErrored",["loc",[null,[6,12],[6,21]]]]],[],[]],"onValueChange","onComponentValueChange"],["loc",[null,[1,0],[8,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-field/select/component', ['exports', 'ember', 'frontend-cp/lib/keycodes'], function (exports, Ember, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    title: '',
    options: [],
    isErrored: false,
    isEdited: false,
    value: null,
    onValueChange: null,
    idPath: null,
    labelPath: null,

    tagName: 'li',
    attributeBindings: ['tabindex', 'role'],
    classNames: ['info-bar-item'],
    classNameBindings: ['isEdited:info-bar-item--edited', 'isErrored:info-bar-item--error'],
    tabindex: 0,
    showDropdown: false,
    isMouseAccess: false,
    keyboardPosition: 0,

    role: 'menuitem',

    selectedItem: (function () {
      var _this = this;

      var currentValue = this.get('value');
      var options = this.get('options');
      if (!options) {
        return null;
      }
      return options.reduce(function (acc, value) {
        var id = _this.get('idPath') ? Ember['default'].get(value, _this.get('idPath')) : value;
        return acc || (id === currentValue ? value : acc);
      }, null);
    }).property('options', 'value', 'idPath'),

    moveSelectedItem: function moveSelectedItem(direction) {
      var options = this.get('options');
      var keyboardPosition = this.get('keyboardPosition');
      switch (direction) {
        case 'down':
          {
            keyboardPosition = keyboardPosition + 1;
            if (keyboardPosition <= Ember['default'].get(options, 'length')) {
              this.$('ul li:nth-child(' + keyboardPosition + ')').focus();
              this.set('keyboardPosition', keyboardPosition);
            }
            break;
          }
        case 'up':
          {
            keyboardPosition = keyboardPosition - 1;
            if (keyboardPosition > 0) {
              this.$('ul li:nth-child(' + keyboardPosition + ')').focus();
              this.set('keyboardPosition', keyboardPosition);
            }
            break;
          }
      }
    },

    click: function click() {
      this.set('isMouseAccess', true);
    },

    focusIn: function focusIn() {
      var mouseAccess = this.get('isMouseAccess');
      if (!mouseAccess) {
        this.set('showDropdown', true);
      }
    },

    focusOut: function focusOut() {
      this.set('isMouseAccess', false);
      this.set('keyboardPosition', 0);
      this.set('showDropdown', false);
    },

    keyDown: function keyDown(e) {
      switch (e.keyCode) {
        case KeyCodes.up:
          {
            this.moveSelectedItem('up');
            return false;
          }
        case KeyCodes.down:
          {
            this.set('showDropdown', true);
            this.moveSelectedItem('down');
            return false;
          }
        case KeyCodes.tab:
          {
            this.set('showDropdown', false);
            break;
          }
        case KeyCodes.enter:
          {
            var keyboardPosition = this.get('keyboardPosition');
            this.$('ul li:nth-child(' + keyboardPosition + ')').click();
            this.set('showDropdown', false);
            this.set('keyboardPosition', 0);
            return false;
          }
      }
    },

    actions: {
      selectItem: function selectItem(selection) {
        this.set('showDropdown', false);
        this.sendAction('onValueChange', selection);
      }
    }
  });

});
define('frontend-cp/components/ko-field/select/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-field/select/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1,"class","dropdown-menu__item");
          dom.setAttribute(el1,"tabindex","-1");
          dom.setAttribute(el1,"role","menuitemradio");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0,1,1);
          return morphs;
        },
        statements: [
          ["element","action",["selectItem",["subexpr","if",[["get","idPath",["loc",[null,[7,60],[7,66]]]],["subexpr","get",[["get","item",["loc",[null,[7,72],[7,76]]]],["get","idPath",["loc",[null,[7,77],[7,83]]]]],[],["loc",[null,[7,67],[7,84]]]],["get","item",["loc",[null,[7,85],[7,89]]]]],[],["loc",[null,[7,56],[7,90]]]]],[],["loc",[null,[7,34],[7,92]]]],
          ["inline","if",[["get","labelPath",["loc",[null,[8,9],[8,18]]]],["subexpr","get",[["get","item",["loc",[null,[8,24],[8,28]]]],["get","labelPath",["loc",[null,[8,29],[8,38]]]]],[],["loc",[null,[8,19],[8,39]]]],["get","item",["loc",[null,[8,40],[8,44]]]]],[],["loc",[null,[8,4],[8,46]]]]
        ],
        locals: ["item"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 5
          }
        },
        "moduleName": "frontend-cp/components/ko-field/select/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","info-bar-item__header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("a");
        dom.setAttribute(el1,"class","dropdown i-select");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1,"role","menu");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [4]);
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);
        morphs[2] = dom.createAttrMorph(element1, 'class');
        morphs[3] = dom.createMorphAt(element1,1,1);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,36],[1,45]]]],
        ["inline","if",[["get","labelPath",["loc",[null,[3,7],[3,16]]]],["subexpr","get",[["get","selectedItem",["loc",[null,[3,22],[3,34]]]],["get","labelPath",["loc",[null,[3,35],[3,44]]]]],[],["loc",[null,[3,17],[3,45]]]],["get","selectedItem",["loc",[null,[3,46],[3,58]]]]],[],["loc",[null,[3,2],[3,60]]]],
        ["attribute","class",["concat",["dropdown-menu ",["subexpr","if",[["get","showDropdown",["loc",[null,[5,30],[5,42]]]],"","u-hidden"],[],["loc",[null,[5,25],[5,58]]]]]]],
        ["block","each",[["get","options",["loc",[null,[6,8],[6,15]]]]],[],0,null,["loc",[null,[6,0],[10,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-field/tags/component', ['exports', 'ember', 'frontend-cp/components/mixins/suggestions', 'frontend-cp/components/mixins/drop-down-keyboard-nav', 'frontend-cp/lib/keycodes'], function (exports, Ember, Suggestions, DropDownKeyboardNav, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend(Suggestions['default'], DropDownKeyboardNav['default'], {
    //params
    selectedTags: new Ember['default'].A([]),
    tags: new Ember['default'].A([]),
    onTagAddition: null,
    onTagRemoval: null,

    classNames: ['info-bar-item'],
    classNameBindings: ['showDropdown:active', 'isEdited:info-bar-item--edited', 'isErrored:info-bar-item--error'],
    attributeBindings: ['tabindex', 'role'],
    tabindex: 0,
    tagName: 'li',
    role: 'menuitem',
    title: 'Tags',
    searchTerm: '',
    suggestedTags: new Ember['default'].A([]),
    isMouseAccess: false,
    showDropdown: false,
    dropdownKeyboardPosition: 0,
    selectedTagsKeyboardPosition: 0,
    isValidQuery: Ember['default'].computed.notEmpty('searchTerm'),
    isNotSuggested: Ember['default'].computed.not('isSuggested'),
    isNotSelected: Ember['default'].computed.not('isSelected'),
    isCreateAllowed: Ember['default'].computed.and('isNotSuggested', 'isNotSelected', 'isValidQuery'),

    resetSuggestedTagKeyboardPosition: function resetSuggestedTagKeyboardPosition() {
      var selectedTags = this.get('selectedTags');
      this.set('selectedTagsKeyboardPosition', selectedTags.length + 1);
    },

    isSuggested: (function () {
      var searchTerm = this.get('searchTerm');
      var suggestedTags = this.get('suggestedTags');
      return suggestedTags.contains(searchTerm);
    }).property('searchTerm', 'suggestedTags'),

    isSelected: (function () {
      var searchTerm = this.get('searchTerm');
      var selectedTags = this.get('selectedTags');
      return selectedTags.contains(searchTerm);
    }).property('searchTerm', 'selectedTags'),

    onSearchTermChange: (function () {
      this.resetSuggestedTagKeyboardPosition();
    }).observes('searchTerm'),

    didInsertElement: function didInsertElement() {
      this.set('suggestedTags', this.get('tags'));
      this.resetSuggestedTagKeyboardPosition();
    },

    click: function click() {
      this.set('isMouseAccess', true);
    },

    focusIn: function focusIn(e) {
      this.set('lastTagText', this.$(e.target).find('span:first').text());
      var mouseAccess = this.get('isMouseAccess');
      if (!mouseAccess) {
        this.set('showDropdown', true);
      }
    },

    focusOut: function focusOut() {
      this.set('isMouseAccess', false);
      this.set('dropdownKeyboardPosition', 0);
      this.set('showDropdown', false);
    },

    keyDown: function keyDown(e) {
      var searchTerm = this.get('searchTerm');
      var dropdownKeyboardPosition = this.get('dropdownKeyboardPosition');
      var selectedTags = this.get('selectedTags');
      var suggestedTags = this.get('suggestedTags');
      var selectedTagsSelector = 'ul:nth-child(2)';
      var suggestionsListSelector = 'ul:nth-child(3)';

      switch (e.keyCode) {
        case KeyCodes.up:
          {
            this.resetSuggestedTagKeyboardPosition();
            this.moveSelectedItem(suggestedTags.length + 1, suggestionsListSelector, 'up', 'dropdownKeyboardPosition');
            return false;
          }
        case KeyCodes.down:
          {
            this.resetSuggestedTagKeyboardPosition();
            this.set('showDropdown', true);
            this.moveSelectedItem(suggestedTags.length + 1, suggestionsListSelector, 'down', 'dropdownKeyboardPosition');
            return false;
          }
        case KeyCodes.left:
          {
            this.moveSelectedItem(selectedTags.length, selectedTagsSelector, 'up', 'selectedTagsKeyboardPosition');
            return false;
          }
        case KeyCodes.right:
          {
            this.moveSelectedItem(selectedTags.length, selectedTagsSelector, 'down', 'selectedTagsKeyboardPosition');
            return false;
          }
        case KeyCodes.tab:
          {
            this.set('showDropdown', false);
            break;
          }
        case KeyCodes.enter:
          {
            if (dropdownKeyboardPosition === 0) {
              this.send('addTag', searchTerm);
            } else {
              var _dropdownKeyboardPosition = this.get('dropdownKeyboardPosition');
              this.$('ul:nth-child(3) li:nth-child(' + _dropdownKeyboardPosition + ')').click();
              this.$().focus();
              this.set('showDropdown', false);
              this.set('dropdownKeyboardPosition', 0);
              return false;
            }
            break;
          }
        case KeyCodes.backspace:
          {
            var tag = this.get('lastTagText');
            if (tag !== '') {
              this.send('removeTag', tag);
              this.$().focus();
              return false;
            } else {
              this.$('input').focus();
            }
            break;
          }
        default:
          {
            this.$('input').focus();
          }
      }
    },

    keyUp: function keyUp(e) {
      if (e.keyCode !== KeyCodes.up && e.keyCode !== KeyCodes.down && e.keyCode !== KeyCodes.enter && e.keyCode !== KeyCodes.tab) {
        this.updateSuggestions();
        this.set('showDropdown', true);
      }
    },

    updateSuggestions: function updateSuggestions() {
      var selectedTags = this.get('selectedTags');
      var searchTerm = this.get('searchTerm');
      var tags = this.get('tags');
      var suggestions = this.matches(searchTerm, tags);
      this.set('suggestedTags', suggestions.removeObjects(selectedTags));
    },

    actions: {
      removeTag: function removeTag(tag) {
        this.sendAction('onTagRemoval', tag);
      },

      addTag: function addTag(tag) {
        this.sendAction('onTagAddition', tag);
        this.set('searchTerm', '');
        this.set('showDropdown', false);
        this.updateSuggestions();
        this.resetSuggestedTagKeyboardPosition();
      }
    }
  });

});
define('frontend-cp/components/ko-field/tags/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-field/tags/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1,"class","tag");
          dom.setAttribute(el1,"tabindex","-1");
          dom.setAttribute(el1,"role","menuitem");
          var el2 = dom.createElement("span");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("span");
          dom.setAttribute(el2,"class","tag__action");
          var el3 = dom.createTextNode("x");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var element3 = dom.childAt(element2, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(element2, [0]),0,0);
          morphs[1] = dom.createElementMorph(element3);
          return morphs;
        },
        statements: [
          ["content","tag",["loc",[null,[4,52],[4,59]]]],
          ["element","action",["removeTag",["get","tag",["loc",[null,[4,93],[4,96]]]]],[],["loc",[null,[4,72],[4,98]]]]
        ],
        locals: ["tag"],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-field/tags/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1,"class","dropdown-menu__item");
          dom.setAttribute(el1,"tabindex","-1");
          dom.setAttribute(el1,"role","menuitem");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1,0,0);
          return morphs;
        },
        statements: [
          ["element","action",["addTag",["get","tag",["loc",[null,[10,52],[10,55]]]]],[],["loc",[null,[10,34],[10,57]]]],
          ["content","tag",["loc",[null,[10,86],[10,93]]]]
        ],
        locals: ["tag"],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-field/tags/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1,"class","tag-new dropdown-menu__item");
          dom.setAttribute(el1,"tabindex","-1");
          dom.setAttribute(el1,"role","menuItem");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("span");
          dom.setAttribute(el2,"class","t-caption t-small u-ml--");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element0);
          morphs[1] = dom.createMorphAt(element0,0,0);
          morphs[2] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
          return morphs;
        },
        statements: [
          ["element","action",["addTag",["get","searchTerm",["loc",[null,[13,72],[13,82]]]]],[],["loc",[null,[13,54],[13,84]]]],
          ["content","searchTerm",["loc",[null,[13,101],[13,115]]]],
          ["inline","format-message",[["subexpr","intl-get",["cases.newtag"],[],["loc",[null,[13,171],[13,196]]]]],[],["loc",[null,[13,154],[13,198]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-field/tags/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","info-bar-item__header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1,"class","list-inline u-overflow-scroll");
        dom.setAttribute(el1,"role","menu");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("li");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1,"role","menu");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element4 = dom.childAt(fragment, [2]);
        var element5 = dom.childAt(fragment, [4]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(element4,1,1);
        morphs[2] = dom.createMorphAt(dom.childAt(element4, [3]),0,0);
        morphs[3] = dom.createAttrMorph(element5, 'class');
        morphs[4] = dom.createMorphAt(element5,1,1);
        morphs[5] = dom.createMorphAt(element5,2,2);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,36],[1,45]]]],
        ["block","each",[["get","selectedTags",["loc",[null,[3,8],[3,20]]]]],[],0,null,["loc",[null,[3,0],[5,9]]]],
        ["inline","input",[],["class","tag-input","placeholder","Add a tag...","value",["subexpr","@mut",[["get","searchTerm",["loc",[null,[6,65],[6,75]]]]],[],[]],"tabindex",0,"role","textbox"],["loc",[null,[6,6],[6,103]]]],
        ["attribute","class",["concat",["dropdown-menu ",["subexpr","unless",[["get","showDropdown",["loc",[null,[8,34],[8,46]]]],"u-hidden"],[],["loc",[null,[8,25],[8,59]]]]," list-bare"]]],
        ["block","each",[["get","suggestedTags",["loc",[null,[9,8],[9,21]]]]],[],1,null,["loc",[null,[9,0],[11,9]]]],
        ["block","if",[["get","isCreateAllowed",["loc",[null,[12,6],[12,21]]]]],[],2,null,["loc",[null,[12,0],[14,7]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/components/ko-field/text-area/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    title: '',
    isErrored: false,
    isEdited: false,
    value: '',
    onValueChange: null,

    tagName: 'li',
    classNames: ['info-bar-item'],
    classNameBindings: ['isEdited:info-bar-item--edited', 'isErrored:info-bar-item--error'],

    focusOut: function focusOut() {
      var value = this.$('textarea').val();

      this.$('textarea').scrollTop(0);
      this.sendAction('onValueChange', value);
    }
  });

});
define('frontend-cp/components/ko-field/text-area/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-field/text-area/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","info-bar-item__header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("textarea");
        dom.setAttribute(el2,"class","ko-field-text__textarea");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2, 1]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createAttrMorph(element0, 'value');
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,36],[1,45]]]],
        ["attribute","value",["concat",[["get","value",["loc",[null,[3,53],[3,58]]]]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-field/text/component', ['exports', 'ember', 'frontend-cp/lib/keycodes'], function (exports, Ember, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    title: '',
    isErrored: false,
    isEdited: false,
    value: '',
    onValueChange: null,
    editable: true,

    tagName: 'li',
    classNames: ['info-bar-item'],
    classNameBindings: ['isEdited:info-bar-item--edited', 'isErrored:info-bar-item--error'],

    keyPress: function keyPress(e) {
      switch (e.keyCode) {
        case KeyCodes.enter:
          {
            this.$('input').focusout();
            break;
          }
        default:
          {
            return true;
          }
      }
    },

    actions: {
      textUpdated: function textUpdated(value) {
        this.sendAction('onValueChange', value);
      }
    }
  });

});
define('frontend-cp/components/ko-field/text/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-field/text/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","info-bar-item__header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,36],[1,45]]]],
        ["inline","input",[],["class","ko-field-text__input","value",["subexpr","@mut",[["get","value",["loc",[null,[3,45],[3,50]]]]],[],[]],"focus-out","textUpdated","disabled",["subexpr","not",[["get","editable",["loc",[null,[3,89],[3,97]]]]],[],["loc",[null,[3,84],[3,98]]]]],["loc",[null,[3,2],[3,100]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-file-field/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'input',
    attributeBindings: ['type', 'multiple'],
    type: 'file',
    multiple: true,
    change: function change() {
      var files = this.element.files;
      this.sendAction('on-change', files);
    }

  });

});
define('frontend-cp/components/ko-file-field/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-file-field/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-file-size/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'span',
    size: null,

    options: (function () {
      var size = this.size;
      var options = undefined;
      if (size > 1024 * 1024) {
        options = {
          size: size / 1024 / 1024,
          unit: 'mb'
        };
      } else {
        options = {
          size: size / 1024,
          unit: 'kb'
        };
      }
      return options;
    }).property('size')
  });

});
define('frontend-cp/components/ko-file-size/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 84
          }
        },
        "moduleName": "frontend-cp/components/ko-file-size/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["generic.filesize"],[],["loc",[null,[1,17],[1,46]]]]],["size",["subexpr","@mut",[["get","options.size",["loc",[null,[1,52],[1,64]]]]],[],[]],"unit",["subexpr","@mut",[["get","options.unit",["loc",[null,[1,70],[1,82]]]]],[],[]]],["loc",[null,[1,0],[1,84]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-form-field/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    /**
     * Form field label
     * @type {string}
     */
    label: null,

    /**
     * Optional help text
     * @type {[string]}
     */
    help: null,

    /**
     * Optional validation errors
     * @type {[string[]]}
     */
    errors: null,

    tagName: 'label',
    classNames: ['ko-form-field']
  });

});
define('frontend-cp/components/ko-form-field/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 83
            }
          },
          "moduleName": "frontend-cp/components/ko-form-field/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("p");
          dom.setAttribute(el1,"class","ko-form-field__validation t-bad");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
          return morphs;
        },
        statements: [
          ["content","error",["loc",[null,[3,70],[3,79]]]]
        ],
        locals: ["error"],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 73
            }
          },
          "moduleName": "frontend-cp/components/ko-form-field/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("p");
          dom.setAttribute(el1,"class","ko-form-field__help t-caption t-small");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
          return morphs;
        },
        statements: [
          ["content","help",["loc",[null,[4,61],[4,69]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-form-field/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-form-field__label");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);
        morphs[3] = dom.createMorphAt(fragment,6,6,contextualElement);
        return morphs;
      },
      statements: [
        ["content","label",["loc",[null,[1,34],[1,43]]]],
        ["content","yield",["loc",[null,[2,0],[2,9]]]],
        ["block","each",[["get","errors",["loc",[null,[3,8],[3,14]]]]],[],0,null,["loc",[null,[3,0],[3,92]]]],
        ["block","if",[["get","help",["loc",[null,[4,6],[4,10]]]]],[],1,null,["loc",[null,[4,0],[4,80]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-info-bar/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'ul',
    classNames: ['list-bare']
  });

});
define('frontend-cp/components/ko-info-bar/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-info-bar/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-limited-text-area/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    classNames: ['u-pos-rel'],

    text: '',

    counter: (function () {
      return this.get('max') - this.get('text').length;
    }).property('max', 'text')
  });

});
define('frontend-cp/components/ko-limited-text-area/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-limited-text-area/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","input__counter");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),0,0);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","textarea",[],["value",["subexpr","@mut",[["get","text",["loc",[null,[1,17],[1,21]]]]],[],[]],"maxlength",["subexpr","@mut",[["get","max",["loc",[null,[1,32],[1,35]]]]],[],[]],"placeholder",["subexpr","@mut",[["get","placeholder",["loc",[null,[1,48],[1,59]]]]],[],[]],"class","input__text-area--clean"],["loc",[null,[1,0],[1,93]]]],
        ["content","counter",["loc",[null,[2,29],[2,40]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-linked-cases-context-menu/component', ['exports', 'ember', 'npm:lodash', 'frontend-cp/lib/keycodes'], function (exports, Ember, _, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    classNames: ['ko-linked-cases-context-menu'],

    showOptions: false,
    isShowingResults: false,
    selectedType: null,
    tabindex: 0,
    types: null,
    cases: null,
    searchTerm: null,
    filteredCases: null,
    selectedCases: new Ember['default'].A([]),

    setupParticipants: (function () {
      this.set('filteredCases', this.get('cases'));
    }).on('didInsertElement'),
    // TODO: when RFC implemented and its possible to invoke same actions via multiple events
    // https://github.com/emberjs/rfcs/blob/action/active/0000-improved-actions.md
    // https://github.com/emberjs/rfcs/pull/50
    // https://github.com/emberjs/rfcs/pull/15 (Simplifying Ember Concepts -> Improved actions that are invoked inside components as simple callbacks)
    keyDown: function keyDown(e) {
      if (e.keyCode === KeyCodes.down) {
        return false;
      }
      if (e.keyCode === KeyCodes.up) {
        return false;
      }
      if (e.keyCode === e.keyCodes.enter) {
        return false;
      }
    },
    // TODO: when RFC implemented and its possible to invoke same actions via multiple events
    // https://github.com/emberjs/rfcs/blob/action/active/0000-improved-actions.md
    // https://github.com/emberjs/rfcs/pull/50
    // https://github.com/emberjs/rfcs/pull/15 (Simplifying Ember Concepts -> Improved actions that are invoked inside components as simple callbacks)
    keyUp: function keyUp(e) {
      if (e.keyCode === KeyCodes.down) {
        return false;
      }
      if (e.keyCode === KeyCodes.up) {
        return false;
      }
      if (e.keyCode === KeyCodes.enter) {
        return false;
      }
      return false;
    },

    actions: {

      createLink: function createLink() {
        this.set('isShowingResults', false);
        this.set('searchTerm', '');
        var caseLink = { type: this.selectedType, title: this.selectedCases.get('firstObject').title };
        this.sendAction('addCaseLink', caseLink);
        this.set('selectedCases', []);
      },

      query: function query() {
        var _this = this;

        var filteredCases = _['default'].filter(this.cases, function (caseObj) {
          return _['default'].some([caseObj.title, caseObj.type], function (caseObj) {
            return caseObj.indexOf(_this.searchTerm) !== -1;
          });
        });

        this.set('filteredCases', filteredCases);
        this.set('searchTerm', '');
      },

      caseTypeSelected: function caseTypeSelected(caseObj) {
        this.set('selectedType', caseObj.type);
        this.set('showOptions', false);
      },

      caseSelected: function caseSelected(caseObj) {
        this.set('isShowingResults', false);
        this.selectedCases.pushObject(caseObj);
      },

      toggleDropdown: function toggleDropdown() {
        this.toggleProperty('showOptions');
      },

      removeSelectedCase: function removeSelectedCase(caseObj) {
        this.selectedCases.removeObject(caseObj);
      },

      whenKeyIsPressed: function whenKeyIsPressed() {
        this.set('isShowingResults', true);
      }

    }

  });

});
define('frontend-cp/components/ko-linked-cases-context-menu/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 6
              },
              "end": {
                "line": 14,
                "column": 6
              }
            },
            "moduleName": "frontend-cp/components/ko-linked-cases-context-menu/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            dom.setAttribute(el1,"class","dropdown-menu__item");
            dom.setAttribute(el1,"tabindex","-1");
            dom.setAttribute(el1,"role","menuitemradio");
            var el2 = dom.createTextNode(" ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element5 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element5);
            morphs[1] = dom.createMorphAt(element5,1,1);
            return morphs;
          },
          statements: [
            ["element","action",["caseTypeSelected",["get","case",["loc",[null,[12,68],[12,72]]]]],[],["loc",[null,[12,40],[12,74]]]],
            ["content","case.type",["loc",[null,[12,109],[12,122]]]]
          ],
          locals: ["case"],
          templates: []
        };
      }());
      var child1 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 20,
                "column": 8
              },
              "end": {
                "line": 22,
                "column": 8
              }
            },
            "moduleName": "frontend-cp/components/ko-linked-cases-context-menu/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            dom.setAttribute(el1,"class","ko-linked-cases-context-menu__tag");
            dom.setAttribute(el1,"tabindex","-1");
            dom.setAttribute(el1,"role","menuitem");
            var el2 = dom.createElement("span");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("span");
            dom.setAttribute(el2,"class","ko-linked-cases-context-menu__tag-action");
            var el3 = dom.createTextNode("x");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element3 = dom.childAt(fragment, [1]);
            var element4 = dom.childAt(element3, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element3, [0]),0,0);
            morphs[1] = dom.createElementMorph(element4);
            return morphs;
          },
          statements: [
            ["content","case.title",["loc",[null,[21,90],[21,104]]]],
            ["element","action",["removeSelectedCase",["get","case",["loc",[null,[21,147],[21,151]]]]],[],["loc",[null,[21,117],[21,153]]]]
          ],
          locals: ["case"],
          templates: []
        };
      }());
      var child2 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 35,
                  "column": 8
                },
                "end": {
                  "line": 44,
                  "column": 8
                }
              },
              "moduleName": "frontend-cp/components/ko-linked-cases-context-menu/template.hbs"
            },
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("li");
              dom.setAttribute(el1,"class","ko-linked-cases-context-menu__filtered-list-item");
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2,"class","flag--small flag--auto");
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("div");
              dom.setAttribute(el3,"class","flag__body");
              var el4 = dom.createTextNode("\n                ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("strong");
              var el5 = dom.createComment("");
              dom.appendChild(el4, el5);
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode(" ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("br");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n                ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("span");
              dom.setAttribute(el4,"class","t-caption");
              var el5 = dom.createComment("");
              dom.appendChild(el4, el5);
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element1 = dom.childAt(fragment, [1]);
              var element2 = dom.childAt(element1, [1, 1]);
              var morphs = new Array(3);
              morphs[0] = dom.createElementMorph(element1);
              morphs[1] = dom.createMorphAt(dom.childAt(element2, [1]),0,0);
              morphs[2] = dom.createMorphAt(dom.childAt(element2, [5]),0,0);
              return morphs;
            },
            statements: [
              ["element","action",["caseSelected",["get","case",["loc",[null,[36,95],[36,99]]]]],[],["loc",[null,[36,71],[36,101]]]],
              ["content","case.title",["loc",[null,[39,24],[39,38]]]],
              ["content","case.type",["loc",[null,[40,40],[40,53]]]]
            ],
            locals: ["case"],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 31,
                "column": 2
              },
              "end": {
                "line": 48,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-linked-cases-context-menu/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("\n    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","ko-linked-cases-context-menu__filtered-list-container");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("ul");
            dom.setAttribute(el2,"class","ko-linked-cases-context-menu__filtered-list");
            dom.setAttribute(el2,"role","menu");
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);
            return morphs;
          },
          statements: [
            ["block","each",[["get","filteredCases",["loc",[null,[35,16],[35,29]]]]],[],0,null,["loc",[null,[35,8],[44,17]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      var child3 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 50,
                "column": 2
              },
              "end": {
                "line": 54,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-linked-cases-context-menu/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","box");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("button");
            dom.setAttribute(el2,"class","button button--primary");
            var el3 = dom.createTextNode("Create Link");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(1);
            morphs[0] = dom.createElementMorph(element0);
            return morphs;
          },
          statements: [
            ["element","action",["createLink",["get","case",["loc",[null,[52,67],[52,71]]]]],[],["loc",[null,[52,45],[52,73]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 56,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-linked-cases-context-menu/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","box");
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("p");
          var el3 = dom.createTextNode("This case");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("a");
          dom.setAttribute(el2,"class"," button button--action dropdown i--chevrons");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("ul");
          dom.setAttribute(el2,"role","menu");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","input i--search-small");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("ul");
          dom.setAttribute(el3,"class","list-inline u-overflow-scroll");
          dom.setAttribute(el3,"role","menu");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element6 = dom.childAt(fragment, [1]);
          var element7 = dom.childAt(element6, [3]);
          var element8 = dom.childAt(element6, [5]);
          var element9 = dom.childAt(element6, [7]);
          var morphs = new Array(8);
          morphs[0] = dom.createElementMorph(element7);
          morphs[1] = dom.createMorphAt(element7,1,1);
          morphs[2] = dom.createAttrMorph(element8, 'class');
          morphs[3] = dom.createMorphAt(element8,1,1);
          morphs[4] = dom.createMorphAt(dom.childAt(element9, [1]),1,1);
          morphs[5] = dom.createMorphAt(element9,3,3);
          morphs[6] = dom.createMorphAt(fragment,3,3,contextualElement);
          morphs[7] = dom.createMorphAt(fragment,5,5,contextualElement);
          return morphs;
        },
        statements: [
          ["element","action",["toggleDropdown"],[],["loc",[null,[7,59],[7,86]]]],
          ["content","selectedType",["loc",[null,[8,6],[8,22]]]],
          ["attribute","class",["concat",["dropdown-menu ",["subexpr","if",[["get","showOptions",["loc",[null,[10,34],[10,45]]]],"","u-hidden"],[],["loc",[null,[10,29],[10,61]]]]]]],
          ["block","each",[["get","types",["loc",[null,[11,14],[11,19]]]]],[],0,null,["loc",[null,[11,6],[14,15]]]],
          ["block","each",[["get","selectedCases",["loc",[null,[20,16],[20,29]]]]],[],1,null,["loc",[null,[20,8],[22,17]]]],
          ["inline","input",[],["class","input__text u-1/1 has-icon","type","text","placeholder","Type to find case","value",["subexpr","@mut",[["get","searchTerm",["loc",[null,[25,99],[25,109]]]]],[],[]],"enter","query","key-press","whenKeyIsPressed"],["loc",[null,[25,6],[25,154]]]],
          ["block","if",[["get","isShowingResults",["loc",[null,[31,8],[31,24]]]]],[],2,null,["loc",[null,[31,2],[48,9]]]],
          ["block","unless",[["get","isShowingResults",["loc",[null,[50,12],[50,28]]]]],[],3,null,["loc",[null,[50,2],[54,13]]]]
        ],
        locals: [],
        templates: [child0, child1, child2, child3]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 26
          }
        },
        "moduleName": "frontend-cp/components/ko-linked-cases-context-menu/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-context-modal-item",[],["index","0","title",["subexpr","format-message",[["subexpr","intl-get",["cases.linkedCasesInline"],[],["loc",[null,[1,57],[1,93]]]]],[],["loc",[null,[1,41],[1,94]]]],"contextModalId",["subexpr","@mut",[["get","contextModalId",["loc",[null,[1,110],[1,124]]]]],[],[]]],0,null,["loc",[null,[1,0],[56,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-linked-cases/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    contextModalService: Ember['default'].inject.service('context-modal'),

    tagName: 'li',
    classNames: ['info-bar-item', 'u-no-bottom-border', 'ko-linked-cases'],
    cases: null,

    actions: {

      linkedCases: function linkedCases(event) {
        this.get('contextModalService').open('linkedCases', event, { inline: true });
      },

      addCaseLink: function addCaseLink(caseLink) {
        this.sendAction('addCaseLink', caseLink);
      },

      openLinkPopover: function openLinkPopover() {
        // open popover
      },

      removeCase: function removeCase(caseObj) {
        this.sendAction('removeCaseLink', caseObj);
      }

    }

  });

});
define('frontend-cp/components/ko-linked-cases/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-linked-cases/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode(" ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("br");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          return morphs;
        },
        statements: [
          ["content","title",["loc",[null,[2,5],[2,14]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 13,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-linked-cases/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("ul");
          dom.setAttribute(el1,"class","ko-linked-cases__selected-list");
          dom.setAttribute(el1,"role","menu");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("li");
          dom.setAttribute(el2,"class","ko-linked-cases__selected-list-item");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("p");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("p");
          dom.setAttribute(el3,"class","t-caption");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode(" - Remove");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1, 1]);
          var element2 = dom.childAt(element1, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);
          morphs[1] = dom.createElementMorph(element2);
          morphs[2] = dom.createMorphAt(element2,0,0);
          return morphs;
        },
        statements: [
          ["content","case.title",["loc",[null,[9,11],[9,25]]]],
          ["element","action",["removeCase",["get","case",["loc",[null,[10,51],[10,55]]]]],[],["loc",[null,[10,29],[10,57]]]],
          ["content","case.type",["loc",[null,[10,58],[10,71]]]]
        ],
        locals: ["case"],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-linked-cases/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          dom.setAttribute(el1,"href","#");
          var el2 = dom.createTextNode("Create Link");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createElementMorph(element0);
          return morphs;
        },
        statements: [
          ["element","action",["openLinkPopover"],[],["loc",[null,[19,16],[19,44]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-linked-cases/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-linked-cases__selected-list-container");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n  ");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);
        morphs[2] = dom.createMorphAt(fragment,6,6,contextualElement);
        morphs[3] = dom.createMorphAt(fragment,10,10,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["block","if",[["get","title",["loc",[null,[1,6],[1,11]]]]],[],0,null,["loc",[null,[1,0],[3,7]]]],
        ["block","each",[["get","cases",["loc",[null,[6,10],[6,15]]]]],[],1,null,["loc",[null,[6,2],[13,11]]]],
        ["block","ko-toggle-context-modal",[],["toggleModal","linkedCases"],2,null,["loc",[null,[18,2],[20,30]]]],
        ["inline","ko-linked-cases-context-menu",[],["contextModalId","linkedCases","cases",["subexpr","@mut",[["get","cases",["loc",[null,[26,10],[26,15]]]]],[],[]],"types",["subexpr","@mut",[["get","types",["loc",[null,[27,10],[27,15]]]]],[],[]],"removeCaseLink","removeCaseLink","addCaseLink","addCaseLink","selectedType",["subexpr","@mut",[["get","selectedType",["loc",[null,[30,17],[30,29]]]]],[],[]]],["loc",[null,[24,2],[31,4]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/components/ko-loader/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'ul',
    classNames: ['ko-loader'],
    classNameBindings: ['large:ko-loader--large']
  });

});
define('frontend-cp/components/ko-loader/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 99
          }
        },
        "moduleName": "frontend-cp/components/ko-loader/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("li");
        dom.setAttribute(el1,"class","ko-loader__item");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("li");
        dom.setAttribute(el1,"class","ko-loader__item");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("li");
        dom.setAttribute(el1,"class","ko-loader__item");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-login-otp/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-login-otp/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-login-otp/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","otp-form login-form__wrapper js-otp-form");
        var el2 = dom.createTextNode("\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h6");
        dom.setAttribute(el2,"class","t-center");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),3,3);
        return morphs;
      },
      statements: [
        ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","otp",["loc",[null,[3,30],[3,33]]]]],[],[]],"name","otp-code","class","login__input--alone u-intimate","placeholder","Verification code","disabled",["subexpr","@mut",[["get","isLoading",["loc",[null,[3,130],[3,139]]]]],[],[]]],["loc",[null,[3,4],[3,141]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-login-password/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-login-password/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-login-password/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","login-form__wrapper");
        var el2 = dom.createTextNode("\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(element0,1,1);
        morphs[1] = dom.createMorphAt(element0,3,3);
        return morphs;
      },
      statements: [
        ["inline","input",[],["type","email","value",["subexpr","@mut",[["get","model.email",["loc",[null,[2,31],[2,42]]]]],[],[]],"name","email","autofocus","autofocus","class","login__input","placeholder",["subexpr","format-message",[["subexpr","intl-get",["login.email"],[],["loc",[null,[2,127],[2,151]]]]],[],["loc",[null,[2,111],[2,152]]]],"disabled",["subexpr","@mut",[["get","isLoading",["loc",[null,[2,162],[2,171]]]]],[],[]]],["loc",[null,[2,4],[2,173]]]],
        ["inline","input",[],["type","password","value",["subexpr","@mut",[["get","model.password",["loc",[null,[3,34],[3,48]]]]],[],[]],"name","password","class","login__input","placeholder",["subexpr","format-message",[["subexpr","intl-get",["login.password"],[],["loc",[null,[3,114],[3,141]]]]],[],["loc",[null,[3,98],[3,142]]]],"disabled",["subexpr","@mut",[["get","isLoading",["loc",[null,[3,152],[3,161]]]]],[],[]]],["loc",[null,[3,4],[3,163]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-login-reset/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-login-reset/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-login-reset/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","reset-password-form login-form__wrapper");
        var el2 = dom.createTextNode("\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(element0,1,1);
        morphs[1] = dom.createMorphAt(element0,3,3);
        return morphs;
      },
      statements: [
        ["inline","input",[],["type","password","value",["subexpr","@mut",[["get","newPassword1",["loc",[null,[2,34],[2,46]]]]],[],[]],"name","reset-password","class","login__input","placeholder",["subexpr","format-message",[["subexpr","intl-get",["login.newpassword"],[],["loc",[null,[2,118],[2,148]]]]],[],["loc",[null,[2,102],[2,149]]]],"disabled",["subexpr","@mut",[["get","isLoading",["loc",[null,[2,159],[2,168]]]]],[],[]]],["loc",[null,[2,4],[2,170]]]],
        ["inline","input",[],["type","password","value",["subexpr","@mut",[["get","newPassword2",["loc",[null,[3,34],[3,46]]]]],[],[]],"name","reset-password-2","class","login__input u-intimate","placeholder",["subexpr","format-message",[["subexpr","intl-get",["login.repeatpassword"],[],["loc",[null,[3,131],[3,164]]]]],[],["loc",[null,[3,115],[3,165]]]],"disabled",["subexpr","@mut",[["get","isLoading",["loc",[null,[3,175],[3,184]]]]],[],[]]],["loc",[null,[3,4],[3,186]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-notification-badge/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-notification-badge/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-notification-badge/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","i-bell");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-option-list-drill-down/component', ['exports', 'ember', 'frontend-cp/components/mixins/suggestions', 'frontend-cp/components/mixins/drop-down-keyboard-nav', 'frontend-cp/lib/keycodes'], function (exports, Ember, Suggestions, DropDownKeyboardNav, KeyCodes) {

  'use strict';

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

  exports['default'] = Ember['default'].Component.extend(Suggestions['default'], DropDownKeyboardNav['default'], {
    //params
    title: '',
    options: new Ember['default'].A([]),
    value: '',
    onValueChange: null,
    placeholder: '',

    classNames: ['ko-option-list-drill-down'],
    classNameBindings: ['isSuggestionDropdown:active', 'isHierarchyDropdown:active'],
    attributeBindings: ['tabindex', 'role'],
    tabindex: 0,
    tagName: 'div',
    searchTerm: '',
    hierarchyLevels: Ember['default'].ArrayProxy.create(),
    suggestions: '',
    currentPath: new Ember['default'].A([]),
    isMouseAccess: false,
    keyboardPosition: 0,
    isSuggestionDropdown: false,
    isHierarchyDropdown: false,
    showValue: true,
    showExpandedByDefault: false,

    showHierarchyDropdown: function showHierarchyDropdown() {
      this.set('isSuggestionDropdown', false);
      this.set('isHierarchyDropdown', true);
    },

    showSuggestionDropdown: function showSuggestionDropdown() {
      this.set('isHierarchyDropdown', false);
      this.set('isSuggestionDropdown', true);
    },

    hideDropdowns: function hideDropdowns() {
      this.set('isHierarchyDropdown', false);
      this.set('isSuggestionDropdown', false);
    },

    dataForThisLevel: function dataForThisLevel(options, item) {
      var currentPath = this.get('currentPath');
      currentPath.pushObject(item);
      var currentPathString = this.convertBranchToOptionsFormat(currentPath[currentPath.length - 1].text);
      return options.filter(function (i) {
        return i.value.includes(currentPathString);
      });
    },

    convertBranchToOptionsFormat: function convertBranchToOptionsFormat(branch) {
      return branch.split(' / ').join(',');
    },

    getOptionUpToLevel: function getOptionUpToLevel(option, level) {
      return option.split(',').slice(0, level).join(' / ');
    },

    checkIfBranchContinues: function checkIfBranchContinues(options, branch, level) {
      var reformatedBranch = this.convertBranchToOptionsFormat(branch);
      var matchesForThisBranch = options.filter(function (i) {
        return i.value.includes(reformatedBranch);
      });
      var nextLevel = [];

      matchesForThisBranch.forEach(function (item) {
        var nextLevelItem = item.value.split(',')[level];
        if (nextLevelItem) {
          nextLevel.push(nextLevelItem);
        }
      });

      if (nextLevel.length) {
        return true;
      } else {
        return false;
      }
    },

    createItemObjects: function createItemObjects(options, branch, level) {
      var _this = this;

      var itemObjects = new Ember['default'].A();

      branch.forEach(function (item) {
        var newItemObject = Ember['default'].Object.create({
          isBranchItem: _this.checkIfBranchContinues(options, item, level),
          text: item
        });

        itemObjects.pushObject(newItemObject);
      });

      return itemObjects;
    },

    extractRootLevelHierarchyItems: function extractRootLevelHierarchyItems() {
      var options = this.get('options');
      var firstLevel = options.map(function (i) {
        return i.value.split(',')[0];
      });
      var rootLevelItems = [].concat(_toConsumableArray(new Set(firstLevel)));
      return this.createItemObjects(options, rootLevelItems, 1);
    },

    itemSelected: function itemSelected(id) {
      this.resetState();
      this.sendAction('onValueChange', id);
    },

    addNextLevel: function addNextLevel(options, level, items) {
      var hierarchyLevels = this.get('hierarchyLevels');
      var itemObjects = this.createItemObjects(options, items, level);
      var newLevel = Ember['default'].Object.create({
        isActive: true,
        isTopLevel: false,
        levelNumber: level,
        items: itemObjects
      });
      var previousLevel = hierarchyLevels.objectAt(hierarchyLevels.length - 1);
      previousLevel.set('isActive', false);
      hierarchyLevels.pushObject(newLevel);
      this.set('skipNextFocusOut', true);
    },

    updateSuggestions: function updateSuggestions() {
      var searchTerm = this.get('searchTerm');
      var options = this.get('options');
      this.set('suggestions', this.matches(searchTerm, options.map(function (i) {
        return i.value;
      })));
    },

    resetState: function resetState() {
      var showExpandedByDefault = this.get('showExpandedByDefault');
      var options = this.get('options');
      var hierarchyLevels = new Ember['default'].A([]);
      var rootLevelItems = this.extractRootLevelHierarchyItems();
      var rootLevel = Ember['default'].Object.create({
        isActive: true,
        isTopLevel: true,
        levelNumber: 0,
        items: rootLevelItems
      });
      hierarchyLevels.pushObject(rootLevel);
      this.set('hierarchyLevels', hierarchyLevels);

      this.set('currentPath', new Ember['default'].A([]));
      this.set('searchTerm', '');
      this.set('suggestions', options.map(function (i) {
        return i.value;
      }));
      this.resetKeyboardPosition();

      if (showExpandedByDefault) {
        this.set('showValue', false);
        this.showHierarchyDropdown(true);
      } else {
        this.set('showValue', true);
        this.hideDropdowns();
      }
    },

    resetKeyboardPosition: function resetKeyboardPosition() {
      this.set('keyboardPosition', 0);
    },

    didUpdateOptions: (function () {
      this.resetState();
    }).observes('options.@each'),

    didInsertElement: function didInsertElement() {
      this.resetState();
    },

    click: function click() {
      this.$('input').focus();
      this.set('isMouseAccess', true);
    },

    focusIn: function focusIn() {
      this.set('showValue', false);
      var mouseAccess = this.get('isMouseAccess');
      var searchTerm = this.get('searchTerm');
      if (searchTerm.length === 0) {
        this.showHierarchyDropdown();
      }
      if (!mouseAccess) {
        if (searchTerm.length > 0) {
          this.showSuggestionDropdown();
        } else {
          this.showHierarchyDropdown();
        }
      }
    },

    focusOut: function focusOut() {
      var skipNextFocusOut = this.get('skipNextFocusOut');
      var showExpandedByDefault = this.get('showExpandedByDefault');

      if (showExpandedByDefault) {
        return false;
      }

      if (skipNextFocusOut) {
        this.set('skipNextFocusOut', false);
        this.$('input').focus();
        return false;
      } else {
        this.set('showValue', true);
        this.set('isMouseAccess', false);
        this.resetKeyboardPosition();
        this.hideDropdowns();
      }
    },

    keyUp: function keyUp(e) {
      var searchTerm = this.get('searchTerm');

      if (e.keyCode !== KeyCodes.up && e.keyCode !== KeyCodes.down && e.keyCode !== KeyCodes.right && e.keyCode !== KeyCodes.enter && e.keyCode !== KeyCodes.tab) {
        this.set('showValue', false);
        this.updateSuggestions();
        if (e.keyCode === KeyCodes.backspace && searchTerm <= 1) {
          this.showHierarchyDropdown();
        } else {
          this.showSuggestionDropdown();
        }
      }
    },

    keyDown: function keyDown(e) {
      var suggestionsListSelector = 'ul:first';
      var hierarchyListSelector = 'ul:last';
      var currentHierarchyList = this.$('ul:last li');
      var isSuggestionDropdown = this.get('isSuggestionDropdown');
      var options = this.get('options');

      switch (e.keyCode) {
        case KeyCodes.up:
          {
            if (isSuggestionDropdown) {
              this.moveSelectedItem(options.length, suggestionsListSelector, 'up', 'keyboardPosition');
              return false;
            } else {
              this.moveSelectedItem(currentHierarchyList.length, hierarchyListSelector, 'up', 'keyboardPosition');
              return false;
            }
            break;
          }
        case KeyCodes.down:
          {
            if (isSuggestionDropdown) {
              this.moveSelectedItem(options.length, suggestionsListSelector, 'down', 'keyboardPosition');
              return false;
            } else {
              this.moveSelectedItem(currentHierarchyList.length, hierarchyListSelector, 'down', 'keyboardPosition');
              return false;
            }
            break;
          }
        case KeyCodes.tab:
          {
            break;
          }
        case KeyCodes.right:
        case KeyCodes.enter:
          {
            var keyboardPosition = this.get('keyboardPosition');

            if (isSuggestionDropdown) {
              this.$('ul:first li:nth-of-type(' + keyboardPosition + ')').click();
              this.hideDropdowns();
            } else {
              this.$('ul:last li:nth-of-type(' + keyboardPosition + ')').click();
            }
            this.resetKeyboardPosition();
            return false;
          }
        default:
          {
            this.$('input').focus();
          }
      }
    },

    actions: {
      searchTermChanged: function searchTermChanged(searchTerm) {
        this.set('searchTerm', searchTerm);
        this.resetKeyboardPosition();
      },

      suggestionSelected: function suggestionSelected(suggestion) {
        var selectedObject = this.get('options').find(function (i) {
          return i.value === suggestion;
        });
        var showExpandedByDefault = this.get('showExpandedByDefault');

        this.set('isSuggestionDropdown', false);
        this.resetState();

        if (!showExpandedByDefault) {
          this.set('showValue', true);
        }

        this.sendAction('onValueChange', selectedObject.id);
      },

      upOneHierarchyLevel: function upOneHierarchyLevel() {
        var currentPath = this.get('currentPath');
        var hierarchyLevels = this.get('hierarchyLevels');

        currentPath.popObject();
        this.set('skipNextFocusOut', true);
        hierarchyLevels.popObject();

        var previousLevel = hierarchyLevels.objectAt(hierarchyLevels.length - 1);
        previousLevel.set('isActive', true);
      },

      hierarchyBranchSelected: function hierarchyBranchSelected(item) {
        var _this2 = this;

        var options = this.get('options');
        var dataForThisLevel = this.dataForThisLevel(options, item);
        var currentPath = this.get('currentPath');
        var nextLevel = currentPath.length + 1;

        var newListItems = dataForThisLevel.map(function (i) {
          return _this2.getOptionUpToLevel(i.value, nextLevel);
        });

        this.addNextLevel(options, nextLevel, newListItems);
      },

      hierarchyItemSelected: function hierarchyItemSelected(item) {
        var options = this.get('options');
        var dataForThisLevel = this.dataForThisLevel(options, item);
        this.itemSelected(dataForThisLevel[0].id);
      }
    }
  });

});
define('frontend-cp/components/ko-option-list-drill-down/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-option-list-drill-down/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1,"class","info-bar-item__header");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          morphs[1] = dom.createAttrMorph(element5, 'class');
          morphs[2] = dom.createMorphAt(element5,0,0);
          return morphs;
        },
        statements: [
          ["content","title",["loc",[null,[2,38],[2,47]]]],
          ["attribute","class",["concat",[["subexpr","unless",[["get","showValue",["loc",[null,[3,23],[3,32]]]],"u-hidden"],[],["loc",[null,[3,14],[3,45]]]]]]],
          ["content","value",["loc",[null,[3,47],[3,56]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 2
            },
            "end": {
              "line": 12,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-option-list-drill-down/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          dom.setAttribute(el1,"class","dropdown-menu__item");
          dom.setAttribute(el1,"tabindex","-1");
          dom.setAttribute(el1,"role","menuitem");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element4);
          morphs[1] = dom.createMorphAt(element4,0,0);
          return morphs;
        },
        statements: [
          ["element","action",["suggestionSelected",["get","suggestion",["loc",[null,[11,64],[11,74]]]]],[],["loc",[null,[11,34],[11,76]]]],
          ["inline","ko-embolden",[["subexpr","ko-slasherizer",[["get","suggestion",["loc",[null,[11,135],[11,145]]]]],[],["loc",[null,[11,119],[11,146]]]],["get","searchTerm",["loc",[null,[11,147],[11,157]]]]],[],["loc",[null,[11,105],[11,159]]]]
        ],
        locals: ["suggestion"],
        templates: []
      };
    }());
    var child2 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 2
              },
              "end": {
                "line": 21,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-option-list-drill-down/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            dom.setAttribute(el1,"class","box dropdown-menu__item");
            dom.setAttribute(el1,"tabindex","-1");
            dom.setAttribute(el1,"role","menuitem");
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2,"class","i-chevron-large-left i-color-grey--dark");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    Back\n  ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(1);
            morphs[0] = dom.createElementMorph(element2);
            return morphs;
          },
          statements: [
            ["element","action",["upOneHierarchyLevel"],[],["loc",[null,[17,38],[17,70]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      var child1 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 23,
                  "column": 4
                },
                "end": {
                  "line": 28,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-option-list-drill-down/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("li");
              dom.setAttribute(el1,"class","dropdown-menu__item dropdown-menu__item--tight");
              dom.setAttribute(el1,"tabindex","-1");
              dom.setAttribute(el1,"role","menuitem");
              var el2 = dom.createTextNode("\n      ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n      ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.setAttribute(el2,"class","i-chevron-large-right i-color-grey--dark");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n    ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element1 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createElementMorph(element1);
              morphs[1] = dom.createMorphAt(element1,1,1);
              return morphs;
            },
            statements: [
              ["element","action",["hierarchyBranchSelected",["get","item",["loc",[null,[24,98],[24,102]]]]],[],["loc",[null,[24,63],[24,104]]]],
              ["content","item.text",["loc",[null,[25,6],[25,19]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        var child1 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 28,
                  "column": 4
                },
                "end": {
                  "line": 32,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-option-list-drill-down/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("li");
              dom.setAttribute(el1,"class","dropdown-menu__item dropdown-menu__item--tight");
              dom.setAttribute(el1,"tabindex","-1");
              dom.setAttribute(el1,"role","menuitem");
              var el2 = dom.createTextNode("\n      ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n    ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createElementMorph(element0);
              morphs[1] = dom.createMorphAt(element0,1,1);
              return morphs;
            },
            statements: [
              ["element","action",["hierarchyItemSelected",["get","item",["loc",[null,[29,96],[29,100]]]]],[],["loc",[null,[29,63],[29,102]]]],
              ["content","item.text",["loc",[null,[30,6],[30,19]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 22,
                "column": 2
              },
              "end": {
                "line": 33,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-option-list-drill-down/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","if",[["get","item.isBranchItem",["loc",[null,[23,10],[23,27]]]]],[],0,1,["loc",[null,[23,4],[32,11]]]]
          ],
          locals: ["item"],
          templates: [child0, child1]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-option-list-drill-down/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("ul");
          dom.setAttribute(el1,"role","menu");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [0]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          morphs[1] = dom.createMorphAt(element3,1,1);
          morphs[2] = dom.createMorphAt(element3,2,2);
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",["dropdown-menu dropdown-menu--popover ",["subexpr","unless",[["get","isHierarchyDropdown",["loc",[null,[15,57],[15,76]]]],"u-hidden"],[],["loc",[null,[15,48],[15,89]]]]," ",["subexpr","unless",[["get","level.isActive",["loc",[null,[15,99],[15,113]]]],"u-hidden"],[],["loc",[null,[15,90],[15,126]]]]," list-bare"]]],
          ["block","unless",[["get","level.isTopLevel",["loc",[null,[16,12],[16,28]]]]],[],0,null,["loc",[null,[16,2],[21,13]]]],
          ["block","each",[["get","level.items",["loc",[null,[22,10],[22,21]]]]],[],1,null,["loc",[null,[22,2],[33,11]]]]
        ],
        locals: ["level"],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-option-list-drill-down/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1,"role","menu");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element6 = dom.childAt(fragment, [3]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
        morphs[2] = dom.createAttrMorph(element6, 'class');
        morphs[3] = dom.createMorphAt(element6,1,1);
        morphs[4] = dom.createMorphAt(fragment,5,5,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","unless",[["get","showExpandedByDefault",["loc",[null,[1,10],[1,31]]]]],[],0,null,["loc",[null,[1,0],[4,11]]]],
        ["inline","ko-search",[],["placeholder",["subexpr","@mut",[["get","placeholder",["loc",[null,[6,14],[6,25]]]]],[],[]],"hidden",["subexpr","@mut",[["get","showValue",["loc",[null,[7,9],[7,18]]]]],[],[]],"onSearchTermChange","searchTermChanged"],["loc",[null,[5,0],[8,42]]]],
        ["attribute","class",["concat",["dropdown-menu dropdown-menu--popover ",["subexpr","unless",[["get","isSuggestionDropdown",["loc",[null,[9,57],[9,77]]]],"u-hidden"],[],["loc",[null,[9,48],[9,90]]]]," list-bare"]]],
        ["block","each",[["get","suggestions",["loc",[null,[10,10],[10,21]]]]],[],1,null,["loc",[null,[10,2],[12,11]]]],
        ["block","each",[["get","hierarchyLevels",["loc",[null,[14,8],[14,23]]]]],[],2,null,["loc",[null,[14,0],[35,9]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/components/ko-organisation-content/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-organisation-content/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-organisation-content/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createTextNode("Organisation component\n\nOrg name: ");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
        return morphs;
      },
      statements: [
        ["content","model.name",["loc",[null,[3,10],[3,24]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-page-container/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-page-container/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-page-container/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-pagination/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    currentPage: 1,
    loadingPage: null,
    pageCount: 1,

    previousPage: (function () {
      return this.get('currentPage') - 1;
    }).property('currentPage'),

    nextPage: (function () {
      return this.get('currentPage') + 1;
    }).property('currentPage'),

    hasPreviousPage: (function () {
      return this.get('currentPage') > 1;
    }).property('currentPage'),

    hasNextPage: (function () {
      return this.get('currentPage') < this.get('pageCount');
    }).property('currentPage', 'pageCount')
  });

});
define('frontend-cp/components/ko-pagination/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 6
              },
              "end": {
                "line": 6,
                "column": 33
              }
            },
            "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["content","ko-loader",["loc",[null,[6,20],[6,33]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 4
            },
            "end": {
              "line": 7,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["block","ko-center",[],[],0,null,["loc",[null,[6,6],[6,47]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 4
            },
            "end": {
              "line": 9,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","yield",[1],[],["loc",[null,[8,6],[8,17]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 13,
                "column": 6
              },
              "end": {
                "line": 13,
                "column": 33
              }
            },
            "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["content","ko-loader",["loc",[null,[13,20],[13,33]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 4
            },
            "end": {
              "line": 14,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["block","ko-center",[],[],0,null,["loc",[null,[13,6],[13,47]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 4
            },
            "end": {
              "line": 16,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","yield",[["get","previousPage",["loc",[null,[15,14],[15,26]]]]],[],["loc",[null,[15,6],[15,28]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child4 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 20,
                "column": 6
              },
              "end": {
                "line": 20,
                "column": 33
              }
            },
            "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["content","ko-loader",["loc",[null,[20,20],[20,33]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["block","ko-center",[],[],0,null,["loc",[null,[20,6],[20,47]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child5 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","yield",[["get","nextPage",["loc",[null,[22,14],[22,22]]]]],[],["loc",[null,[22,6],[22,24]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child6 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 6
              },
              "end": {
                "line": 27,
                "column": 33
              }
            },
            "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["content","ko-loader",["loc",[null,[27,20],[27,33]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 28,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["block","ko-center",[],[],0,null,["loc",[null,[27,6],[27,47]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child7 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","yield",[["get","pageCount",["loc",[null,[29,14],[29,23]]]]],[],["loc",[null,[29,6],[29,25]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-pagination/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-pagination__container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2,"class","ko-pagination__pageNumber");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2,"class","ko-pagination__pageCount");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [5]);
        var element2 = dom.childAt(element0, [7]);
        var element3 = dom.childAt(element0, [9]);
        var element4 = dom.childAt(element0, [11]);
        var morphs = new Array(10);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]),0,0);
        morphs[2] = dom.createAttrMorph(element1, 'class');
        morphs[3] = dom.createMorphAt(element1,1,1);
        morphs[4] = dom.createAttrMorph(element2, 'class');
        morphs[5] = dom.createMorphAt(element2,1,1);
        morphs[6] = dom.createAttrMorph(element3, 'class');
        morphs[7] = dom.createMorphAt(element3,1,1);
        morphs[8] = dom.createAttrMorph(element4, 'class');
        morphs[9] = dom.createMorphAt(element4,1,1);
        return morphs;
      },
      statements: [
        ["content","currentPage",["loc",[null,[2,42],[2,57]]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.paginatorof"],[],["loc",[null,[3,58],[3,90]]]]],["number",["subexpr","@mut",[["get","pageCount",["loc",[null,[3,98],[3,107]]]]],[],[]]],["loc",[null,[3,41],[3,109]]]],
        ["attribute","class",["concat",["ko-pagination__first i-chevron-double-up i-center ",["subexpr","if",[["get","hasPreviousPage",["loc",[null,[4,69],[4,84]]]],"ko-pagination__first--available",""],[],["loc",[null,[4,64],[4,123]]]]]]],
        ["block","if",[["subexpr","eq",[["get","loadingPage",["loc",[null,[5,14],[5,25]]]],1],[],["loc",[null,[5,10],[5,28]]]]],[],0,1,["loc",[null,[5,4],[9,11]]]],
        ["attribute","class",["concat",["ko-pagination__previous i-chevron-large-up i-center i-size-base ",["subexpr","if",[["get","hasPreviousPage",["loc",[null,[11,83],[11,98]]]],"ko-pagination__previous--available",""],[],["loc",[null,[11,78],[11,140]]]]]]],
        ["block","if",[["subexpr","eq",[["get","loadingPage",["loc",[null,[12,14],[12,25]]]],["get","previousPage",["loc",[null,[12,26],[12,38]]]]],[],["loc",[null,[12,10],[12,39]]]]],[],2,3,["loc",[null,[12,4],[16,11]]]],
        ["attribute","class",["concat",["ko-pagination__next i-chevron-large-down i-center i-size-base ",["subexpr","if",[["get","hasNextPage",["loc",[null,[18,81],[18,92]]]],"ko-pagination__next--available",""],[],["loc",[null,[18,76],[18,130]]]]]]],
        ["block","if",[["subexpr","eq",[["get","loadingPage",["loc",[null,[19,14],[19,25]]]],["get","nextPage",["loc",[null,[19,26],[19,34]]]]],[],["loc",[null,[19,10],[19,35]]]]],[],4,5,["loc",[null,[19,4],[23,11]]]],
        ["attribute","class",["concat",["ko-pagination__last i-chevron-double-down i-center ",["subexpr","if",[["get","hasNextPage",["loc",[null,[25,70],[25,81]]]],"ko-pagination__last--available",""],[],["loc",[null,[25,65],[25,119]]]]]]],
        ["block","if",[["subexpr","eq",[["get","loadingPage",["loc",[null,[26,14],[26,25]]]],["get","pageCount",["loc",[null,[26,26],[26,35]]]]],[],["loc",[null,[26,10],[26,36]]]]],[],6,7,["loc",[null,[26,4],[30,11]]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7]
    };
  }()));

});
define('frontend-cp/components/ko-participants-add/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    click: function click(event) {
      this.sendAction('addParticipant', event);
    }
  });

});
define('frontend-cp/components/ko-participants-add/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-participants-add/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","plus");
        var el2 = dom.createTextNode("+");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-participants/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    classNames: ['figure-inline'],

    actions: {
      addParticipant: function addParticipant(event) {
        this.sendAction('addParticipant', event);
      }
    }
  });

});
define('frontend-cp/components/ko-participants/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-participants/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("img");
          dom.setAttribute(el1,"class","figure-inline__image");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'src');
          morphs[1] = dom.createAttrMorph(element0, 'alt');
          return morphs;
        },
        statements: [
          ["attribute","src",["concat",[["get","participant.image",["loc",[null,[2,45],[2,62]]]]]]],
          ["attribute","alt",["concat",[["get","participant.alt",["loc",[null,[2,73],[2,88]]]]]]]
        ],
        locals: ["participant"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-participants/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["block","each",[["get","participants",["loc",[null,[1,8],[1,20]]]]],[],0,null,["loc",[null,[1,0],[3,9]]]],
        ["inline","ko-participants-add",[],["addParticipant","addParticipant"],["loc",[null,[4,0],[4,55]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-predicate-builder/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    definitions: [],
    onCollectionAddition: null,
    onCollectionRemoval: null,
    onAdditionOfRuleToCollection: null,
    onRuleDeletion: null,
    canDeleteCollection: false,

    actions: {
      addCollection: function addCollection() {
        this.sendAction('onCollectionAddition');
      },
      removeCollection: function removeCollection(collection) {
        this.sendAction('onCollectionRemoval', collection);
      },
      addRuleToCollectionAfter: function addRuleToCollectionAfter(collection, rule) {
        this.sendAction('onAdditionOfRuleToCollection', collection, rule);
      },
      removeRuleFromCollection: function removeRuleFromCollection(collection, rule) {
        this.sendAction('onRuleDeletion', collection, rule);
      }
    }
  });

});
define('frontend-cp/components/ko-predicate-builder/rule/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    definitions: [],
    canDeleteRule: false,
    rule: null,

    classNames: ['predicate-builder_rule'],

    intlService: Ember['default'].inject.service('intl'),

    selectedDefinition: null,
    selectedProperty: null, // if a property is an object, store it here
    availableProperties: null, // all possible properties of the selected definition
    filteredProperties: null, // possible properties filtered by user search

    isChoiceField: (function () {
      return !!this.get('availableProperties.length');
    }).property('availableProperties.length'),

    possibleOperators: (function () {
      return this.get('selectedDefinition.operator');
    }).property('selectedDefinition'),

    /*
     * Fired whenever we change selectedDefinition
     */
    ensureSelectedOperatorIsPossible: function ensureSelectedOperatorIsPossible() {
      var possibleOperators = this.get('possibleOperators');
      var selectedOperator = this.get('rule.operator');

      if (possibleOperators.indexOf(selectedOperator) === -1) {
        this.set('rule.operator', possibleOperators.get('firstObject'));
      }
    },

    setSelectedDefaults: (function () {
      this.initializeSelectedDefinition();
      this.initializeSelectedOperator();

      this.set('availableProperties', this.get('selectedDefinition.value'));
      this.set('filteredProperties', this.get('selectedDefinition.value'));
      this.initializeSelectedProperty();
    }).on('init'),

    initializeSelectedDefinition: function initializeSelectedDefinition() {
      var _this = this;

      var field = this.get('rule.field');

      this.get('definitions').forEach(function (definition) {
        if (definition.get('id') === field) {
          _this.set('selectedDefinition', definition);
        }
      });

      if (!this.get('selectedDefinition')) {
        this.set('selectedDefinition', this.get('definitions.firstObject'));
      }
    },

    initializeSelectedOperator: function initializeSelectedOperator() {
      if (!this.get('rule.operator')) {
        this.send('selectOperator', this.get('possibleOperators.firstObject'));
      }
    },

    initializeSelectedProperty: function initializeSelectedProperty() {
      var _this2 = this;

      if (!this.get('isChoiceField')) {
        // this field is not a choice so two-way binding (not DDAU)
        return;
      }

      var ruleValue = this.get('rule.values');
      this.get('selectedDefinition.value').forEach(function (choice) {
        if (String(choice.get('value')) === ruleValue) {
          _this2.set('selectedProperty', choice);
        }
      });
    },

    selectedDefinitionLabel: (function () {
      var selectedDefinition = this.get('selectedDefinition');
      if (selectedDefinition) {
        var translation = this.get('intlService').findTranslation('admin.predicate_builder.' + selectedDefinition.id);
        return translation.content;
      }
    }).property('selectedDefinition'),

    propertyValueName: (function () {
      return this.get('selectedProperty.string');
    }).property('selectedProperty'),

    actions: {
      selectDefinition: function selectDefinition(definition) {
        this.set('selectedDefinition', definition);
        this.set('rule.field', definition.get('id'));
        this.ensureSelectedOperatorIsPossible();
        this.set('availableProperties', definition.get('value'));
        this.set('filteredProperties', definition.get('value'));
        this.set('searchTerm', '');

        if (this.get('isChoiceField')) {
          var newProperty = this.get('selectedDefinition.value.firstObject');
          this.set('selectedProperty', newProperty);
          this.set('rule.values', newProperty.get('value'));
        } else {
          //we don't want to display any ids to the user;
          this.set('rule.values', '');
        }
      },
      selectOperator: function selectOperator(operator) {
        this.set('rule.operator', operator);
      },
      selectProperty: function selectProperty(property) {
        this.set('selectedProperty', property);
        this.set('rule.values', property.get('value'));
      },

      propertySearchTermUpdated: function propertySearchTermUpdated(searchTerm) {
        var possibleProperties = this.get('availableProperties');
        var matchingResults = possibleProperties.filter(function (property) {
          return property.get('string').indexOf(searchTerm) !== -1;
        });
        this.set('filteredProperties', matchingResults);
      },

      appendRule: function appendRule() {
        this.attrs.appendRule(this.get('rule'));
      },
      deleteRule: function deleteRule() {
        this.attrs.deleteRule(this.get('rule'));
      }
    }
  });

});
define('frontend-cp/components/ko-predicate-builder/rule/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 8,
                  "column": 4
                },
                "end": {
                  "line": 10,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["inline","format-message",[["subexpr","intl-get",[["subexpr","ko-concat",["admin.predicate_builder.",["get","possibleDefinition.id",["loc",[null,[9,71],[9,92]]]]],[],["loc",[null,[9,33],[9,93]]]]],[],["loc",[null,[9,23],[9,94]]]]],[],["loc",[null,[9,6],[9,96]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 2
              },
              "end": {
                "line": 11,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","ko-dropdown/list/item",[],["action","selectDefinition","content",["subexpr","@mut",[["get","possibleDefinition",["loc",[null,[8,63],[8,81]]]]],[],[]]],0,null,["loc",[null,[8,4],[10,30]]]]
          ],
          locals: ["possibleDefinition"],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","each",[["get","definitions",["loc",[null,[7,10],[7,21]]]]],[],0,null,["loc",[null,[7,2],[11,11]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 18,
                  "column": 4
                },
                "end": {
                  "line": 20,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["inline","format-message",[["subexpr","intl-get",[["subexpr","ko-concat",["admin.predicate_builder.operators.",["get","possibleOperator",["loc",[null,[19,81],[19,97]]]]],[],["loc",[null,[19,33],[19,98]]]]],[],["loc",[null,[19,23],[19,99]]]]],[],["loc",[null,[19,6],[19,101]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 2
              },
              "end": {
                "line": 21,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","ko-dropdown/list/item",[],["action","selectOperator","content",["subexpr","@mut",[["get","possibleOperator",["loc",[null,[18,61],[18,77]]]]],[],[]]],0,null,["loc",[null,[18,4],[20,30]]]]
          ],
          locals: ["possibleOperator"],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 0
            },
            "end": {
              "line": 22,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","each",[["get","possibleOperators",["loc",[null,[17,10],[17,27]]]]],[],0,null,["loc",[null,[17,2],[21,11]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child2 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 29,
                    "column": 6
                  },
                  "end": {
                    "line": 31,
                    "column": 6
                  }
                },
                "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("        ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
                return morphs;
              },
              statements: [
                ["content","possibleProperties.string",["loc",[null,[30,8],[30,37]]]]
              ],
              locals: [],
              templates: []
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 28,
                  "column": 4
                },
                "end": {
                  "line": 32,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
            },
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [
              ["block","ko-dropdown/list/item",[],["action","selectProperty","content",["subexpr","@mut",[["get","possibleProperties",["loc",[null,[29,63],[29,81]]]]],[],[]]],0,null,["loc",[null,[29,6],[31,32]]]]
            ],
            locals: ["possibleProperties"],
            templates: [child0]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 2
              },
              "end": {
                "line": 33,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","each",[["get","filteredProperties",["loc",[null,[28,12],[28,30]]]]],[],0,null,["loc",[null,[28,4],[32,13]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-suggest",[],["selectedItem",["subexpr","@mut",[["get","propertyValueName",["loc",[null,[27,29],[27,46]]]]],[],[]],"onSearchTermUpdated","propertySearchTermUpdated","class","predicate-builder_rule__input"],0,null,["loc",[null,[27,2],[33,17]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 34,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","input",[],["tpe","text","value",["subexpr","@mut",[["get","rule.values",["loc",[null,[35,27],[35,38]]]]],[],[]],"class","predicate-builder_rule__input predicate-builder_rule__property-input"],["loc",[null,[35,2],[35,117]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child4 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          var el2 = dom.createTextNode("REMOVE");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createElementMorph(element0);
          return morphs;
        },
        statements: [
          ["element","action",["deleteRule",["get","rule",["loc",[null,[43,34],[43,38]]]]],[],["loc",[null,[43,12],[43,40]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-predicate-builder/rule/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","u-inline-block predicate-builder_rule__logical_operator");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","u-inline-block");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","u-inline-block");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","u-inline-block");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","u-inline-block predicate-builder_rule__actions");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        var el3 = dom.createTextNode("ADD");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [8]);
        var element2 = dom.childAt(element1, [2]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);
        morphs[3] = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);
        morphs[4] = dom.createElementMorph(element2);
        morphs[5] = dom.createMorphAt(element1,4,4);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["generic.or"],[],["loc",[null,[2,19],[2,42]]]]],[],["loc",[null,[2,2],[2,44]]]],
        ["block","ko-dropdown/select",[],["label",["subexpr","@mut",[["get","selectedDefinitionLabel",["loc",[null,[6,28],[6,51]]]]],[],[]],"hideOnClick",true,"class","predicate-builder_rule__input"],0,null,["loc",[null,[6,0],[12,23]]]],
        ["block","ko-dropdown/select",[],["label",["subexpr","format-message",[["subexpr","intl-get",[["subexpr","ko-concat",["admin.predicate_builder.operators.",["get","rule.operator",["loc",[null,[16,102],[16,115]]]]],[],["loc",[null,[16,54],[16,116]]]]],[],["loc",[null,[16,44],[16,117]]]]],[],["loc",[null,[16,28],[16,118]]]],"hideOnClick",true,"class","predicate-builder_rule__input"],1,null,["loc",[null,[16,0],[22,23]]]],
        ["block","if",[["get","availableProperties.length",["loc",[null,[26,6],[26,32]]]]],[],2,3,["loc",[null,[26,0],[36,7]]]],
        ["element","action",["appendRule",["get","rule",["loc",[null,[41,32],[41,36]]]]],[],["loc",[null,[41,10],[41,38]]]],
        ["block","if",[["get","canDeleteRule",["loc",[null,[42,10],[42,23]]]]],[],4,null,["loc",[null,[42,4],[44,11]]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  }()));

});
define('frontend-cp/components/ko-predicate-builder/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 4
              },
              "end": {
                "line": 11,
                "column": 4
              }
            },
            "moduleName": "frontend-cp/components/ko-predicate-builder/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","predicate-builder__delete-collection");
            var el2 = dom.createTextNode("\n        Delete ");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(1);
            morphs[0] = dom.createElementMorph(element0);
            return morphs;
          },
          statements: [
            ["element","action",["removeCollection",["get","collection",["loc",[null,[8,84],[8,94]]]]],[],["loc",[null,[8,56],[8,96]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      var child1 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 4
              },
              "end": {
                "line": 19,
                "column": 4
              }
            },
            "moduleName": "frontend-cp/components/ko-predicate-builder/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-predicate-builder/rule",[],["definitions",["subexpr","@mut",[["get","definitions",["loc",[null,[14,22],[14,33]]]]],[],[]],"rule",["subexpr","@mut",[["get","proposition",["loc",[null,[15,15],[15,26]]]]],[],[]],"canDeleteRule",["subexpr","not",[["subexpr","eq",[["get","collection.propositions.length",["loc",[null,[16,33],[16,63]]]],1],[],["loc",[null,[16,29],[16,66]]]]],[],["loc",[null,[16,24],[16,67]]]],"appendRule",["subexpr","action",["addRuleToCollectionAfter",["get","collection",["loc",[null,[17,56],[17,66]]]]],[],["loc",[null,[17,21],[17,67]]]],"deleteRule",["subexpr","action",["removeRuleFromCollection",["get","collection",["loc",[null,[18,56],[18,66]]]]],[],["loc",[null,[18,21],[18,67]]]]],["loc",[null,[13,6],[18,69]]]]
          ],
          locals: ["proposition"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-predicate-builder/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","predicate-builder__collection");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","predicate-builder__and-label");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]),1,1);
          morphs[1] = dom.createMorphAt(element1,3,3);
          morphs[2] = dom.createMorphAt(element1,4,4);
          return morphs;
        },
        statements: [
          ["inline","format-message",[["subexpr","intl-get",["generic.and"],[],["loc",[null,[4,23],[4,47]]]]],[],["loc",[null,[4,6],[4,49]]]],
          ["block","if",[["get","canDeleteCollection",["loc",[null,[7,10],[7,29]]]]],[],0,null,["loc",[null,[7,4],[11,11]]]],
          ["block","each",[["get","collection.propositions",["loc",[null,[12,12],[12,35]]]]],[],1,null,["loc",[null,[12,4],[19,13]]]]
        ],
        locals: ["collection"],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 128
          }
        },
        "moduleName": "frontend-cp/components/ko-predicate-builder/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","predicate-builder__add-rule-collection");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createElementMorph(element2);
        morphs[2] = dom.createMorphAt(element2,0,0);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["block","each",[["get","collections",["loc",[null,[1,8],[1,19]]]]],[],0,null,["loc",[null,[1,0],[21,9]]]],
        ["element","action",["addCollection"],[],["loc",[null,[23,52],[23,78]]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.and"],[],["loc",[null,[23,96],[23,120]]]]],[],["loc",[null,[23,79],[23,122]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-priority/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-priority/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 8
          }
        },
        "moduleName": "frontend-cp/components/ko-priority/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("style");
        var el2 = dom.createTextNode("\n  #");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" {\n    color: #");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(";\n  }\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(element0,1,1);
        morphs[2] = dom.createMorphAt(element0,3,3);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","priority.label",["loc",[null,[1,0],[1,18]]]],
        ["content","elementId",["loc",[null,[4,3],[4,16]]]],
        ["content","priority.color",["loc",[null,[5,12],[5,30]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-profile-card/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    actions: {
      showProfile: function showProfile() {},

      followToggle: function followToggle() {}
    }

  });

});
define('frontend-cp/components/ko-profile-card/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-profile-card/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-profile",[],["profile",["subexpr","@mut",[["get","profile",["loc",[null,[4,12],[4,19]]]]],[],[]],"showProfile","showProfile","followToggle","followToggle"],["loc",[null,[3,2],[7,4]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 26
          }
        },
        "moduleName": "frontend-cp/components/ko-profile-card/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-context-modal-item",[],["index","0","contextModalId",["subexpr","@mut",[["get","contextModalId",["loc",[null,[1,50],[1,64]]]]],[],[]]],0,null,["loc",[null,[1,0],[9,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-profile/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    follow: false,

    actions: {

      showProfile: function showProfile(profile) {
        this.sendAction('showProfile', profile);
      },

      followToggle: function followToggle(profile) {
        this.sendAction('followToggle', profile);
        this.toggleProperty('follow');
      }

    }

  });

});
define('frontend-cp/components/ko-profile/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-profile/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","flag ko-profile__top");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","flag__img");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("img");
        dom.setAttribute(el3,"class","avatar ko-profile__avatar");
        dom.setAttribute(el3,"alt","");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","flag__body");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","ko-profile__name");
        var el4 = dom.createElement("strong");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","ko-profile__position t-caption");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","ko-profile__company t-caption");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","flag ko-profile__middle");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","flag__body");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","ko-profile__place t-small t-caption");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","ko-profile__time t-small t-caption");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode(" ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","ko-profile__open-cases t-small");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","flag");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","ko-profile__link-container");
        var el3 = dom.createElement("a");
        dom.setAttribute(el3,"href","#");
        dom.setAttribute(el3,"class","ko-profile__follow");
        var el4 = dom.createElement("strong");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","ko-profile__link-container");
        var el3 = dom.createElement("a");
        dom.setAttribute(el3,"href","#");
        dom.setAttribute(el3,"class","ko-profile__detail");
        var el4 = dom.createElement("strong");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1, 1]);
        var element2 = dom.childAt(element0, [3]);
        var element3 = dom.childAt(fragment, [4, 1]);
        var element4 = dom.childAt(fragment, [8]);
        var element5 = dom.childAt(element4, [1, 0]);
        var element6 = dom.childAt(element4, [3, 0]);
        var morphs = new Array(11);
        morphs[0] = dom.createAttrMorph(element1, 'src');
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [1, 0]),0,0);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [3]),0,0);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [5]),0,0);
        morphs[4] = dom.createMorphAt(dom.childAt(element3, [1]),0,0);
        morphs[5] = dom.createMorphAt(dom.childAt(element3, [3]),0,0);
        morphs[6] = dom.createMorphAt(dom.childAt(element3, [7]),0,0);
        morphs[7] = dom.createElementMorph(element5);
        morphs[8] = dom.createMorphAt(dom.childAt(element5, [0]),0,0);
        morphs[9] = dom.createElementMorph(element6);
        morphs[10] = dom.createMorphAt(dom.childAt(element6, [0]),0,0);
        return morphs;
      },
      statements: [
        ["attribute","src",["concat",[["get","profile.avatar",["loc",[null,[3,50],[3,64]]]]]]],
        ["content","profile.name",["loc",[null,[6,40],[6,56]]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.profile.position"],[],["loc",[null,[7,63],[7,100]]]]],["position",["subexpr","@mut",[["get","profile.position",["loc",[null,[7,110],[7,126]]]]],[],[]]],["loc",[null,[7,46],[7,128]]]],
        ["content","profile.company",["loc",[null,[8,45],[8,64]]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.profile.place"],[],["loc",[null,[14,68],[14,102]]]]],["place",["subexpr","@mut",[["get","profile.place",["loc",[null,[14,109],[14,122]]]]],[],[]]],["loc",[null,[14,51],[14,124]]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.profile.time"],[],["loc",[null,[15,67],[15,100]]]]],["time",["subexpr","@mut",[["get","profile.time",["loc",[null,[15,106],[15,118]]]]],[],[]]],["loc",[null,[15,50],[15,120]]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.profile.openCases"],[],["loc",[null,[16,63],[16,101]]]]],["number",["subexpr","@mut",[["get","profile.openCases",["loc",[null,[16,109],[16,126]]]]],[],[]]],["loc",[null,[16,46],[16,128]]]],
        ["element","action",["followToggle",["get","profile",["loc",[null,[21,105],[21,112]]]]],[],["loc",[null,[21,81],[21,114]]]],
        ["inline","if",[["get","follow",["loc",[null,[21,128],[21,134]]]],["subexpr","format-message",[["subexpr","intl-get",["generic.profile.follow"],[],["loc",[null,[21,151],[21,186]]]]],[],["loc",[null,[21,135],[21,187]]]],["subexpr","format-message",[["subexpr","intl-get",["generic.profile.unfollow"],[],["loc",[null,[21,204],[21,241]]]]],[],["loc",[null,[21,188],[21,242]]]]],[],["loc",[null,[21,123],[21,244]]]],
        ["element","action",["showProfile",["get","profile",["loc",[null,[22,104],[22,111]]]]],[],["loc",[null,[22,81],[22,113]]]],
        ["inline","format-message",[["subexpr","intl-get",["generic.profile.viewProfile"],[],["loc",[null,[22,139],[22,179]]]]],[],["loc",[null,[22,122],[22,181]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-radio/component', ['exports', 'ember', 'frontend-cp/lib/keycodes'], function (exports, Ember, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    disabled: false,
    large: false,
    value: null,
    checked: null,
    ariaLive: 'assertive',
    tabindex: 0,
    label: '',

    selected: (function () {
      return this.value === this.checked;
    }).property('value', 'checked'),

    keyDown: function keyDown(e) {
      if (e.keyCode === KeyCodes.space) {
        return false;
      }
    },

    keyUp: function keyUp(e) {
      if (e.keyCode === KeyCodes.space) {
        this.send('toggleRadio');
      }
      return false;
    },

    actions: {
      toggleRadio: function toggleRadio() {
        if (!this.disabled) {
          if (this.selected) {
            if (this.onRadio) {
              this.sendAction('onRadio', this.get('checked'));
            } else {
              this.set('checked', this.value);
            }
          }
        }
      }
    }

  });

});
define('frontend-cp/components/ko-radio/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-radio/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",["ko-radio__radio ",["subexpr","if",[["get","large",["loc",[null,[3,37],[3,42]]]],"ko-radio__radio--large"],[],["loc",[null,[3,32],[3,69]]]]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-radio/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createAttrMorph(element0, 'for');
          morphs[2] = dom.createElementMorph(element0);
          morphs[3] = dom.createMorphAt(element0,0,0);
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",["ko-radio__label ",["subexpr","if",[["get","disabled",["loc",[null,[7,37],[7,45]]]],"ko-radio__label--disabled"],[],["loc",[null,[7,32],[7,75]]]]]]],
          ["attribute","for",["concat",[["get","elementId",["loc",[null,[7,84],[7,93]]]],"-radio"]]],
          ["element","action",["toggleRadio"],[],["loc",[null,[7,103],[7,127]]]],
          ["content","label",["loc",[null,[7,128],[7,137]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 7
          }
        },
        "moduleName": "frontend-cp/components/ko-radio/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"role","radio");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [0]);
        var morphs = new Array(9);
        morphs[0] = dom.createAttrMorph(element2, 'class');
        morphs[1] = dom.createAttrMorph(element2, 'aria-checked');
        morphs[2] = dom.createAttrMorph(element2, 'tabindex');
        morphs[3] = dom.createAttrMorph(element2, 'aria-disabled');
        morphs[4] = dom.createAttrMorph(element2, 'aria-live');
        morphs[5] = dom.createAttrMorph(element2, 'id');
        morphs[6] = dom.createElementMorph(element2);
        morphs[7] = dom.createMorphAt(element2,1,1);
        morphs[8] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",["ko-radio__container ",["subexpr","if",[["get","large",["loc",[null,[1,37],[1,42]]]],"ko-radio__container--large"],[],["loc",[null,[1,32],[1,73]]]]," ",["subexpr","if",[["get","disabled",["loc",[null,[1,79],[1,87]]]],"ko-radio__radio--disabled"],[],["loc",[null,[1,74],[1,117]]]]]]],
        ["attribute","aria-checked",["concat",[["get","selected",["loc",[null,[1,148],[1,156]]]]]]],
        ["attribute","tabindex",["concat",[["get","tabindex",["loc",[null,[1,172],[1,180]]]]]]],
        ["attribute","aria-disabled",["concat",[["get","disabled",["loc",[null,[1,201],[1,209]]]]]]],
        ["attribute","aria-live",["concat",[["get","ariaLive",["loc",[null,[1,226],[1,234]]]]]]],
        ["attribute","id",["concat",[["get","elementId",["loc",[null,[1,244],[1,253]]]],"-radio"]]],
        ["element","action",["toggleRadio"],[],["loc",[null,[1,263],[1,287]]]],
        ["block","if",[["get","selected",["loc",[null,[2,8],[2,16]]]]],[],0,null,["loc",[null,[2,2],[4,9]]]],
        ["block","if",[["get","label",["loc",[null,[6,6],[6,11]]]]],[],1,null,["loc",[null,[6,0],[8,7]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-recent-cases/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'li',
    classNames: ['info-bar-item', 'u-no-bottom-border']
  });

});
define('frontend-cp/components/ko-recent-cases/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 8,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-recent-cases/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          dom.setAttribute(el1,"class","t-small t-caption");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("br");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);
          return morphs;
        },
        statements: [
          ["content","case.subject",["loc",[null,[5,4],[5,20]]]],
          ["inline","format-message",[["subexpr","intl-get",["cases.lastupdated"],[],["loc",[null,[6,50],[6,80]]]]],["time",["subexpr","ago",[["get","case.createdAt",["loc",[null,[6,91],[6,105]]]]],[],["loc",[null,[6,86],[6,106]]]]],["loc",[null,[6,33],[6,108]]]]
        ],
        locals: ["case"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-recent-cases/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("p");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","flag__body");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,3],[1,12]]]],
        ["block","each",[["get","cases",["loc",[null,[4,10],[4,15]]]]],[],0,null,["loc",[null,[4,2],[8,11]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-recent-members/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-recent-members/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-recent-members/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          return morphs;
        },
        statements: [
          ["inline","ko-avatar",[],["avatar",["subexpr","@mut",[["get","member.avatar",["loc",[null,[5,27],[5,40]]]]],[],[]]],["loc",[null,[5,8],[5,42]]]]
        ],
        locals: ["member"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 5
          }
        },
        "moduleName": "frontend-cp/components/ko-recent-members/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("p");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" ");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1,"class","list-inline");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,3],[1,12]]]],
        ["block","each",[["get","members",["loc",[null,[4,10],[4,17]]]]],[],0,null,["loc",[null,[4,2],[6,11]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-reorderable-crud-list/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    removeItemAction: null,
    createItemAction: null,
    classNames: ['ko-reorderable-crud-list'],
    firstItem: {},

    reorderListAction: null,
    userWantsToSeeNewItemForm: false,

    isShowingNewItemForm: (function () {
      return this.get('userWantsToSeeNewItemForm');
    }).property('userWantsToSeeNewItemForm'),

    actions: {
      removeItem: function removeItem(item) {
        this.sendAction('removeItemAction', item);
      },
      createItem: function createItem() {
        this.sendAction('createItemAction');
      },
      reorderList: function reorderList(orderedList) {
        this.sendAction('reorderListAction', orderedList);
      }
    }
  });

});
define('frontend-cp/components/ko-reorderable-crud-list/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-reorderable-crud-list/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-reorderable-crud-list__action-button ko-reorderable-crud-list__remove-item");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createElementMorph(element0);
          return morphs;
        },
        statements: [
          ["inline","yield",[["get","item",["loc",[null,[2,10],[2,14]]]]],[],["loc",[null,[2,2],[2,16]]]],
          ["element","action",["removeItem",["get","item",["loc",[null,[3,115],[3,119]]]]],[],["loc",[null,[3,93],[3,121]]]]
        ],
        locals: ["item"],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-reorderable-crud-list/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","yield",[["get","newItem",["loc",[null,[7,10],[7,17]]]]],[],["loc",[null,[7,2],[7,19]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-reorderable-crud-list/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-reorderable-crud-list__action-button ko-reorderable-crud-list__add-item");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [4]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createElementMorph(element1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["block","ko-reorderable-list",[],["reorderedListAction","reorderList","items",["subexpr","@mut",[["get","items",["loc",[null,[1,63],[1,68]]]]],[],[]]],0,null,["loc",[null,[1,0],[4,24]]]],
        ["block","if",[["subexpr","not",[["get","items.length",["loc",[null,[6,11],[6,23]]]]],[],["loc",[null,[6,6],[6,24]]]]],[],1,null,["loc",[null,[6,0],[8,7]]]],
        ["element","action",["createItem"],[],["loc",[null,[10,88],[10,111]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/components/ko-reorderable-list/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params
    items: null,

    draggedItem: null,

    actions: {

      itemStartedBeingDragged: function itemStartedBeingDragged(item) {
        this.set('draggedItem', item);
      },

      wasDraggedOverItem: function wasDraggedOverItem(targetItem) {
        var draggedItem = this.get('draggedItem');

        if (targetItem === draggedItem) {
          // it's dragged over itself
          return;
        }

        var items = this.get('items');
        var draggedItemIndex = items.indexOf(draggedItem);
        var targetItemIndex = items.indexOf(targetItem);

        items.removeAt(draggedItemIndex);
        items.insertAt(targetItemIndex, draggedItem);
      },

      itemDropped: function itemDropped() {
        this.set('draggedItem', null);
        this.sendAction('reorderedListAction', this.get('items'));
      }
    }
  });

});
define('frontend-cp/components/ko-reorderable-list/item/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    item: null,

    onDraggedOver: 'wasDraggedOverItem',
    onDropped: 'itemDropped',

    actions: {
      onDragStart: function onDragStart() {
        this.sendAction('onDragStarted', this.get('item'));
      },
      onDragStop: function onDragStop() {
        this.sendAction('onDropped');
      }
    },

    handleDragEnter: (function () {
      this.sendAction('onDraggedOver', this.get('item'));
    }).on('dragEnter'),

    dragOver: function dragOver(event) {
      event.preventDefault();
    }
  });

});
define('frontend-cp/components/ko-reorderable-list/item/handle/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    // Params
    item: null,

    draggable: 'true',
    attributeBindings: 'draggable',
    classNameBindings: [':reorderable-list_item_handle', 'isGrabbed:reorderable-list_item_handle--grabbed'],

    onDragStart: 'onDragStart',
    onDragStop: 'onDragStop',

    isGrabbed: false,
    setIsGrabbed: (function () {
      this.set('isGrabbed', true);
    }).on('mouseDown'),
    unsetIsGrabbed: (function () {
      this.set('isGrabbed', false);
    }).on('mouseUp'),

    handleDragStart: (function (e) {
      e.dataTransfer.effectAllowed = 'move';
      e.dataTransfer.dropEffect = 'move';
      e.dataTransfer.setDragImage(e.target.parentElement, 0, 0);

      this.sendAction('onDragStart', this.get('item'));
    }).on('dragStart'),

    handleDragEnd: (function () {
      this.set('isGrabbed', false);
      this.sendAction('onDragStop');
    }).on('dragEnd')
  });

});
define('frontend-cp/components/ko-reorderable-list/item/handle/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 55
          }
        },
        "moduleName": "frontend-cp/components/ko-reorderable-list/item/handle/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createTextNode(":: ");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-reorderable-list/item/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-reorderable-list/item/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","reorderable-list_item");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(element0,1,1);
        morphs[1] = dom.createMorphAt(element0,3,3);
        return morphs;
      },
      statements: [
        ["content","ko-reorderable-list/item/handle",["loc",[null,[2,2],[2,37]]]],
        ["inline","yield",[["get","item",["loc",[null,[3,10],[3,14]]]]],[],["loc",[null,[3,2],[3,16]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-reorderable-list/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 11,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-reorderable-list/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","u-inline-block");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
            return morphs;
          },
          statements: [
            ["inline","yield",[["get","item",["loc",[null,[10,40],[10,44]]]]],[],["loc",[null,[10,32],[10,46]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-reorderable-list/template.hbs"
        },
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createMorphAt(element0,1,1);
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",[["subexpr","if",[["subexpr","eq",[["get","item",["loc",[null,[3,23],[3,27]]]],["get","draggedItem",["loc",[null,[3,28],[3,39]]]]],[],["loc",[null,[3,19],[3,40]]]],"reorderable-list_item--dragging"],[],["loc",[null,[3,14],[3,76]]]]]]],
          ["block","ko-reorderable-list/item",[],["item",["subexpr","@mut",[["get","item",["loc",[null,[6,11],[6,15]]]]],[],[]],"isGhostItem",["subexpr","eq",[["get","index",["loc",[null,[7,22],[7,27]]]],["get","ghostItemIndex",["loc",[null,[7,28],[7,42]]]]],[],["loc",[null,[7,18],[7,43]]]],"isBeingDragged",["subexpr","eq",[["get","index",["loc",[null,[8,25],[8,30]]]],["get","draggedItemIndex",["loc",[null,[8,31],[8,47]]]]],[],["loc",[null,[8,21],[8,48]]]],"onDragStarted","itemStartedBeingDragged"],0,null,["loc",[null,[5,2],[11,31]]]]
        ],
        locals: ["item","index"],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-reorderable-list/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","each",[["get","items",["loc",[null,[1,8],[1,13]]]]],[],0,null,["loc",[null,[1,0],[15,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-scroller/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    /**
     * Current vertical scroll position, in pixels
     * @type {Number}
     */
    scrollTop: 0,

    /**
     * Current horizontal scroll position, in pixels
     * @type {Number}
     */
    scrollLeft: 0,

    classNames: ['ko-scroller'],

    _cachedScrollLeft: 0,
    _cachedScrollTop: 0,

    $componentElement: null,

    /**
     * Update the DOM when the scrollTop property is changed
     */
    scrollTopUpdated: (function () {
      var scrollTop = this.get('scrollTop');
      if (scrollTop === this.get('_cachedScrollTop')) {
        return;
      }
      var $componentElement = this.get('$componentElement');
      if (!$componentElement) {
        return;
      }
      $componentElement.scrollTop(scrollTop);
    }).observes('scrollTop'),

    /**
     * Update the DOM when the scrollLeft property is changed
     */
    scrollLeftUpdated: (function () {
      var scrollLeft = this.get('scrollLeft');
      if (scrollLeft === this.get('_cachedScrollLeft')) {
        return;
      }
      var $componentElement = this.get('$componentElement');
      if (!$componentElement) {
        return;
      }
      $componentElement.scrollLeft(scrollLeft);
    }).observes('scrollLeft'),

    /**
     * Add a scroll listener when the view is rendered
     */
    didInsertElement: (function () {
      var _this = this;

      var $componentElement = this.$();
      this.set('$componentElement', $componentElement);

      var scrollTop = this.get('scrollTop');
      var scrollLeft = this.get('scrollLeft');

      $componentElement.scrollTop(scrollTop);
      $componentElement.scrollLeft(scrollLeft);

      $componentElement.on('scroll', function (event) {
        Ember['default'].run(function () {
          var scrollTop = Ember['default'].$(event.currentTarget).scrollTop();
          var scrollLeft = Ember['default'].$(event.currentTarget).scrollLeft();
          _this.set('_cachedScrollTop', scrollTop);
          _this.set('_cachedScrollLeft', scrollLeft);
          _this.set('scrollTop', scrollTop);
          _this.set('scrollLeft', scrollLeft);
        });
      });
    }).on('didInsertElement')

  });

});
define('frontend-cp/components/ko-scroller/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-scroller/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-search/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //params
    placeholder: '',
    hidden: false,
    onSearchTermChange: null,

    tagName: 'div',
    classNames: ['u-pos-rel'],
    classNameBindings: ['hidden:u-hidden'],

    actions: {
      onClick: function onClick() {
        this.sendAction('onClick');
      },
      onSearchTermChange: function onSearchTermChange(value) {
        this.sendAction('onSearchTermChange', value);
      }
    }
  });

});
define('frontend-cp/components/ko-search/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-search/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("input");
        dom.setAttribute(el1,"class","input__text input__text--full u-pr+");
        dom.setAttribute(el1,"tabindex","0");
        dom.setAttribute(el1,"role","textbox");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("i");
        dom.setAttribute(el1,"class","i-search i-after i-color-grey");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element0, 'placeholder');
        morphs[1] = dom.createAttrMorph(element0, 'onclick');
        morphs[2] = dom.createAttrMorph(element0, 'onkeyup');
        return morphs;
      },
      statements: [
        ["attribute","placeholder",["get","placeholder",["loc",[null,[3,16],[3,27]]]]],
        ["attribute","onclick",["subexpr","action",["onClick"],[],["loc",[null,[6,10],[6,30]]]]],
        ["attribute","onkeyup",["subexpr","action",["onSearchTermChange"],["value","target.value"],["loc",[null,[7,10],[7,62]]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-session-widgets/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    session: Ember['default'].inject.service(),

    user: (function () {
      return this.get('session.user');
    }).property('session.user')
  });

});
define('frontend-cp/components/ko-session-widgets/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-session-widgets/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-user-menu",[],["user",["subexpr","@mut",[["get","user",["loc",[null,[1,20],[1,24]]]]],[],[]]],["loc",[null,[1,0],[1,26]]]],
        ["content","ko-notification-badge",["loc",[null,[2,0],[2,25]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-sidebar/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-sidebar/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 7,
                  "column": 4
                },
                "end": {
                  "line": 7,
                  "column": 55
                }
              },
              "moduleName": "frontend-cp/components/ko-sidebar/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createElement("span");
              dom.setAttribute(el1,"class","i-inbox");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() { return []; },
            statements: [

            ],
            locals: [],
            templates: []
          };
        }());
        var child1 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 9,
                  "column": 4
                },
                "end": {
                  "line": 13,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-sidebar/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("    ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("span");
              dom.setAttribute(el1,"class","sidebar__value");
              var el2 = dom.createTextNode("\n      ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n    ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(element0,1,1);
              morphs[1] = dom.createMorphAt(element0,2,2);
              return morphs;
            },
            statements: [
              ["inline","if",[["subexpr","eq",[["get","view.caseCountAccuracy",["loc",[null,[11,15],[11,37]]]],"RELATIVE"],[],["loc",[null,[11,11],[11,49]]]],"~"],[],["loc",[null,[11,6],[11,55]]]],
              ["content","view.caseCount",["loc",[null,[11,55],[11,73]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 15,
                "column": 0
              }
            },
            "moduleName": "frontend-cp/components/ko-sidebar/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("  ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element1, 'class');
            morphs[1] = dom.createMorphAt(element1,1,1);
            morphs[2] = dom.createMorphAt(element1,3,3);
            morphs[3] = dom.createMorphAt(element1,5,5);
            return morphs;
          },
          statements: [
            ["attribute","class",["concat",["sidebar__item\n  ",["subexpr","if",[["subexpr","eq",[["get","view",["loc",[null,[4,11],[4,15]]]],["get","activeView",["loc",[null,[4,16],[4,26]]]]],[],["loc",[null,[4,7],[4,27]]]],"sidebar__item--is-active",""],[],["loc",[null,[4,2],[4,59]]]],"\n  ",["subexpr","if",[["subexpr","eq",[["get","view.caseCount",["loc",[null,[5,11],[5,25]]]],0],[],["loc",[null,[5,7],[5,28]]]],"sidebar__item--is-disabled",""],[],["loc",[null,[5,2],[5,62]]]],"\n  "]]],
            ["block","if",[["get","view.isDefault",["loc",[null,[7,10],[7,24]]]]],[],0,null,["loc",[null,[7,4],[7,62]]]],
            ["content","view.title",["loc",[null,[8,6],[8,20]]]],
            ["block","if",[["subexpr","not",[["subexpr","eq",[["get","view.caseCountAccuracy",["loc",[null,[9,19],[9,41]]]],"UNKNOWN"],[],["loc",[null,[9,15],[9,52]]]]],[],["loc",[null,[9,10],[9,53]]]]],[],1,null,["loc",[null,[9,4],[13,11]]]]
          ],
          locals: [],
          templates: [child0, child1]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-sidebar/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","link-to",["session.cases.index",["subexpr","query-params",[],["view",["get","view.id",["loc",[null,[2,52],[2,59]]]],"page","1"],["loc",[null,[2,33],[2,69]]]]],["class","t-naked-link"],0,null,["loc",[null,[2,0],[15,12]]]]
        ],
        locals: ["view"],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-sidebar/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","each",[["get","views",["loc",[null,[1,8],[1,13]]]]],[],0,null,["loc",[null,[1,0],[16,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-simple-box-row/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    classNames: ['ko-simple-box-row']
  });

});
define('frontend-cp/components/ko-simple-box-row/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-simple-box-row/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-simple-list/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    classNameBindings: [':ko-simple-list']
  });

});
define('frontend-cp/components/ko-simple-list/row/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-simple-list/row/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-simple-list/row/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-simple-list_row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[2,2],[2,11]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-simple-list/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-simple-list/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-simple-list__title");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","title",["loc",[null,[1,35],[1,44]]]],
        ["content","yield",["loc",[null,[3,0],[3,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-suggest/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //Params:
    searchTerm: null,
    isFocussed: false,

    filterResults: (function () {
      this.sendAction('onSearchTermUpdated', this.get('searchTerm'));
    }).observes('searchTerm'),

    didInsertElement: function didInsertElement() {
      var width = this.$('.ko-dropdown-select__button').outerWidth(true);
      this.set('contentStyle', ('min-width:' + width + 'px;').htmlSafe());
    },

    actions: {
      onFocusChanged: function onFocusChanged(focusState) {
        this.set('isFocussed', focusState);
      }
    }

  });

});
define('frontend-cp/components/ko-suggest/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 4,
                  "column": 4
                },
                "end": {
                  "line": 6,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-suggest/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["inline","input",[],["type","text","value",["subexpr","@mut",[["get","searchTerm",["loc",[null,[5,32],[5,42]]]]],[],[]],"class","suggest__input"],["loc",[null,[5,6],[5,67]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        var child1 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 6,
                  "column": 4
                },
                "end": {
                  "line": 8,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-suggest/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["inline","ko-dropdown/select/button",[],["label",["subexpr","@mut",[["get","selectedItem",["loc",[null,[7,40],[7,52]]]]],[],[]]],["loc",[null,[7,6],[7,54]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 9,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-suggest/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","if",[["subexpr","or",[["get","isFocussed",["loc",[null,[4,14],[4,24]]]],["subexpr","not",[["get","selectedItem",["loc",[null,[4,30],[4,42]]]]],[],["loc",[null,[4,25],[4,43]]]]],[],["loc",[null,[4,10],[4,44]]]]],[],0,1,["loc",[null,[4,4],[8,11]]]]
          ],
          locals: [],
          templates: [child0, child1]
        };
      }());
      var child1 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 12,
                  "column": 4
                },
                "end": {
                  "line": 14,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-suggest/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["content","yield",["loc",[null,[13,6],[13,15]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 2
              },
              "end": {
                "line": 15,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-suggest/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","ko-dropdown/list",[],["class","ko-dropdown-select__content","style",["subexpr","@mut",[["get","contentStyle",["loc",[null,[12,66],[12,78]]]]],[],[]]],0,null,["loc",[null,[12,4],[14,25]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-suggest/template.hbs"
        },
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
          dom.insertBoundary(fragment, 0);
          return morphs;
        },
        statements: [
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[2,12],[2,16]]]],"button"],[],["loc",[null,[2,8],[2,26]]]]],[],0,null,["loc",[null,[2,2],[9,9]]]],
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[11,12],[11,16]]]],"content"],[],["loc",[null,[11,8],[11,27]]]]],[],1,null,["loc",[null,[11,2],[15,9]]]]
        ],
        locals: ["name","dropdownContext"],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-suggest/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-dropdown/container",[],["hideOnClick",true,"hideOnChildFocus",true,"onFocusChanged","onFocusChanged"],0,null,["loc",[null,[1,0],[17,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-table/body/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'tbody'
  });

});
define('frontend-cp/components/ko-table/body/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-table/body/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-table/cell/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'td'
  });

});
define('frontend-cp/components/ko-table/cell/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-table/cell/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-table/column/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'th',

    classNames: ['ko-table_column'],
    classNameBindings: ['sortable:ko-table_column--sortable'],
    attributeBindings: 'style',

    mouseDown: function mouseDown(e) {
      if (this.get('sortable')) {
        e.preventDefault();
      }
    },

    click: function click() {
      if (this.get('sortable')) {
        this.get('parentView').send('sort', this.get('sortable'));
      }
    }
  });

});
define('frontend-cp/components/ko-table/column/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 4,
                  "column": 4
                },
                "end": {
                  "line": 6,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-table/column/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("span");
              dom.setAttribute(el1,"class","i-chevron-small-up");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() { return []; },
            statements: [

            ],
            locals: [],
            templates: []
          };
        }());
        var child1 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 8,
                  "column": 4
                },
                "end": {
                  "line": 10,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-table/column/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("span");
              dom.setAttribute(el1,"class","i-chevron-small-down");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() { return []; },
            statements: [

            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 11,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-table/column/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","if",[["subexpr","eq",[["get","tableHeader.sortOrder",["loc",[null,[4,14],[4,35]]]],"asc"],[],["loc",[null,[4,10],[4,42]]]]],[],0,null,["loc",[null,[4,4],[6,11]]]],
            ["block","if",[["subexpr","eq",[["get","tableHeader.sortOrder",["loc",[null,[8,14],[8,35]]]],"desc"],[],["loc",[null,[8,10],[8,43]]]]],[],1,null,["loc",[null,[8,4],[10,11]]]]
          ],
          locals: [],
          templates: [child0, child1]
        };
      }());
      var child1 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 2
              },
              "end": {
                "line": 13,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-table/column/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            dom.setAttribute(el1,"class","i-chevron-small-down");
            dom.setAttribute(el1,"style","visibility: hidden;");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() { return []; },
          statements: [

          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-table/column/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","if",[["subexpr","eq",[["get","tableHeader.sortColumn",["loc",[null,[3,12],[3,34]]]],["get","sortable",["loc",[null,[3,35],[3,43]]]]],[],["loc",[null,[3,8],[3,44]]]]],[],0,1,["loc",[null,[3,2],[13,9]]]]
        ],
        locals: [],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-table/column/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]],
        ["block","if",[["get","sortable",["loc",[null,[2,6],[2,14]]]]],[],0,null,["loc",[null,[2,0],[14,7]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-table/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'table',
    rows: null,

    initRows: (function () {
      this.set('rows', new Ember['default'].A([]));
    }).on('init'),

    rowStatuses: Ember['default'].computed.mapBy('rows', 'selected'),
    unselectedRowStatuses: Ember['default'].computed.filter('rowStatuses', function (status) {
      return !status;
    }),
    allRowsSelected: Ember['default'].computed.empty('unselectedRowStatuses'),

    actions: {
      registerRow: function registerRow(row) {
        this.get('rows').pushObject(row);
      },

      unregisterRow: function unregisterRow(row) {
        var rows = this.get('rows');
        rows.splice(rows.indexOf(row), 1);
      },

      selectAll: function selectAll() {
        this.get('rows').forEach(function (row) {
          return row.set('selected', true);
        });
      },

      deselectAll: function deselectAll() {
        this.get('rows').forEach(function (row) {
          return row.set('selected', false);
        });
      }
    }
  });

});
define('frontend-cp/components/ko-table/header/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'thead',
    sortOrder: '',
    sortColumn: '',
    selectable: Ember['default'].computed.readOnly('parentView.selectable'),

    actions: {
      sort: function sort(column) {
        if (this.get('sortColumn') === column) {
          this.set('sortOrder', this.get('sortOrder') === 'asc' ? 'desc' : 'asc');
        } else {
          this.set('sortColumn', column);
          this.set('sortOrder', 'asc');
        }
        this.sendAction('onSort', this.get('sortColumn'), this.get('sortOrder'));
      },

      selectAll: function selectAll(value) {
        this.get('parentView').send(value ? 'selectAll' : 'deselectAll');
      }
    }
  });

});
define('frontend-cp/components/ko-table/header/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 5,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-table/header/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-checkbox",[],["checked",["subexpr","@mut",[["get","parentView.allRowsSelected",["loc",[null,[4,26],[4,52]]]]],[],[]],"onCheck","selectAll"],["loc",[null,[4,4],[4,74]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-table/header/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-table/column",[],[],0,null,["loc",[null,[3,2],[5,22]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-table/header/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("tr");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(element0,1,1);
        morphs[1] = dom.createMorphAt(element0,3,3);
        return morphs;
      },
      statements: [
        ["block","if",[["get","selectable",["loc",[null,[2,6],[2,16]]]]],[],0,null,["loc",[null,[2,0],[6,7]]]],
        ["content","yield",["loc",[null,[8,0],[8,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-table/row/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'tr',
    // TODO BUG when component is reusing existing dom (via Glimmer), selectable
    // will be undefined
    selectable: Ember['default'].computed.readOnly('parentView.parentView.selectable'),
    selected: false,

    classNameBindings: ['selected:ko-table_row--selected'],

    registerRow: (function () {
      var table = this.get('parentView.parentView');
      table.send('registerRow', this);
    }).on('didInsertElement'),

    unregisterRow: (function () {
      var table = this.get('parentView.parentView');
      if (table) {
        table.send('unregisterRow', this);
      }
    }).on('willDestroyElement')
  });

});
define('frontend-cp/components/ko-table/row/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-table/row/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-checkbox",[],["checked",["subexpr","@mut",[["get","selected",["loc",[null,[3,26],[3,34]]]]],[],[]]],["loc",[null,[3,4],[3,36]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-table/row/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-table/cell",[],["class","ko-table_cell--selectable"],0,null,["loc",[null,[2,2],[4,20]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-table/row/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["block","if",[["get","selectable",["loc",[null,[1,6],[1,16]]]]],[],0,null,["loc",[null,[1,0],[5,7]]]],
        ["content","yield",["loc",[null,[6,0],[6,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-table/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 9
          }
        },
        "moduleName": "frontend-cp/components/ko-table/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-tabs/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    init: function init() {
      this._super();
      this.set('tabs', this.get('tabs') || []);
    },

    /**
     * Currently active tabs
     * @type {Tab[]}
     */
    tabs: null,

    /**
     * Currently selected tab
     * @type {Tab}
     */
    selectedTab: null,

    /**
     * Close a tab and, if it is currently selected, select the tab next to it
     * @param {Tab} tab The tab object to remove
     */
    closeTab: function closeTab(tab) {
      var tabs = this.get('tabs');

      // If we're about to close the selected tab, take a note of its index
      var previouslySelectedIndex = tab === this.get('selectedTab') ? this.tabs.indexOf(tab) : -1;

      tabs.removeObject(tab);

      if (previouslySelectedIndex !== -1) {
        // If the selected tab was closed, select the one that was to the right of it
        var maxSelectedIndex = tabs.length - 1;
        var newSelectedIndex = Math.min(previouslySelectedIndex, maxSelectedIndex);
        var selectedTab = tabs.objectAt(newSelectedIndex);
        this.set('selectedTab', selectedTab);
      }
    },

    actions: {
      select: function select(tab) {
        this.set('selectedTab', tab);
      },
      close: function close(tab) {
        this.closeTab(tab);
      }
    }
  });

});
define('frontend-cp/components/ko-tabs/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-tabs/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("a");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","nav-tabs__label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2,"class","nav-tabs__close");
          var el3 = dom.createElement("span");
          dom.setAttribute(el3,"class","i-cross i-size-20 i-inherit-lh");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [0]);
          var element1 = dom.childAt(element0, [2]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createAttrMorph(element0, 'href');
          morphs[2] = dom.createElementMorph(element0);
          morphs[3] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
          morphs[4] = dom.createElementMorph(element1);
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",["nav-tabs__item",["subexpr","if",[["subexpr","eq",[["get","tab",["loc",[null,[2,33],[2,36]]]],["get","selectedTab",["loc",[null,[2,37],[2,48]]]]],[],["loc",[null,[2,29],[2,49]]]]," is-active"],[],["loc",[null,[2,24],[2,64]]]]]]],
          ["attribute","href",["concat",[["get","tab.url",["loc",[null,[2,98],[2,105]]]]]]],
          ["element","action",["select",["get","tab",["loc",[null,[2,84],[2,87]]]]],[],["loc",[null,[2,66],[2,89]]]],
          ["content","tab.label",["loc",[null,[3,31],[3,44]]]],
          ["element","action",["close",["get","tab",["loc",[null,[3,96],[3,99]]]]],[],["loc",[null,[3,79],[3,101]]]]
        ],
        locals: ["tab"],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-tabs/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","each",[["get","tabs",["loc",[null,[1,8],[1,12]]]]],[],0,null,["loc",[null,[1,0],[6,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-text-editor/component', ['exports', 'ember', 'npm:quill'], function (exports, Ember, Quill) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    //params
    channels: null,
    channel: null,

    activeMode: 'reply',
    classNameBindings: ['activeModeClass'],

    activeModeClass: Ember['default'].computed('activeMode', function () {
      return 'ko-text-editor--' + this.get('activeMode');
    }),

    quill: null,
    cursor: 0,
    attachedFiles: null,
    inlineFiles: null,
    totalSize: 0,
    maxFileSize: 5 * 1024 * 1024, // 5 MB
    maxTotalSize: 20 * 1024 * 1024, // 20 MB,

    initFiles: (function () {
      this.set('attachedFiles', new Ember['default'].A([]));
      this.set('inlineFiles', new Ember['default'].A([]));
    }).on('init'),

    fileIsNotTooBig: function fileIsNotTooBig(file) {
      return file.size < this.maxFileSize && this.totalSize < this.maxFileSize;
    },

    fileIsImage: function fileIsImage(file) {
      return file.type.match(/^image\//i);
    },

    tagDictionary: null,

    setupQuill: (function () {
      var _this = this;

      var tagDictionary = {
        'div': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, '', '');
          }
        },
        'span': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, '', '');
          }
        },
        'li': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem);
          }
        },
        'ul': {
          markdownable: true,
          process: function process(elem) {
            return _this.list(elem, 'unordered');
          }
        },
        'ol': {
          markdownable: true,
          process: function process(elem) {
            return _this.list(elem, 'ordered');
          }
        },
        'blockquote': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, '\n> ', '\n');
          }
        },
        'pre': {
          markdownable: true,
          process: function process(elem) {
            return _this.code(elem);
          }
        },
        'code': {
          markdownable: true,
          process: function process(elem) {
            return _this.code(elem);
          }
        },
        'a': {
          markdownable: true,
          process: function process(elem) {
            return _this.link(elem);
          }
        },
        'hr': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, '\n------', '\n');
          }
        },
        'em': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, ' *', '* ');
          }
        },
        'i': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, ' *', '* ');
          }
        },
        'strong': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, ' **', '** ');
          }
        },
        'b': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, ' **', '** ');
          }
        },
        'u': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, ' **', '** ');
          }
        },
        'p': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, '\n', '\n');
          }
        },
        'br': {
          markdownable: true,
          process: function process(elem) {
            return _this.process(elem, '    \n', '');
          }
        },
        'img': {
          markdownable: true,
          process: function process(elem) {
            return _this.image(elem);
          }
        },
        '_text': {
          markdownable: true,
          process: function process(elem) {
            return elem === undefined ? '' : _this.getTextFromNode(elem);
          }
        }
      };

      this.set('tagDictionary', tagDictionary);

      this.quill = new Quill['default']('.js-editor', {
        modules: {
          'multi-cursor': true,
          'toolbar': { container: '.js-toolbar' },
          'link-tooltip': true
          // 'image-tooltip': true
        },
        theme: 'snow',
        styles: {
          '.ql-editor': {
            'font-family': "'Source Sans Pro', Sans-Serif"
          },
          '.ql-editor a': {
            'text-decoration': 'none'
          }
        }
      });

      Ember['default'].$('.ql-editor').on('blur', function () {
        if (_this.quill.getSelection() === null) {
          _this.set('cursor', 0);
        } else {
          _this.set('cursor', _this.quill.getSelection().start);
        }
      });
    }).on('didInsertElement'),

    process: function process(elem, prefix, postfix) {
      return prefix + this.parseChildren(elem) + postfix;
    },

    link: function link(elem) {
      var result = ' [';
      result += this.parseChildren(elem);
      return result + '](' + elem.getAttribute('href') + ') ';
    },

    list: function list(elem, type) {
      var count = 1,
          result = '\n',
          children = elem.getElementsByTagName('li');
      for (var i = 0; i < children.length; ++i) {
        // add the list item
        if (type === 'ordered') {
          result += count + '. ';
          count++;
        } else {
          result += '- ';
        }
        // add the child elements
        result += this.parseChildren(children[i]) + '\n';
      }
      return result + '\n';
    },

    code: function code(elem) {
      var tagName = elem.nodeType === 3 ? '_text' : elem.tagName.toLowerCase();
      if (elem.childNodes.length === 1) {
        if (tagName === 'code') {
          return ' `' + this.getTextFromNode(elem, true, true) + '` ';
        }
      }
      return '\n' + ('    ' + this.getTextFromNode(elem, true, true)).replace(/\n/g, '\n    ') + '\n';
    },

    image: function image(elem) {
      var alt = elem.getAttribute('alt');
      var title = elem.getAttribute('title');
      var url = elem.getAttribute('src');
      if (alt === null) {
        alt = url;
      }
      var op = ' ![' + alt + '](' + url;
      if (title !== null) {
        op += ' "' + title + ' "';
      }
      return op + ') ';
    },

    hasClass: function hasClass(elem, klass) {
      return (' ' + elem.className + ' ').replace(/[\n\t]/g, ' ').indexOf(' ' + klass + ' ') > -1;
    },

    getTextFromNode: function getTextFromNode(elem, allowNewlines, preserveWhitespace) {
      var txt = elem.innerText || elem.textContent;
      txt = txt.trim();
      if (allowNewlines === undefined || !allowNewlines) {
        txt = txt.replace(/\n/g, ' ');
      }
      if (preserveWhitespace === undefined || !preserveWhitespace) {
        txt = txt.replace(/\s{2,}/g, ' ');
      }
      return txt;
    },

    parseChildren: function parseChildren(elem) {
      var result = '',
          children = elem.childNodes;
      for (var i = 0; i < children.length; ++i) {
        var node = children[i];
        var nodeType = node.nodeType;
        var tagName = undefined;
        if (nodeType === 3) {
          tagName = '_text';
        } else {
          // No tag name, nothing to convert.
          if (!node.tagName) {
            continue;
          }
          tagName = node.tagName.toLowerCase();
        }
        if (tagName !== '_text') {
          if (!(tagName in this.tagDictionary)) {
            continue;
          }
          if (!this.tagDictionary[tagName].markdownable) {
            continue;
          }
          if (tagName === 'div') {
            if (this.hasClass(node, 'toc')) {
              result += '\n[TOC]\n';
              continue;
            }
          }
        }
        result += this.tagDictionary[tagName].process(node);
      }
      return result;
    },

    getMarkdown: function getMarkdown() {
      var elem = this.$('.ql-editor').get(0);
      var tagName = elem.nodeType === 3 ? '_text' : elem.tagName.toLowerCase();
      if (!(tagName in this.tagDictionary)) {
        return '';
      }
      return this.tagDictionary[tagName].process(elem).trim();
    },

    appendHTML: function appendHTML(html) {
      var newText = this.quill.getHTML() + html;
      this.setHTML(newText);
    },
    setHTML: function setHTML(html) {
      this.quill.setHTML(html);
    },

    clear: function clear() {
      this.quill.setText('');
    },

    actions: {
      changeChannel: function changeChannel(channel) {
        this.set('activeMode', 'reply');
        this.sendAction('onChannelChange', channel);
      },

      setNote: function setNote() {
        this.set('activeMode', 'note');
      },

      setReply: function setReply() {
        this.set('activeMode', 'reply');
      },

      insertImage: function insertImage() {
        this.quill.insertEmbed(this.cursor, 'image', 'http://quilljs.com/images/cloud.png');
      },
      imageDropped: function imageDropped(file) {
        this.quill.insertEmbed(this.cursor, 'image', file);
      },
      handleInlineFiles: function handleInlineFiles(files) {
        var _this2 = this;

        for (var i = 0, f = undefined; f = files[i]; i++) {
          if (this.fileIsNotTooBig(f) && this.fileIsImage(f)) {
            (function () {
              _this2.inlineFiles.pushObject(f);
              var reader = new FileReader();
              reader.onload = function () {
                _this2.quill.insertEmbed(_this2.cursor + 1, 'image', reader.result);
              };
              reader.readAsDataURL(f);
            })();
          } else {// eslint-disable-line no-empty
            // TODO: Ask design team where they want file is too big message to appear
          }
        }
      },
      handleAttachmentFiles: function handleAttachmentFiles(files) {
        for (var i = 0, f = undefined; f = files[i]; i++) {
          if (this.fileIsNotTooBig(f) && this.fileIsImage(f)) {
            this.attachedFiles.pushObject(f);
          } else {// eslint-disable-line no-empty
            // TODO: Ask design team where they want file is too big message to appear
          }
        }
      }
    }
  });

});
define('frontend-cp/components/ko-text-editor/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 10,
                    "column": 18
                  },
                  "end": {
                    "line": 10,
                    "column": 102
                  }
                },
                "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [
                ["content","channel.message",["loc",[null,[10,83],[10,102]]]]
              ],
              locals: [],
              templates: []
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 9,
                  "column": 16
                },
                "end": {
                  "line": 11,
                  "column": 16
                }
              },
              "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
            },
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              return morphs;
            },
            statements: [
              ["block","ko-dropdown/list/item",[],["action","changeChannel","content",["subexpr","@mut",[["get","channel",["loc",[null,[10,74],[10,81]]]]],[],[]]],0,null,["loc",[null,[10,18],[10,128]]]]
            ],
            locals: ["channel"],
            templates: [child0]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 8,
                "column": 14
              },
              "end": {
                "line": 12,
                "column": 14
              }
            },
            "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","each",[["get","channels",["loc",[null,[9,24],[9,32]]]]],[],0,null,["loc",[null,[9,16],[11,25]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 12
            },
            "end": {
              "line": 13,
              "column": 12
            }
          },
          "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-channel-select",[],["label",["subexpr","@mut",[["get","channel.label",["loc",[null,[8,41],[8,54]]]]],[],[]],"iconClass",["subexpr","@mut",[["get","channel.iconClass",["loc",[null,[8,65],[8,82]]]]],[],[]],"hideOnClick",true],0,null,["loc",[null,[8,14],[12,36]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 12
            },
            "end": {
              "line": 18,
              "column": 12
            }
          },
          "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("              Notes\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 55,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","input__text-area--clean js-editor");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 6
            }
          },
          "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode(" ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element0,0,0);
          morphs[1] = dom.createMorphAt(element0,2,2);
          return morphs;
        },
        statements: [
          ["content","file.name",["loc",[null,[62,10],[62,23]]]],
          ["inline","ko-file-size",[],["size",["subexpr","@mut",[["get","file.size",["loc",[null,[62,44],[62,53]]]]],[],[]]],["loc",[null,[62,24],[62,55]]]]
        ],
        locals: ["file"],
        templates: []
      };
    }());
    var child4 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","ko-text-editor--note-reminder");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          return morphs;
        },
        statements: [
          ["inline","format-message",[["subexpr","intl-get",["generic.texteditor.notes_reminder"],[],["loc",[null,[69,21],[69,67]]]]],[],["loc",[null,[69,4],[69,69]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 73,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-text-editor/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-text-editor-header");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","js-toolbar");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","layout");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","layout__item u-1/2");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","ko-text-editor-header-group");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item t-base");
        var el7 = dom.createTextNode("\n");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item t-base");
        var el7 = dom.createTextNode("\n");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("\n  ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","layout__item u-1/2 t-right");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","ko-text-editor-header-group");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-bold");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-italic");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-bullet-list");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-number-list");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item ko-text-editor__image-upload");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("label");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("div");
        dom.setAttribute(el8,"class","i-camera");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-link");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-quote");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","u-inline-block u-mh");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("span");
        dom.setAttribute(el6,"class","ko-text-editor-header__spacer");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","ko-text-editor-header-group");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-clip");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-users");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","ko-text-editor-header-group__item i-stopwatch");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment(" Create the editor container ");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-text-editor__dropzone-and-editor-container");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("output");
        dom.setAttribute(el2,"class","files-list");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("ul");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0, 1, 1]);
        var element2 = dom.childAt(element1, [1, 1]);
        var element3 = dom.childAt(element1, [3]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element4, [1]);
        var element6 = dom.childAt(element4, [3]);
        var element7 = dom.childAt(element4, [5]);
        var element8 = dom.childAt(element4, [7]);
        var element9 = dom.childAt(element4, [9]);
        var element10 = dom.childAt(element9, [1]);
        var element11 = dom.childAt(element10, [1]);
        var element12 = dom.childAt(element4, [11]);
        var element13 = dom.childAt(element4, [13]);
        var element14 = dom.childAt(element3, [5]);
        var element15 = dom.childAt(element14, [1]);
        var element16 = dom.childAt(element14, [3]);
        var element17 = dom.childAt(element14, [5]);
        var element18 = dom.childAt(fragment, [4]);
        var morphs = new Array(17);
        morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]),1,1);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]),1,1);
        morphs[2] = dom.createAttrMorph(element5, 'title');
        morphs[3] = dom.createAttrMorph(element6, 'title');
        morphs[4] = dom.createAttrMorph(element7, 'title');
        morphs[5] = dom.createAttrMorph(element8, 'title');
        morphs[6] = dom.createAttrMorph(element10, 'for');
        morphs[7] = dom.createAttrMorph(element11, 'title');
        morphs[8] = dom.createMorphAt(element9,3,3);
        morphs[9] = dom.createAttrMorph(element12, 'title');
        morphs[10] = dom.createAttrMorph(element13, 'title');
        morphs[11] = dom.createAttrMorph(element15, 'title');
        morphs[12] = dom.createAttrMorph(element16, 'title');
        morphs[13] = dom.createAttrMorph(element17, 'title');
        morphs[14] = dom.createMorphAt(element18,1,1);
        morphs[15] = dom.createMorphAt(dom.childAt(element18, [3, 1]),1,1);
        morphs[16] = dom.createMorphAt(element18,5,5);
        return morphs;
      },
      statements: [
        ["block","ko-text-editor/toggle-button",[],["action","setReply","isActive",["subexpr","eq",["reply",["get","activeMode",["loc",[null,[7,83],[7,93]]]]],[],["loc",[null,[7,71],[7,94]]]]],0,null,["loc",[null,[7,12],[13,45]]]],
        ["block","ko-text-editor/toggle-button",[],["action","setNote","isActive",["subexpr","eq",["note",["get","activeMode",["loc",[null,[16,81],[16,91]]]]],[],["loc",[null,[16,70],[16,92]]]]],1,null,["loc",[null,[16,12],[18,45]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.bold"],[],["loc",[null,[24,87],[24,123]]]]],[],["loc",[null,[24,70],[24,125]]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.italic"],[],["loc",[null,[25,89],[25,127]]]]],[],["loc",[null,[25,72],[25,129]]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.bullet"],[],["loc",[null,[26,94],[26,132]]]]],[],["loc",[null,[26,77],[26,134]]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.list"],[],["loc",[null,[27,94],[27,130]]]]],[],["loc",[null,[27,77],[27,132]]]]],
        ["attribute","for",["get","filesInline.elementId",["loc",[null,[29,25],[29,46]]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.image"],[],["loc",[null,[30,59],[30,96]]]]],[],["loc",[null,[30,42],[30,98]]]]],
        ["inline","ko-file-field",[],["viewName","filesInline","on-change","handleInlineFiles"],["loc",[null,[32,12],[35,14]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.link"],[],["loc",[null,[37,87],[37,123]]]]],[],["loc",[null,[37,70],[37,125]]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.authorship"],[],["loc",[null,[38,88],[38,130]]]]],[],["loc",[null,[38,71],[38,132]]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.billing"],[],["loc",[null,[44,87],[44,126]]]]],[],["loc",[null,[44,70],[44,128]]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.billing"],[],["loc",[null,[45,88],[45,127]]]]],[],["loc",[null,[45,71],[45,129]]]]],
        ["attribute","title",["subexpr","format-message",[["subexpr","intl-get",["generic.texteditor.billing"],[],["loc",[null,[46,92],[46,131]]]]],[],["loc",[null,[46,75],[46,133]]]]],
        ["block","ko-draggable-dropzone",[],["dropped","imageDropped"],2,null,["loc",[null,[55,2],[57,28]]]],
        ["block","each",[["get","attachedFiles",["loc",[null,[61,14],[61,27]]]]],[],3,null,["loc",[null,[61,6],[63,15]]]],
        ["block","if",[["subexpr","eq",["note",["get","activeMode",["loc",[null,[67,19],[67,29]]]]],[],["loc",[null,[67,8],[67,30]]]]],[],4,null,["loc",[null,[67,2],[71,9]]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  }()));

});
define('frontend-cp/components/ko-text-editor/toggle-button/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    classNameBindings: ['isActive:is-active'],
    actions: {
      click: function click() {
        this.sendAction('action');
      }
    }
  });

});
define('frontend-cp/components/ko-text-editor/toggle-button/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-text-editor/toggle-button/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createElementMorph(element0);
        morphs[1] = dom.createMorphAt(element0,1,1);
        return morphs;
      },
      statements: [
        ["element","action",["click"],[],["loc",[null,[1,6],[1,24]]]],
        ["content","yield",["loc",[null,[2,0],[2,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-time-billing/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    timeBillingDuration: null, //length of time tracked in hours as a float
    humanReadableDuration: 'test', //length of time tracked as : separated hour:minute
    isValid: true,

    onDurationParamChange: (function () {
      this.set('humanReadableDuration', this.parseDurationToHumanReadable(this.get('timeBillingDuration')));
    }).observes('timeBillingDuration').on('init'),

    onDurationTextChange: (function () {
      var durationArray = this.parseHumanReadableDuration(this.get('humanReadableDuration'));
      var hours = durationArray[0];
      var minutes = durationArray[1];
      var duration = Number(hours) + Number(minutes / 60);

      if (isNaN(Number(duration))) {
        this.set('isValid', false);
      } else {
        this.set('isValid', true);
        this.setDuration(duration);
      }
    }).on('focusOut'),

    parseHumanReadableDuration: function parseHumanReadableDuration(humanDuration) {
      if (humanDuration.indexOf(':') === -1) {
        return [Number(humanDuration), 0];
      }

      var durationParts = humanDuration.split(':');
      var hoursString = durationParts[0];
      var minutesString = durationParts[1];
      return [Number(hoursString), Number(minutesString)];
    },

    setDuration: function setDuration(duration) {
      this.sendAction('on-duration-change', duration);
    },

    parseDurationToHumanReadable: function parseDurationToHumanReadable(duration) {
      if (duration === null) {
        return '';
      }

      var hours = Math.floor(duration);
      var minutes = (duration - Math.floor(duration)) * 60;
      if (minutes < 10) {
        //force to 2sf
        minutes = '0' + minutes;
      }
      return hours + ':' + minutes;
    }

  });

});
define('frontend-cp/components/ko-time-billing/ko-time-billing-context-modal/component', ['exports', 'ember', 'frontend-cp/components/mixins/context-menu-set'], function (exports, Ember, ContextMenuSetComponentMixin) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend(ContextMenuSetComponentMixin['default'], {
    durationChangedAction: 'onDurationChanged', //needed to traverse action coming through this component

    actions: {
      onDurationChanged: function onDurationChanged(duration) {
        this.sendAction('on-duration-change', duration);
      }
    }
  });

});
define('frontend-cp/components/ko-time-billing/ko-time-billing-context-modal/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-time-billing/ko-time-billing-context-modal/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-time-billing",[],["timeBillingDuration",["subexpr","@mut",[["get","timeBillingDuration",["loc",[null,[2,40],[2,59]]]]],[],[]],"on-duration-change",["subexpr","@mut",[["get","durationChangedAction",["loc",[null,[2,79],[2,100]]]]],[],[]]],["loc",[null,[2,2],[2,102]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 26
          }
        },
        "moduleName": "frontend-cp/components/ko-time-billing/ko-time-billing-context-modal/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-context-modal-item",[],["index","0","title","Track time","contextModalId",["subexpr","@mut",[["get","contextModalId",["loc",[null,[1,69],[1,83]]]]],[],[]]],0,null,["loc",[null,[1,0],[3,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-time-billing/ko-time-billing-demo-open/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    click: function click(event) {
      this.sendAction('addTimeBilling', event);
    }
  });

});
define('frontend-cp/components/ko-time-billing/ko-time-billing-demo-open/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 7
          }
        },
        "moduleName": "frontend-cp/components/ko-time-billing/ko-time-billing-demo-open/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createTextNode("Open me");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() { return []; },
      statements: [

      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-time-billing/ko-time-entry/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].TextField.extend({
    placeholder: '1:15',
    isValid: true,
    isInvalid: Ember['default'].computed.not('isValid'),
    classNameBindings: [':ko-time-billing__ko-time-entry', 'isInvalid:ko-time-billing__ko-time-entry--invalid']
  });

});
define('frontend-cp/components/ko-time-billing/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/components/ko-time-billing/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-time-billing");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","ko-time-billing__label");
        var el3 = dom.createTextNode("Time spent");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("span");
        dom.setAttribute(el3,"class","ko-time-billing__time-format-label");
        var el4 = dom.createTextNode("Hrs");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0, 3]),1,1);
        return morphs;
      },
      statements: [
        ["inline","ko-time-billing/ko-time-entry",[],["value",["subexpr","@mut",[["get","humanReadableDuration",["loc",[null,[4,42],[4,63]]]]],[],[]],"isValid",["subexpr","@mut",[["get","isValid",["loc",[null,[4,72],[4,79]]]]],[],[]]],["loc",[null,[4,4],[4,81]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-toggle-context-modal/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    click: function click(event) {
      this.sendAction('toggleModal', event);
    }
  });

});
define('frontend-cp/components/ko-toggle-context-modal/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-toggle-context-modal/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["content","yield",["loc",[null,[1,0],[1,9]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-toggle/component', ['exports', 'ember', 'frontend-cp/lib/keycodes'], function (exports, Ember, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    activated: false,
    ariaLive: 'assertive',
    tabindex: 0,
    label: '',

    keyDown: function keyDown(e) {
      if (e.keyCode === KeyCodes.space) {
        return false;
      }
    },

    keyUp: function keyUp(e) {
      if (e.keyCode === KeyCodes.space) {
        this.send('toggleRadio');
      }
      return false;
    },

    actions: {
      toggleRadio: function toggleRadio() {
        if (this.onToggle) {
          this.sendAction('onToggle', !this.get('activated'));
        } else {
          this.toggleProperty('activated');
        }
      }
    }

  });

});
define('frontend-cp/components/ko-toggle/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-toggle/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createAttrMorph(element0, 'for');
          morphs[2] = dom.createElementMorph(element0);
          morphs[3] = dom.createMorphAt(element0,0,0);
          return morphs;
        },
        statements: [
          ["attribute","class",["concat",["ko-toggle__label u-v-center ",["subexpr","if",[["get","micro",["loc",[null,[5,49],[5,54]]]],"ko-toggle__label--micro"],[],["loc",[null,[5,44],[5,82]]]]]]],
          ["attribute","for",["concat",[["get","elementId",["loc",[null,[5,91],[5,100]]]],"-toggle"]]],
          ["element","action",["toggleRadio"],[],["loc",[null,[5,111],[5,135]]]],
          ["content","label",["loc",[null,[5,136],[5,145]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-toggle/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"role","radio");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var element2 = dom.childAt(element1, [1]);
        var morphs = new Array(8);
        morphs[0] = dom.createAttrMorph(element1, 'class');
        morphs[1] = dom.createAttrMorph(element1, 'aria-checked');
        morphs[2] = dom.createAttrMorph(element1, 'tabindex');
        morphs[3] = dom.createAttrMorph(element1, 'aria-live');
        morphs[4] = dom.createAttrMorph(element1, 'id');
        morphs[5] = dom.createElementMorph(element1);
        morphs[6] = dom.createAttrMorph(element2, 'class');
        morphs[7] = dom.createMorphAt(fragment,2,2,contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",["ko-toggle__container ",["subexpr","if",[["get","micro",["loc",[null,[1,38],[1,43]]]],"ko-toggle__container--micro"],[],["loc",[null,[1,33],[1,75]]]]," ",["subexpr","if",[["get","activated",["loc",[null,[1,81],[1,90]]]],"ko-toggle__container--activated"],[],["loc",[null,[1,76],[1,126]]]]]]],
        ["attribute","aria-checked",["concat",[["get","activated",["loc",[null,[1,157],[1,166]]]]]]],
        ["attribute","tabindex",["concat",[["get","tabindex",["loc",[null,[1,182],[1,190]]]]]]],
        ["attribute","aria-live",["concat",[["get","ariaLive",["loc",[null,[1,207],[1,215]]]]]]],
        ["attribute","id",["concat",[["get","elementId",["loc",[null,[1,225],[1,234]]]],"-toggle"]]],
        ["element","action",["toggleRadio"],[],["loc",[null,[1,245],[1,269]]]],
        ["attribute","class",["concat",["ko-toggle__toggle u-v-center ",["subexpr","if",[["get","micro",["loc",[null,[2,48],[2,53]]]],"ko-toggle__toggle--micro"],[],["loc",[null,[2,43],[2,82]]]]," ",["subexpr","if",[["get","activated",["loc",[null,[2,88],[2,97]]]],"ko-toggle__toggle--activated"],[],["loc",[null,[2,83],[2,130]]]]]]],
        ["block","if",[["get","label",["loc",[null,[4,6],[4,11]]]]],[],0,null,["loc",[null,[4,0],[6,7]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-universal-search/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    searchResults: null,
    searchQuery: null,
    loadSearchRouteAction: 'loadSearchRoute',

    isSearching: Ember['default'].computed.bool('searchQuery'),

    didChangeSearchingStatus: (function () {
      this.sendAction('searchingChanged', this.get('isSearching'));
    }).observes('isSearching').on('init'),

    // returns a flattened array of search results.
    flattenedResults: (function () {
      return this.get('searchResults').reduce(function (results, searchResultGroup) {
        searchResultGroup.get('results').forEach(function (result) {
          results.pushObject(result);
        });

        return results;
      }, new Ember['default'].A([]));
    }).property('searchResults'),

    onSearchQueryChanged: (function () {
      Ember['default'].run.debounce(this, 'fireSearchAction', 250);
    }).observes('searchQuery'),

    fireSearchAction: function fireSearchAction() {
      this.sendAction('performSearch', this.get('searchQuery'));
    },

    actions: {
      clearSearchQuery: function clearSearchQuery() {
        this.set('searchQuery', '');
        this.set('searchResults', new Ember['default'].A([]));
      },

      highlightResult: function highlightResult(highlightedResult) {
        if (highlightedResult) {
          this.removeAllHighlighting();
          highlightedResult.set('isHighlighted', true);
        }
      },

      selectHighlightedResultAction: function selectHighlightedResultAction() {
        var result = this.getFirstHighlightedResult();

        switch (result.get('resource')) {
          case 'person':
            this.sendAction('loadSearchRouteAction', '/users/', result.get('objectId'));
            break;
          case 'case':
            this.sendAction('loadSearchRouteAction', '/cases/', result.get('objectId'));
            break;
          default:
            break;
        }
      },

      highlightNextResult: function highlightNextResult() {
        var flattenedResults = this.get('flattenedResults');
        var currentResult = this.getFirstHighlightedResult();
        var currentResultIndex = flattenedResults.indexOf(currentResult);
        var newHighlightedObject = flattenedResults.objectAt(currentResultIndex + 1);

        if (!newHighlightedObject) {
          newHighlightedObject = this.get('flattenedResults.firstObject');
        }

        this.send('highlightResult', newHighlightedObject);
      },

      highlightPreviousResult: function highlightPreviousResult() {
        var currentResult = this.getFirstHighlightedResult();
        var currentResultIndex = this.get('flattenedResults').indexOf(currentResult);
        var newHighlightedObject = this.get('flattenedResults').objectAt(currentResultIndex - 1);

        if (!newHighlightedObject) {
          newHighlightedObject = this.get('flattenedResults.lastObject');
        }

        this.send('highlightResult', newHighlightedObject);
      }
    },

    getFirstHighlightedResult: function getFirstHighlightedResult() {
      return this.get('flattenedResults').filter(function (result) {
        return result.isHighlighted;
      }).get('firstObject');
    },

    removeAllHighlighting: function removeAllHighlighting() {
      var _this = this;

      // wrapped in .run because otherwise the flushed false gets
      // applied after the set(true) call :-/
      Ember['default'].run(function () {
        _this.get('searchResults').forEach(function (resultGroup) {
          resultGroup.get('results').forEach(function (result) {
            result.set('isHighlighted', false);
          });
        });
      });
    }

  });

});
define('frontend-cp/components/ko-universal-search/entry/component', ['exports', 'ember', 'frontend-cp/lib/keycodes'], function (exports, Ember, KeyCodes) {

  'use strict';

  exports['default'] = Ember['default'].TextField.extend({
    classNames: ['universal-search_entry'],
    selectHighlightedResultAction: 'selectHighlightedResultAction',
    highlightNextResultAction: 'highlightNextResult',
    highlightPreviousResultAction: 'highlightPreviousResult',
    stopSearchingAction: 'clearSearchQuery',

    keyDown: function keyDown(e) {
      switch (e.keyCode) {
        case KeyCodes.down:
          {
            this.sendAction('highlightNextResultAction');
          }
        case KeyCodes.up:
          {
            this.sendAction('highlightPreviousResultAction');
          }
        case KeyCodes.enter:
          {
            //event.preventDefault();
            this.sendAction('selectHighlightedResultAction');
            this.sendAction('stopSearchingAction');
            return false;
          }
        case KeyCodes.escape:
          {
            this.sendAction('stopSearchingAction');
          }
      }
    }
  });

});
define('frontend-cp/components/ko-universal-search/result/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    tagName: 'li',
    classNameBindings: [':universal-search_result', 'isHighlighted:universal-search_result--highlighted'],
    isHighlighted: false,

    highlight: (function () {
      this.sendAction('on-highlight', this);
    }).on('mouseEnter')

  });

});
define('frontend-cp/components/ko-universal-search/result/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 66
          }
        },
        "moduleName": "frontend-cp/components/ko-universal-search/result/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","universal-search_result-snippet");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","universal-search_result-instruction");
        var el2 = dom.createTextNode("Press enter");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createUnsafeMorphAt(dom.childAt(fragment, [2]),0,0);
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",["universal-search__icon ",["get","resource",["loc",[null,[1,37],[1,45]]]]]]],
        ["content","snippet",["loc",[null,[2,45],[2,58]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/components/ko-universal-search/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 8,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-universal-search/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"style","display: inline-block");
          var el2 = dom.createTextNode("X");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createElementMorph(element0);
          return morphs;
        },
        statements: [
          ["element","action",["clearSearchQuery"],[],["loc",[null,[7,39],[7,68]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 6
              },
              "end": {
                "line": 21,
                "column": 6
              }
            },
            "moduleName": "frontend-cp/components/ko-universal-search/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-universal-search/result",[],["resource",["subexpr","@mut",[["get","resultsGroup.id",["loc",[null,[16,21],[16,36]]]]],[],[]],"snippet",["subexpr","@mut",[["get","result.snippet",["loc",[null,[17,20],[17,34]]]]],[],[]],"isHighlighted",["subexpr","@mut",[["get","result.isHighlighted",["loc",[null,[18,26],[18,46]]]]],[],[]],"on-highlight","highlightResult"],["loc",[null,[15,8],[20,10]]]]
          ],
          locals: ["result"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 24,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-universal-search/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("ul");
          dom.setAttribute(el1,"class","universal-search__result-group list-bare");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          return morphs;
        },
        statements: [
          ["block","each",[["get","resultsGroup.results",["loc",[null,[14,14],[14,34]]]]],[],0,null,["loc",[null,[14,6],[21,15]]]]
        ],
        locals: ["resultsGroup"],
        templates: [child0]
      };
    }());
    var child2 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 25,
                "column": 4
              },
              "end": {
                "line": 31,
                "column": 4
              }
            },
            "moduleName": "frontend-cp/components/ko-universal-search/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("ul");
            dom.setAttribute(el1,"class","universal-search__result-group list-bare");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("li");
            dom.setAttribute(el2,"class","universal-search__result universal-search__no-results-message");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);
            return morphs;
          },
          statements: [
            ["inline","format-message",[["subexpr","intl-get",["search.no-results"],[],["loc",[null,[28,29],[28,59]]]]],[],["loc",[null,[28,12],[28,61]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 24,
              "column": 2
            },
            "end": {
              "line": 32,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-universal-search/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","if",[["get","isSearching",["loc",[null,[25,10],[25,21]]]]],[],0,null,["loc",[null,[25,4],[31,11]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-universal-search/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","universal-search");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","ko-universal-search__icon");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("span");
        dom.setAttribute(el3,"class","i-search i-size-base i-color-grey--dark u-inherit-lh");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","universal-search__results");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(element1,3,3);
        morphs[1] = dom.createMorphAt(element1,5,5);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);
        return morphs;
      },
      statements: [
        ["inline","ko-universal-search/entry",[],["type","text","value",["subexpr","@mut",[["get","searchQuery",["loc",[null,[5,48],[5,59]]]]],[],[]],"placeholder",["subexpr","format-message",[["subexpr","intl-get",["search.placeholder"],[],["loc",[null,[5,88],[5,119]]]]],[],["loc",[null,[5,72],[5,120]]]]],["loc",[null,[5,2],[5,122]]]],
        ["block","if",[["get","searchQuery",["loc",[null,[6,8],[6,19]]]]],[],0,null,["loc",[null,[6,2],[8,9]]]],
        ["block","each",[["get","searchResults",["loc",[null,[12,10],[12,23]]]]],[],1,2,["loc",[null,[12,2],[32,11]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/components/ko-user-content/component', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Component.extend({});

});
define('frontend-cp/components/ko-user-content/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 28,
                "column": 8
              },
              "end": {
                "line": 30,
                "column": 8
              }
            },
            "moduleName": "frontend-cp/components/ko-user-content/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["inline","ko-case-field/custom",[],["field",["subexpr","@mut",[["get","field",["loc",[null,[29,39],[29,44]]]]],[],[]]],["loc",[null,[29,10],[29,46]]]]
          ],
          locals: ["field"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 6
            }
          },
          "moduleName": "frontend-cp/components/ko-user-content/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","each",[["get","model.customFields",["loc",[null,[28,16],[28,34]]]]],[],0,null,["loc",[null,[28,8],[30,17]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-user-content/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout--flush");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","layout__item u-1/1 u-mt");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag--bottom");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__img");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("img");
        dom.setAttribute(el6,"alt","");
        dom.setAttribute(el6,"class","header__image");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__body");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("h4");
        dom.setAttribute(el6,"class","header__title");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("p");
        dom.setAttribute(el6,"class","header__subtitle");
        var el7 = dom.createTextNode("\n            TODO\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout--flush u-mt");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","layout__item u-3/4");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","main-content main-content--has-info");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","layout__item u-1/4");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1, 1, 1]);
        var element2 = dom.childAt(element1, [1, 1]);
        var element3 = dom.childAt(element0, [3]);
        var element4 = dom.childAt(element3, [1, 1]);
        var morphs = new Array(5);
        morphs[0] = dom.createAttrMorph(element2, 'src');
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3, 1]),1,1);
        morphs[2] = dom.createMorphAt(element4,1,1);
        morphs[3] = dom.createMorphAt(element4,3,3);
        morphs[4] = dom.createMorphAt(dom.childAt(element3, [3]),1,1);
        return morphs;
      },
      statements: [
        ["attribute","src",["concat",[["get","model.requester.avatar.url",["loc",[null,[6,22],[6,48]]]]]]],
        ["inline","ko-editable-text",[],["value",["subexpr","@mut",[["get","model.subject",["loc",[null,[10,37],[10,50]]]]],[],[]]],["loc",[null,[10,12],[10,52]]]],
        ["inline","ko-limited-text-area",[],["max",140,"placeholder","TODO"],["loc",[null,[22,8],[22,59]]]],
        ["inline","ko-feed",[],["events",["subexpr","@mut",[["get","model.timeline",["loc",[null,[23,25],[23,39]]]]],[],[]]],["loc",[null,[23,8],[23,41]]]],
        ["block","ko-info-bar",[],[],0,null,["loc",[null,[27,6],[31,22]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-user-menu/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({
    sessionService: Ember['default'].inject.service('session'),

    actions: {
      logout: function logout() {
        this.get('sessionService').logout();
      }
    }
  });

});
define('frontend-cp/components/ko-user-menu/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 11,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-user-menu/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1,"class","flag flag--small flag--auto");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2,"class","flag__img u-reset-lh");
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2,"class","flag__body");
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]),1,1);
            return morphs;
          },
          statements: [
            ["inline","ko-avatar",[],["avatar",["subexpr","@mut",[["get","user.avatar",["loc",[null,[5,27],[5,38]]]]],[],[]]],["loc",[null,[5,8],[5,40]]]],
            ["content","user.fullName",["loc",[null,[8,8],[8,25]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      var child1 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 14,
                    "column": 6
                  },
                  "end": {
                    "line": 14,
                    "column": 68
                  }
                },
                "moduleName": "frontend-cp/components/ko-user-menu/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("styleguide");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes() { return []; },
              statements: [

              ],
              locals: [],
              templates: []
            };
          }());
          var child1 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 15,
                    "column": 6
                  },
                  "end": {
                    "line": 15,
                    "column": 64
                  }
                },
                "moduleName": "frontend-cp/components/ko-user-menu/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("showcase");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes() { return []; },
              statements: [

              ],
              locals: [],
              templates: []
            };
          }());
          var child2 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 17,
                    "column": 6
                  },
                  "end": {
                    "line": 17,
                    "column": 54
                  }
                },
                "moduleName": "frontend-cp/components/ko-user-menu/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("Logout");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes() { return []; },
              statements: [

              ],
              locals: [],
              templates: []
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 13,
                  "column": 4
                },
                "end": {
                  "line": 18,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/components/ko-user-menu/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(4);
              morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
              morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
              morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);
              morphs[3] = dom.createMorphAt(fragment,7,7,contextualElement);
              return morphs;
            },
            statements: [
              ["block","ko-dropdown/list/item",[],["link","session.styleguide"],0,null,["loc",[null,[14,6],[14,94]]]],
              ["block","ko-dropdown/list/item",[],["link","session.showcase"],1,null,["loc",[null,[15,6],[15,90]]]],
              ["content","ko-dropdown/list/hr",["loc",[null,[16,6],[16,29]]]],
              ["block","ko-dropdown/list/item",[],["action","logout"],2,null,["loc",[null,[17,6],[17,80]]]]
            ],
            locals: [],
            templates: [child0, child1, child2]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 2
              },
              "end": {
                "line": 20,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/components/ko-user-menu/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            return morphs;
          },
          statements: [
            ["block","ko-dropdown/list",[],["class","ko-user-menu__content"],0,null,["loc",[null,[13,4],[18,25]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/components/ko-user-menu/template.hbs"
        },
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[2,12],[2,16]]]],"button"],[],["loc",[null,[2,8],[2,26]]]]],[],0,null,["loc",[null,[2,2],[11,9]]]],
          ["block","if",[["subexpr","eq",[["get","name",["loc",[null,[12,12],[12,16]]]],"content"],[],["loc",[null,[12,8],[12,27]]]]],[],1,null,["loc",[null,[12,2],[20,9]]]]
        ],
        locals: ["name","dropdownContext"],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-user-menu/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-dropdown/container",[],["hideOnChildFocus",true],0,null,["loc",[null,[1,0],[21,26]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/ko-viewers/component', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Component.extend({

    contextModalService: Ember['default'].inject.service('context-modal'),

    tagName: 'li',
    classNames: ['info-bar-item'],
    viewers: null,
    selectedViewer: null,

    actions: {

      displayViewer: function displayViewer(event) {
        this.get('contextModalService').open('displayViewer', event);
      },

      showViewer: function showViewer(viewer) {
        this.set('selectedViewer', viewer);
      }

    }

  });

});
define('frontend-cp/components/ko-viewers/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 4
              },
              "end": {
                "line": 18,
                "column": 4
              }
            },
            "moduleName": "frontend-cp/components/ko-viewers/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("li");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("img");
            dom.setAttribute(el2,"class","figure-inline__image--med u-mt--");
            dom.setAttribute(el2,"alt","");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3,"class","u-typing__item");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3,"class","u-typing__item");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3,"class","u-typing__item");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var element1 = dom.childAt(element0, [1]);
            var element2 = dom.childAt(element0, [3]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createElementMorph(element0);
            morphs[2] = dom.createAttrMorph(element1, 'src');
            morphs[3] = dom.createAttrMorph(element2, 'class');
            return morphs;
          },
          statements: [
            ["attribute","class",["concat",["u-pos-rel u-no-list-style-type ",["subexpr","if",[["get","viewer.inactive",["loc",[null,[9,53],[9,68]]]],"u-is-inactive"],[],["loc",[null,[9,48],[9,86]]]]]]],
            ["element","action",["showViewer",["get","viewer",["loc",[null,[9,110],[9,116]]]]],[],["loc",[null,[9,88],[9,118]]]],
            ["attribute","src",["concat",[["get","viewer.profile.avatar",["loc",[null,[10,61],[10,82]]]]]]],
            ["attribute","class",["concat",["u-typing ",["subexpr","if",[["get","viewer.isTyping",["loc",[null,[11,34],[11,49]]]],"u-is-typing"],[],["loc",[null,[11,29],[11,65]]]]," ",["subexpr","if",[["get","viewer.wasTyping",["loc",[null,[11,71],[11,87]]]],"u-was-typing"],[],["loc",[null,[11,66],[11,104]]]]," ",["subexpr","if",[["get","viewer.hidden",["loc",[null,[11,110],[11,123]]]],"u-hidden"],[],["loc",[null,[11,105],[11,136]]]]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/components/ko-viewers/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["block","ko-toggle-context-modal",[],["toggleModal","displayViewer"],0,null,["loc",[null,[7,4],[18,32]]]]
        ],
        locals: ["viewer"],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/components/ko-viewers/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("span");
        dom.setAttribute(el1,"class","info-bar-item__header");
        var el2 = dom.createTextNode("Also viewing");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1,"class","figure-inline");
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);
        morphs[1] = dom.createMorphAt(fragment,6,6,contextualElement);
        return morphs;
      },
      statements: [
        ["block","each",[["get","viewers",["loc",[null,[5,10],[5,17]]]]],[],0,null,["loc",[null,[5,2],[20,11]]]],
        ["inline","ko-profile-card",[],["profile",["subexpr","@mut",[["get","selectedViewer.profile",["loc",[null,[27,10],[27,32]]]]],[],[]],"contextModalId","displayViewer"],["loc",[null,[26,0],[29,2]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/components/mixins/context-menu-set', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Mixin.create({
    contextModalService: Ember['default'].inject.service('contextModal'),

    actions: {
      next: function next() {
        this.get('contextModalService').next();
      },
      prev: function prev() {
        this.get('contextModalService').prev();
      }
    }
  });

});
define('frontend-cp/components/mixins/drop-down-keyboard-nav', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Mixin.create({

    moveSelectedItem: function moveSelectedItem(listLength, ulSelector, direction, positionProperty) {
      var position = this.get(positionProperty);
      switch (direction) {
        case 'down':
          {
            position = ++position;
            if (position <= listLength) {
              this.$(ulSelector + ' li:nth-of-type(' + position + ')').focus();
              this.set(positionProperty, position);
            }
            break;
          }
        case 'up':
          {
            position = --position;
            if (position > 0) {
              this.$(ulSelector + ' li:nth-of-type(' + position + ')').focus();
              this.set(positionProperty, position);
            }
            break;
          }
      }
    }
  });

});
define('frontend-cp/components/mixins/suggestions', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Mixin.create({

    matches: function matches(searchStr, source) {
      var result = [];

      if (source.length > 0) {
        result = source.filter(RegExp.prototype.test, new RegExp(searchStr, 'i'));
      }

      return new Ember['default'].A(result);
    }
  });

});
define('frontend-cp/controllers/array', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Controller;

});
define('frontend-cp/controllers/object', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Controller;

});
define('frontend-cp/formats', ['exports'], function (exports) {

  'use strict';

  exports['default'] = {
    date: {
      month: {
        month: 'long'
      },
      year: {
        year: 'numeric'
      },
      full: {
        month: 'long',
        day: 'numeric',
        year: 'numeric'
      }
    },
    number: {
      filesize: {
        style: 'decimal',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    },
    time: {}
  };

});
define('frontend-cp/helpers/-intl-get', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return '%' + value + '%';
  });

});
define('frontend-cp/helpers/and', ['exports', 'ember', 'ember-truth-helpers/helpers/and'], function (exports, Ember, andHelper) {

	'use strict';

	exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(andHelper['default']);

	exports.andHelper = andHelper['default'];

});
define('frontend-cp/helpers/equal', ['exports', 'ember', 'ember-truth-helpers/helpers/equal'], function (exports, Ember, equalHelper) {

	'use strict';

	exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(equalHelper['default']);

	exports.equalHelper = equalHelper['default'];

});
define('frontend-cp/helpers/escape-html', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return value;
  });

});
define('frontend-cp/helpers/intl-get', ['exports', 'ember', 'ember-intl/legacy/helpers/intl-get', 'ember-intl/helpers/intl-get'], function (exports, Ember, legacyIntlGet, IntlGet) {

  'use strict';

  /**
   * Copyright 2015, Yahoo! Inc.
   * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
   */

  var Helper = IntlGet['default'];

  if (!Helper) {
    Helper = legacyIntlGet['default'];
  }

  exports['default'] = Helper;

});
define('frontend-cp/helpers/is-array', ['exports', 'ember', 'ember-truth-helpers/helpers/is-array'], function (exports, Ember, isArrayHelper) {

	'use strict';

	exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(isArrayHelper['default']);

	exports.isArrayHelper = isArrayHelper['default'];

});
define('frontend-cp/helpers/is-last-item-in-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (item, list) {
    var listLength = list.get('length');
    if (listLength === 0) {
      return false;
    }

    return list.objectAt(listLength - 1) === item;
  });

});
define('frontend-cp/helpers/ko-concat', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    // remove context from end of arguments
    return args.slice(0, -1).join('');
  });

});
define('frontend-cp/helpers/ko-contextual-helper', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return args[0].apply(args[1], args.slice(2, -1));
  });

});
define('frontend-cp/helpers/ko-embolden', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

  exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2);

    var fullString = _ref2[0];
    var emboldenString = _ref2[1];

    var regExp = new RegExp(emboldenString, 'gi');
    return Ember['default'].String.htmlSafe(fullString.replace(regExp, '<b>$&</b>'));
  });

});
define('frontend-cp/helpers/ko-helper', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  var _this = undefined;

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return args[0].apply(_this, args.slice(1, -1));
  });

});
define('frontend-cp/helpers/ko-slasherizer', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports.slasherizer = slasherizer;

  function slasherizer(params /*, hash*/) {
    return params[0].split(',').join(' / ');
  }

  exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(slasherizer);

});
define('frontend-cp/helpers/not', ['exports', 'ember', 'ember-truth-helpers/helpers/not'], function (exports, Ember, notHelper) {

	'use strict';

	exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(notHelper['default']);

	exports.notHelper = notHelper['default'];

});
define('frontend-cp/helpers/or', ['exports', 'ember', 'ember-truth-helpers/helpers/or'], function (exports, Ember, orHelper) {

	'use strict';

	exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(orHelper['default']);

	exports.orHelper = orHelper['default'];

});
define('frontend-cp/initializers/case-field-type', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = {
    name: 'case-field-type',
    after: 'store',

    initialize: function initialize(container) {
      var store = container.lookup('store:main');

      this.fixtures.forEach(function (fixture) {
        store.createRecord('case-field-type', fixture);
      });
    },

    fixtures: [{
      id: 'TEXT',
      nameIntlKey: 'admin.casefields.type.text.name',
      descriptionIntlKey: 'admin.casefields.type.text.description',
      iconFileName: DS['default'].attr('string')
    }, {
      id: 'TEXTAREA',
      nameIntlKey: 'admin.casefields.type.multiline.name',
      descriptionIntlKey: 'admin.casefields.type.multiline.description',
      iconFileName: ''
    }, {
      id: 'CHECKBOX',
      nameIntlKey: 'admin.casefields.type.checkbox.name',
      descriptionIntlKey: 'admin.casefields.type.checkbox.description',
      iconFileName: '',
      isChoiceField: true
    }, {
      id: 'PRIORITY',
      nameIntlKey: 'admin.casefields.type.priority.name',
      iconFileName: '',
      adminEditComponentName: 'ko-admin/case-fields/edit/priorities',
      isSystem: true
    }, {
      id: 'SUBJECT',
      nameIntlKey: 'admin.casefields.type.subject.name',
      iconFileName: '',
      isSystem: true
    }, {
      id: 'MESSAGE',
      nameIntlKey: 'admin.casefields.type.message.name',
      iconFileName: '',
      isSystem: true
    }, {
      id: 'STATUS',
      nameIntlKey: 'admin.casefields.type.status.name',
      iconFileName: '',
      isSystem: true
    }, {
      id: 'TYPE',
      nameIntlKey: 'admin.casefields.type.type.name',
      iconFileName: '',
      isSystem: true
    }, {
      id: 'ASSIGNEE',
      nameIntlKey: 'admin.casefields.type.assignee.name',
      iconFileName: '',
      isSystem: true
    }, {
      id: 'TEAM',
      nameIntlKey: 'admin.casefields.type.team.name',
      iconFileName: '',
      isSystem: true
    }, {
      id: 'REGEX',
      nameIntlKey: 'admin.casefields.type.regex.name',
      descriptionIntlKey: 'admin.casefields.type.regex.description',
      iconFileName: '',
      adminEditComponentName: 'ko-admin/case-fields/edit/regex'
    }, {
      id: 'DATE',
      nameIntlKey: 'admin.casefields.type.date.name',
      descriptionIntlKey: 'admin.casefields.type.date.description',
      iconFileName: ''
    }, {
      id: 'YESNO',
      nameIntlKey: 'admin.casefields.type.yesno.name',
      descriptionIntlKey: 'admin.casefields.type.yesno.description',
      iconFileName: ''
    }, {
      id: 'FILE',
      nameIntlKey: 'admin.casefields.type.file.name',
      descriptionIntlKey: 'admin.casefields.type.file.description',
      iconFileName: ''
    }, {
      id: 'DECIMAL',
      nameIntlKey: 'admin.casefields.type.decimal.name',
      descriptionIntlKey: 'admin.casefields.type.decimal.description',
      iconFileName: ''
    }, {
      id: 'NUMERIC',
      nameIntlKey: 'admin.casefields.type.numeric.name',
      descriptionIntlKey: 'admin.casefields.type.numeric.description',
      iconFileName: ''
    }, {
      id: 'DROPDOWN',
      nameIntlKey: 'admin.casefields.type.dropdown.name',
      descriptionIntlKey: 'admin.casefields.type.dropdown.description',
      iconFileName: '',
      isChoiceField: true
    }, {
      id: 'RADIO',
      nameIntlKey: 'admin.casefields.type.radio.name',
      descriptionIntlKey: 'admin.casefields.type.radio.description',
      iconFileName: '',
      isChoiceField: true
    }, {
      id: 'SELECT',
      nameIntlKey: 'admin.casefields.type.select.name',
      descriptionIntlKey: 'admin.casefields.type.select.description',
      iconFileName: '',
      isChoiceField: true
    }]
  };

});
define('frontend-cp/initializers/ember-cli-mirage', ['exports', 'frontend-cp/config/environment', 'frontend-cp/mirage/config', 'ember-cli-mirage/server', 'ember-cli-mirage/utils/read-modules'], function (exports, ENV, config, Server, readModules) {

  'use strict';

  function hasModulesOfType(modulesMap, type) {
    var modulesOfType = modulesMap[type] || {};

    return _.keys(modulesOfType).length > 0;
  }

  exports['default'] = {
    name: 'ember-cli-mirage',
    initialize: function initialize(container, application) {
      var env = ENV['default'].environment;

      if (_shouldUseMirage(env, ENV['default']['ember-cli-mirage'])) {
        var modulesMap = readModules['default'](ENV['default'].modulePrefix);
        var hasFactories = hasModulesOfType(modulesMap, 'factories');
        var hasDefaultScenario = modulesMap['scenarios'].hasOwnProperty('default');
        var hasModels = hasModulesOfType(modulesMap, 'models');

        var server = new Server['default']({
          environment: env,
          modelsMap: hasModels ? modulesMap['models'] : null
        });

        server.loadConfig(config['default']);

        if (env === 'test' && config.testConfig) {
          server.loadConfig(config.testConfig);
        }

        if (env === 'test' && hasFactories) {
          server.loadFactories(modulesMap['factories']);
        } else if (env !== 'test' && hasDefaultScenario && hasFactories) {
          server.loadFactories(modulesMap['factories']);
          modulesMap['scenarios']['default'](server);
        } else {
          server.db.loadData(modulesMap['fixtures']);
        }
      }
    }
  };

  function _shouldUseMirage(env, addonConfig) {
    var userDeclaredEnabled = typeof addonConfig.enabled !== 'undefined';
    var defaultEnabled = _defaultEnabled(env, addonConfig);

    return userDeclaredEnabled ? addonConfig.enabled : defaultEnabled;
  }

  /*
    Returns a boolean specifying the default behavior for whether
    to initialize Mirage.
  */
  function _defaultEnabled(env, addonConfig) {
    var usingInDev = env === 'development' && !addonConfig.usingProxy;
    var usingInTest = env === 'test';

    return usingInDev || usingInTest;
  }

});
define('frontend-cp/initializers/ember-intl', ['exports', 'ember', 'ember-intl/helpers/format-date', 'ember-intl/helpers/format-time', 'ember-intl/helpers/format-relative', 'ember-intl/helpers/format-number', 'ember-intl/helpers/format-html-message', 'ember-intl/helpers/format-message', 'ember-intl/utils/register-helper', 'frontend-cp/instance-initializers/ember-intl'], function (exports, Ember, FormatDate, FormatTime, FormatRelative, FormatNumber, FormatHtmlMessage, FormatMessage, registerHelper, ember_intl) {

    'use strict';

    exports.initializer = initializer;

    function initializer(registry) {
        var app = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

        registry.optionsForType('formats', {
            singleton: true,
            instantiate: false
        });

        registerHelper['default']('format-date', FormatDate['default'], registry);
        registerHelper['default']('format-time', FormatTime['default'], registry);
        registerHelper['default']('format-relative', FormatRelative['default'], registry);
        registerHelper['default']('format-number', FormatNumber['default'], registry);
        registerHelper['default']('format-html-message', FormatHtmlMessage['default'], registry);
        registerHelper['default']('format-message', FormatMessage['default'], registry);

        if (app.instanceInitializer) {
            return;
        }

        // for backwards compatability < 1.12
        ember_intl.instanceInitializer({
            container: registry
        });
    }

    exports['default'] = {
        name: 'ember-intl',
        initialize: initializer
    };

});
define('frontend-cp/initializers/ember-moment', ['exports', 'ember-moment/helpers/moment', 'ember-moment/helpers/ago', 'ember-moment/helpers/duration', 'ember'], function (exports, moment, ago, duration, Ember) {

  'use strict';

  var initialize = function initialize() /* container, app */{
    var registerHelper;

    if (Ember['default'].HTMLBars) {
      registerHelper = function (helperName, fn) {
        Ember['default'].HTMLBars._registerHelper(helperName, Ember['default'].HTMLBars.makeBoundHelper(fn));
      };
    } else {
      registerHelper = Ember['default'].Handlebars.helper;
    };

    registerHelper('moment', moment['default']);
    registerHelper('ago', ago['default']);
    registerHelper('duration', duration['default']);
  };

  exports['default'] = {
    name: 'ember-moment',

    initialize: initialize
  };

  exports.initialize = initialize;

});
define('frontend-cp/initializers/export-application-global', ['exports', 'ember', 'frontend-cp/config/environment'], function (exports, Ember, config) {

  'use strict';

  exports.initialize = initialize;

  function initialize(container, application) {
    if (config['default'].exportApplicationGlobal !== false) {
      var value = config['default'].exportApplicationGlobal;
      var globalName;

      if (typeof value === 'string') {
        globalName = value;
      } else {
        globalName = Ember['default'].String.classify(config['default'].modulePrefix);
      }

      if (!window[globalName]) {
        window[globalName] = application;

        application.reopen({
          willDestroy: function willDestroy() {
            this._super.apply(this, arguments);
            delete window[globalName];
          }
        });
      }
    }
  }

  ;

  exports['default'] = {
    name: 'export-application-global',

    initialize: initialize
  };

});
define('frontend-cp/initializers/get-helper', ['exports', 'ember', 'ember-get-helper/utils/register-helper', 'ember-get-helper/helpers/get', 'ember-get-helper/helpers/get-glimmer'], function (exports, Em, register_helper, getHelper, getHelperGlimmer) {

  'use strict';

  exports.initialize = initialize;

  function initialize() /* container, application */{
    if (Em['default'].Helper) {
      register_helper.registerHelper('get', getHelperGlimmer['default']);
    } else {
      register_helper.registerHelper('get', getHelper['default']);
    }
  }

  exports['default'] = {
    name: 'get-helper',
    initialize: initialize
  };

});
define('frontend-cp/initializers/intl', ['exports', 'moment', 'ember-intl/models/translation'], function (exports, moment, TranslationModel) {

  'use strict';

  TranslationModel['default'].reopen({
    //TODO: talk to Kirill about how and why the frontendcp.universal is managed, if at all?
    //ANSWER: frontendcp (now frontend) is novo's app name, universal (api) is novo's portal. they are static and will rarely change.
    getValue: function getValue(key) {
      return this['frontend.api.' + key];
    }
  });

  exports['default'] = {
    name: 'intl',
    after: 'store',

    initialize: function initialize(container, application) {
      application.deferReadiness();

      var intl = container.lookup('service:intl');
      var store = container.lookup('store:main');
      intl.set('adapterType', 'intl');

      var localeId = window.navigator.language ? window.navigator.language.toLowerCase() : 'en-us';

      return store.find('locale', localeId)['catch'](function () {
        return store.find('locale', 'en-us');
      }).then(function (locale) {
        intl.createLocale(locale.id, {});
        intl.set('locale', locale.id);
        moment['default'].locale(locale.id);

        var translationObj = {};
        return locale.get('strings').then(function (strings) {
          strings.forEach(function (string) {
            translationObj[string.id] = string.get('value');
          });
          intl.addMessages(locale.id, translationObj);
          application.advanceReadiness();
        });
      });
    }
  };

});
define('frontend-cp/initializers/pusher', ['exports'], function (exports) {

  'use strict';

  exports.initialize = initialize;

  function initialize(container) {
    // Pusher has maxed out it's connections. Uncomment when we
    // are ready to move to the Kayako Service

    // let pusher = container.lookup('service:pusher');
    // pusher.initialize();
  }

});
define('frontend-cp/initializers/tabs', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports.initialize = initialize;

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

  function initialize(container, application) {
    Ember['default'].Route.reopen({
      /**
       * Whether the route should open in its own tab
       * @type {boolean}
       */
      isTabbedRoute: false,

      /**
       * Select/create a tab whenever this route becomes active
       */
      updateTabSelectionOnActivate: Ember['default'].on('activate', function () {
        var activeTransition = this.router.router.activeTransition;
        this.updateTabSelection(activeTransition);
      }),

      /*
       * Select/create a tab whenever this route's model changes
       */
      resetController: function resetController(controller, isExiting, transition) {
        this._super(controller, isExiting, transition);
        var isTransitioningWithinRoute = !isExiting;
        if (isTransitioningWithinRoute) {
          this.updateTabSelection(transition);
        }
      },

      updateTabSelection: function updateTabSelection(transition) {
        // We don't need to select a tab for intermediate routes / login / etc
        var route = this;
        var shouldIgnoreRoute = shouldSkipSelectingTabForRoute(route, transition);
        if (shouldIgnoreRoute) {
          return;
        }

        // Get/create the corresponding tab for the route, and select it
        var tabsService = this.container.lookup('service:tabs');
        var sessionController = this.controllerFor('session');
        var tab = getTabForRoute(route, transition, tabsService, sessionController);
        sessionController.set('selectedTab', tab);

        // Store the tab model on the route to allow setting tab label etc.
        if (route.get('isTabbedRoute')) {
          route.set('tab', tab);
        }

        function shouldSkipSelectingTabForRoute(route, transition) {
          // We only need to create tabs for pages within the logged-in area
          var isSessionRoute = route.get('routeName').split('.')[0] === 'session';
          if (!isSessionRoute) {
            return true;
          }

          // We always need to get/create a tab for tabbed routes, even if we're
          // ultimately navigating to one of their child routes
          var isTabbedRoute = route.get('isTabbedRoute');
          if (isTabbedRoute) {
            return false;
          }

          // If this isn't the final destination, don't bother creating/selecting a tab
          var isIntermediateRoute = route.get('routeName') !== transition.targetName;
          if (isIntermediateRoute) {
            return true;
          }

          // We're at the destination route, so we want a tab
          return false;
        }
      }
    });

    /**
     * Get/create a tab for a route
     * @param {Route} route The route to create a tab for
     * @param {Transition} transition Transition containing dynamic route segments
     * @param {TabsService} tabsService Tabs service used to get/create the tab
     * @param {SessionController} sessionController Controller for the view that contains the tabs
     * @return {Tab} Tab model for the specified route
     */
    function getTabForRoute(route, transition, tabsService, sessionController) {
      var targetUrl = getTransitionTargetUrl(transition);
      var baseUrl = getRouteUrl(route, transition);
      var isTabbedRoute = route.get('isTabbedRoute');
      var tab = sessionController.getTabForUrl(isTabbedRoute, targetUrl, baseUrl);
      return tab;

      /**
       * Retrieve the URL for a route that includes dynamic segments
       * @param {Route} route Route whose params we want to fetch
       * @param {Transition} transition Transition that involves the specified route
       * @param {TabsService} tabsService Tabs service used to get/create the tab
       * @return {string} Array of Key/value object containing dynamic route segments, or models
       */
      function getRouteUrl(route, transition, tabsService) {
        var _transition$router;

        var routeName = route.routeName;

        // `transition.handlerInfos` is an array of metadata objects, one for each
        // of the routes in the transition hierarchy. (e.g. "app", "app.section",
        // "app.section.subsection").
        var routeHandlers = transition.handlerInfos;

        // Get the dynamic route segment context objects for each of these levels
        var routeContexts = routeHandlers.map(function (handlerInfo) {
          return getHandlerContext(handlerInfo);
        });

        // Filter out the context objects for routes with no dynamic segments
        var dynamicRouteContexts = routeContexts.filter(function (context) {
          return context !== null;
        });

        // Return the route URL
        return (_transition$router = transition.router).generate.apply(_transition$router, [routeName].concat(_toConsumableArray(dynamicRouteContexts)));

        /**
         * Retrieve the context object from a route handler info object
         * @param {Object} handlerInfo Ember route handler info object
         * @return {Object} Params object or model for dynamic routes, `null` for static routes
         */
        function getHandlerContext(handlerInfo) {
          // If the transition was initiated by navigating to a URL,
          // or route name + id, there will be a `params` object containing any
          // dynamic route segments
          if (handlerInfo.params) {
            var hasDynamicSegments = Object.keys(handlerInfo.params).length > 0;
            return hasDynamicSegments ? handlerInfo.params : null;
          }

          // If the transition was initiated by navigating to a route name + model,
          // there will be a `context` object containing the model that corresponds
          // to the dynamic route segment
          if (handlerInfo.context) {
            return handlerInfo.context;
          }

          // Looks like the route doesn't specify any dynamic segments
          return null;
        }
      }

      /**
       * Serialize the transition into a target URL
       * @param {Transition} transition Transition to serialize
       * @return {string} URL path for the transition's target
       */
      function getTransitionTargetUrl(transition) {
        var _transition$router2;

        // If the transition was initiated by navigating to the URL, we already
        // have the target URL so we can just return that
        if (transition.intent.url) {
          return transition.intent.url;
        }

        // Otherwise generate a URL based on the transition's target
        var routeName = transition.intent.name;
        var dynamicRouteContexts = transition.intent.contexts;
        return (_transition$router2 = transition.router).generate.apply(_transition$router2, [routeName].concat(_toConsumableArray(dynamicRouteContexts)));
      }
    }
  }

  exports['default'] = {
    name: 'tabbed-routes',
    initialize: initialize
  };

});
define('frontend-cp/initializers/truth-helpers', ['exports', 'ember-truth-helpers/utils/register-helper', 'ember-truth-helpers/helpers/and', 'ember-truth-helpers/helpers/or', 'ember-truth-helpers/helpers/equal', 'ember-truth-helpers/helpers/not', 'ember-truth-helpers/helpers/is-array'], function (exports, register_helper, and, or, equal, not, is_array) {

  'use strict';

  exports.initialize = initialize;

  function initialize() /* container, application */{
    register_helper.registerHelper('and', and.andHelper);
    register_helper.registerHelper('or', or.orHelper);
    register_helper.registerHelper('eq', equal.equalHelper);
    register_helper.registerHelper('not', not.notHelper);
    register_helper.registerHelper('is-array', is_array.isArrayHelper);
  }

  exports['default'] = {
    name: 'truth-helpers',
    initialize: initialize
  };

});
define('frontend-cp/instance-initializers/app-version', ['exports', 'frontend-cp/config/environment', 'ember'], function (exports, config, Ember) {

  'use strict';

  var classify = Ember['default'].String.classify;
  var registered = false;

  exports['default'] = {
    name: 'App Version',
    initialize: function initialize(application) {
      if (!registered) {
        var appName = classify(application.toString());
        Ember['default'].libraries.register(appName, config['default'].APP.version);
        registered = true;
      }
    }
  };

});
define('frontend-cp/instance-initializers/ember-intl', ['exports', 'frontend-cp/config/environment', 'ember-intl/utils/add-locale-data'], function (exports, ENV, addLocaleData) {

    'use strict';

    exports.instanceInitializer = instanceInitializer;

    function filterBy(env, type) {
        return Object.keys(requirejs._eak_seen).filter(function (key) {
            return key.indexOf(env.modulePrefix + '\/' + type + '\/') === 0;
        });
    }

    function instanceInitializer(instance) {
        var service = instance.container.lookup('service:intl');

        filterBy(ENV['default'], 'cldrs').forEach(function (key) {
            addLocaleData['default'](require(key, null, null, true)['default']);
        });

        filterBy(ENV['default'], 'translations').forEach(function (key) {
            var localeSplit = key.split('\/');
            var locale = localeSplit[localeSplit.length - 1];
            service.createLocale(locale, require(key, null, null, true)['default']);
        });
    }

    exports['default'] = {
        name: 'ember-intl',
        initialize: instanceInitializer
    };

});
define('frontend-cp/lib/keycodes', ['exports'], function (exports) {

	'use strict';

	var backspace = 8;
	var tab = 9;
	var enter = 13;
	var shift = 16;
	var ctrl = 17;
	var alt = 18;
	var pause = 19;
	var capsLock = 20;
	var escape = 27;
	var space = 32;
	var pageUp = 33;
	var pageDown = 34;
	var end = 35;
	var home = 36;
	var left = 37;
	var up = 38;
	var right = 39;
	var down = 40;
	var insert = 45;
	var del = 46;
	var zero = 48;
	var one = 49;
	var two = 50;
	var three = 51;
	var four = 52;
	var five = 53;
	var six = 54;
	var seven = 55;
	var eight = 56;
	var nine = 57;
	var a = 65;
	var b = 66;
	var c = 67;
	var d = 68;
	var e = 69;
	var f = 70;
	var g = 71;
	var h = 72;
	var i = 73;
	var j = 74;
	var k = 75;
	var l = 76;
	var m = 77;
	var n = 78;
	var o = 79;
	var p = 80;
	var q = 81;
	var r = 82;
	var s = 83;
	var t = 84;
	var u = 85;
	var v = 86;
	var w = 87;
	var x = 88;
	var y = 89;
	var z = 90;
	var leftWindowKey = 91;
	var rightWindowKey = 92;
	var selectKey = 93;
	var numpad0 = 96;
	var numpad1 = 97;
	var numpad2 = 98;
	var numpad3 = 99;
	var numpad4 = 100;
	var numpad5 = 101;
	var numpad6 = 102;
	var numpad7 = 103;
	var numpad8 = 104;
	var numpad9 = 105;
	var multiply = 106;
	var add = 107;
	var subtract = 109;
	var decimalPoint = 110;
	var divide = 111;
	var f1 = 112;
	var f2 = 113;
	var f3 = 114;
	var f4 = 115;
	var f5 = 116;
	var f6 = 117;
	var f7 = 118;
	var f8 = 119;
	var f9 = 120;
	var f10 = 121;
	var f11 = 122;
	var f12 = 123;
	var numLock = 144;
	var scrollLock = 145;
	var semiColon = 186;
	var equalSign = 187;
	var comma = 188;
	var dash = 189;
	var period = 190;
	var forwardSlash = 191;
	var graveAccent = 192;
	var openBracket = 219;
	var backSlash = 220;
	var closeBracket = 221;
	var singleQuote = 222;

	exports.backspace = backspace;
	exports.tab = tab;
	exports.enter = enter;
	exports.shift = shift;
	exports.ctrl = ctrl;
	exports.alt = alt;
	exports.pause = pause;
	exports.capsLock = capsLock;
	exports.escape = escape;
	exports.space = space;
	exports.pageUp = pageUp;
	exports.pageDown = pageDown;
	exports.end = end;
	exports.home = home;
	exports.left = left;
	exports.up = up;
	exports.right = right;
	exports.down = down;
	exports.insert = insert;
	exports.del = del;
	exports.zero = zero;
	exports.one = one;
	exports.two = two;
	exports.three = three;
	exports.four = four;
	exports.five = five;
	exports.six = six;
	exports.seven = seven;
	exports.eight = eight;
	exports.nine = nine;
	exports.a = a;
	exports.b = b;
	exports.c = c;
	exports.d = d;
	exports.e = e;
	exports.f = f;
	exports.g = g;
	exports.h = h;
	exports.i = i;
	exports.j = j;
	exports.k = k;
	exports.l = l;
	exports.m = m;
	exports.n = n;
	exports.o = o;
	exports.p = p;
	exports.q = q;
	exports.r = r;
	exports.s = s;
	exports.t = t;
	exports.u = u;
	exports.v = v;
	exports.w = w;
	exports.x = x;
	exports.y = y;
	exports.z = z;
	exports.leftWindowKey = leftWindowKey;
	exports.rightWindowKey = rightWindowKey;
	exports.selectKey = selectKey;
	exports.numpad0 = numpad0;
	exports.numpad1 = numpad1;
	exports.numpad2 = numpad2;
	exports.numpad3 = numpad3;
	exports.numpad4 = numpad4;
	exports.numpad5 = numpad5;
	exports.numpad6 = numpad6;
	exports.numpad7 = numpad7;
	exports.numpad8 = numpad8;
	exports.numpad9 = numpad9;
	exports.multiply = multiply;
	exports.add = add;
	exports.subtract = subtract;
	exports.decimalPoint = decimalPoint;
	exports.divide = divide;
	exports.f1 = f1;
	exports.f2 = f2;
	exports.f3 = f3;
	exports.f4 = f4;
	exports.f5 = f5;
	exports.f6 = f6;
	exports.f7 = f7;
	exports.f8 = f8;
	exports.f9 = f9;
	exports.f10 = f10;
	exports.f11 = f11;
	exports.f12 = f12;
	exports.numLock = numLock;
	exports.scrollLock = scrollLock;
	exports.semiColon = semiColon;
	exports.equalSign = equalSign;
	exports.comma = comma;
	exports.dash = dash;
	exports.period = period;
	exports.forwardSlash = forwardSlash;
	exports.graveAccent = graveAccent;
	exports.openBracket = openBracket;
	exports.backSlash = backSlash;
	exports.closeBracket = closeBracket;
	exports.singleQuote = singleQuote;

});
define('frontend-cp/loading/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 1,
              "column": 38
            }
          },
          "moduleName": "frontend-cp/loading/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["inline","ko-loader",[],["large",true],["loc",[null,[1,14],[1,38]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 52
          }
        },
        "moduleName": "frontend-cp/loading/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-center",[],[],0,null,["loc",[null,[1,0],[1,52]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/login/controller', ['exports', 'ember', 'frontend-cp/config/environment', 'frontend-cp/mixins/simple-state'], function (exports, Ember, config, SimpleStateMixin) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend(SimpleStateMixin['default'], {

    sessionService: Ember['default'].inject.service('session'),
    newPassword1: '',
    newPassword2: '',
    forgotPasswordMessage: '',
    stepToken: null,
    fieldErrors: [],
    avatarBackground: null,
    validAvatar: false,
    isContentDown: false,
    prevLoginState: null,
    topFormSet: null,
    bottomFormSet: null,
    isAnimatingContent: null,
    transitionOnLogin: null,

    init: function init() {
      this.setState('login.password.input');
      this.set('prevLoginState', this.get('currentState'));
      this._super.apply(this);
    },

    stateMap: {
      login: {
        password: {
          input: {},
          loading: {},
          confirmed: {},
          error: {}
        },
        otp: {
          input: {},
          loading: {},
          confirmed: {},
          error: {}
        },
        resetPassword: {
          input: {},
          loading: {},
          confirmed: {},
          error: {}
        }
      },
      forgotPassword: {
        input: {},
        loading: {},
        confirmed: {},
        error: {}
      }
    },

    // Observers

    flipAvatar: (function () {
      return this.get('validAvatar') && this.get('avatarBackground');
    }).property('validAvatar', 'avatarBackground'),

    emailValidDidChange: (function () {
      if (this.get('emailValid')) {
        this.requestAvatar(this.get('model.email'));
      }
    }).observes('emailValid').on('render'),

    sessionDidClear: (function () {
      if (this.get('sessionService.session.id') === null) {
        this.setState('login.password.input');
      }
    }).observes('sessionService.session.id').on('init'),

    currentStateDidChange: (function () {
      var _this = this;

      var currentState = this.get('currentState');

      // Ignore anything outside the login root state
      if (!this.isInState('login', currentState)) {
        this.set('prevLoginState', currentState);
        return;
      }

      var stateMeta = {
        'password': {
          order: 0,
          component: 'ko-login-password'
        },
        'otp': {
          order: 1,
          component: 'ko-login-otp'
        },
        'resetPassword': {
          order: 2,
          component: 'ko-login-reset'
        }
      };

      var prevState = this.get('prevLoginState');
      var currentSubState = this.getStateAtLevel(1, currentState);
      var prevSubState = this.getStateAtLevel(1, prevState);
      var currentStateMeta = stateMeta[currentSubState];
      var prevStateMeta = stateMeta[prevSubState];
      var isContentDown = null;

      // Only items within login level 0 state should animate up / down
      if (this.getStateAtLevel(0, prevState) === 'login') {

        /**
         * Determine the direction of movement depending on 'order' of item
         * Eg. moving from password to otp will move down,
         * otp to resetPassword will move down again
         * resetPassword to password will move up (once, we don't want to go 'past' otp)
         */

        // This should explicitly do nothing if the orders are equal
        if (currentStateMeta.order > prevStateMeta.order) {
          isContentDown = true;
        } else if (currentStateMeta.order < prevStateMeta.order) {
          isContentDown = false;
        }

        // Place content area in pre-animation state
        Ember['default'].run(function () {
          // Choose where to place the prev and next components
          _this.setProperties({
            topFormSet: isContentDown ? prevStateMeta.component : currentStateMeta.component,
            bottomFormSet: isContentDown ? currentStateMeta.component : prevStateMeta.component
          });

          // Switch off animation
          _this.set('isAnimatingContent', false);

          if (currentSubState !== prevSubState) {
            // Move content to show the previous component
            _this.set('isContentDown', !isContentDown);
          }
        });

        // In next run loop run the animation
        Ember['default'].run.next(function () {
          // Switch on animation
          _this.set('isAnimatingContent', true);
          _this.set('isContentDown', isContentDown);
        });
      }

      // Store prevState for comparison
      this.set('prevLoginState', currentState);
    }).observes('currentState').on('init'),

    // Computed Properties

    isLogin: (function () {
      var currentState = this.get('currentState');
      var prevState = this.get('prevLoginState');
      var isInLogin = this.isInState('login', currentState);
      var wasInLogin = this.isInState('login', prevState);
      if (isInLogin !== wasInLogin) {
        this.clearErrors();
      }
      return isInLogin;
    }).property('currentState', 'prevLoginState'),

    isLoading: (function () {
      return this.endsWithSubState('loading', this.get('currentState'));
    }).property('currentState'),

    isOtp: (function () {
      return this.isInState('login.otp', this.get('currentState'));
    }).property('currentState'),

    isPassword: (function () {
      return this.isInState('login.password', this.get('currentState'));
    }).property('currentState'),

    isResetPassword: (function () {
      return this.isInState('login.resetPassword', this.get('currentState'));
    }).property('currentState'),

    isError: (function () {
      return this.endsWithSubState('error', this.get('currentState'));
    }).property('currentState'),

    isForgotPasswordEmailSent: (function () {
      return this.isInState('forgotPassword.confirmed', this.get('currentState'));
    }).property('currentState'),

    emailValid: (function () {
      var emailRegex = /\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b/i;
      return !!this.get('model.email').match(emailRegex);
    }).property('model.email'),

    passwordValid: (function () {
      return this.get('model.password').length > 0;
    }).property('model.password'),

    canAttemptLogin: (function () {
      return this.get('emailValid') && this.get('passwordValid');
    }).property('emailValid', 'passwordValid'),

    loginButtonDisabled: (function () {
      return !this.get('canAttemptLogin') || this.get('isLoading') || !this.get('newPasswordValid') && this.get('isResetPassword');
    }).property('canAttemptLogin', 'isLoading', 'newPasswordValid', 'isResetPassword'),

    newPasswordValid: (function () {
      var password1 = this.get('newPassword1');
      var password2 = this.get('newPassword2');
      return password1 === password2 && !!password1 && password1.length > 7;
    }).property('newPassword1', 'newPassword2'),

    hasErrorMessages: (function () {
      return this.get('fieldErrors').length > 0;
    }).property('fieldErrors.@each'),

    errorMessages: (function () {
      return this.get('fieldErrors').map(function (error) {
        return error.message;
      });
    }).property('fieldErrors.@each'),

    // Methods

    setErrors: function setErrors(errors) {
      this.set('fieldErrors', new Ember['default'].A(errors));
    },

    clearErrors: function clearErrors() {
      this.set('fieldErrors', []);
    },

    authRequest: function authRequest(endpoint, params) {
      return new Ember['default'].RSVP.Promise(function (resolve, reject) {
        Ember['default'].$.ajax({
          type: 'POST',
          url: endpoint,
          contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
          dataType: 'json',
          data: Ember['default'].$.param(params),
          success: function success(data) {
            resolve(data);
          },
          error: function error(xhr) {
            reject(xhr.responseText);
          }
        });
      });
    },

    requestAvatar: function requestAvatar(email) {
      var _this2 = this;

      Ember['default'].$.ajax({
        type: 'POST',
        url: '/admin/index.php?/Base/Avatar/JSON/0/200',
        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
        dataType: 'json',
        data: Ember['default'].$.param({ email: email }),
        success: function success(response) {
          /**
           * data.is_user dictates whether or not the returned image was gravatars
           * default image or not, if it was, we do not want to flip, treat it as a failed
           * call
           */

          var valid = !!response.data.is_user;

          _this2.set('validAvatar', valid);

          if (valid) {
            _this2.set('avatarBackground', response.data.data);
          }
        },
        error: function error() {
          // TODO
        }
      });
    },

    login: function login() {
      var _this3 = this;

      this.setState('login.password.loading');
      this.get('sessionService').requestSession(this.get('model.email'), this.get('model.password')).then(function () {
        // No additional info required, log in.
        _this3.setState('login.password.confirmed');

        var transitionOnLogin = _this3.get('transitionOnLogin');
        if (transitionOnLogin) {
          _this3.set('transitionOnLogin', null);
          transitionOnLogin.retry();
        } else {
          _this3.transitionToRoute('session');
        }
      }, function (response) {
        var data = response.responseJSON;
        if (data.otp_required) {
          // User needs to enter one time password for two factor authentication
          _this3.set('stepToken', data.step_token);
          _this3.setState('login.otp.input');
        } else if (data.password_expired) {
          // User needs to enter a new password to continue
          _this3.set('stepToken', data.step_token);
          _this3.setState('login.resetPassword.input');
        } else {
          _this3.setState('login.password.error');
          _this3.setErrors(data.notifications);
        }
      });
    },

    resetPassword: function resetPassword() {
      var _this4 = this;

      this.setState('login.resetPassword.loading');
      this.setErrors([]);
      this.authRequest('ResetPassword', {
        newpassword: this.get('newPassword1'),
        hash: this.get('steptoken')
      }).then(function (response) {
        if (response.data.session) {
          _this4.setState('login.resetPassword.confirmed');
          _this4.set('resetPasswordMessage', response.notifications.success[0]);
          _this4.get('sessionService').setSessionId(response.data.session);
          _this4.set('newPassword1', null);
          _this4.set('newPassword2', null);
          _this4.transitionToRoute('session');
        } else {
          _this4.setState('login.resetPassword.error');
          _this4.setErrors({ message: 'Session missing' });
        }
      }, function (response) {
        _this4.setState('login.resetPassword.error');
        _this4.setErrors(JSON.parse(response).errors);
      });
    },

    submitOtp: function submitOtp() {
      var _this5 = this;

      this.setState('login.otp.loading');
      this.setErrors([]);
      this.authRequest('OTP', {
        otp: this.get('otp'),
        token: this.get('steptoken')
      }).then(function (response) {
        if (response.data.session) {
          _this5.setState('login.otp.confirmed');
          _this5.get('sessionService').setSessionId(response.data.session);
          _this5.set('otp', null);
          var transitionOnLogin = _this5.get('transitionOnLogin');
          if (transitionOnLogin) {
            _this5.set('transitionOnLogin', null);
            transitionOnLogin.retry();
          } else {
            _this5.transitionToRoute('session');
          }
        } else {
          _this5.setState('login.otp.error');
          _this5.setErrors([{ message: 'Session missing' }]);
        }
      }, function (response) {
        _this5.setState('login.otp.error');
        _this5.setErrors(JSON.parse(response).errors);
      });
    },

    /**
     * Need to SafeString all bound style attributes
     */

    loginFrontImageStyle: (function () {
      return ('background-image: url(' + config['default'].assetRoot + '\'/images/user/avatar.png\');').htmlSafe();
    }).property(),

    loginBackImageStyle: (function () {
      if (this.get('avatarBackground')) {
        return ('background-image: url(' + config['default'].assetRoot + '\'" + this.get(\'avatarBackground\') + "\');').htmlSafe();
      } else {
        return '';
      }
    }).property('avatarBackground'),

    actions: {
      login: function login() {
        this.setErrors([]);

        if (!this.isInState('login', this.get('currentState'))) {
          return;
        }

        var funcMap = {
          password: this.login,
          resetPassword: this.resetPassword,
          otp: this.submitOtp
        };

        funcMap[this.getStateAtLevel(1)].call(this);
      },

      gotoForgotPassword: function gotoForgotPassword() {
        this.setState('forgotPassword.input');
      },

      gotoLogin: function gotoLogin() {
        this.setState('login.password.input');
      },

      sendForgotPasswordEmail: function sendForgotPasswordEmail() {
        var _this6 = this;

        this.setState('forgotPassword.loading');
        this.setErrors([]);
        this.authRequest('/api/v1/base/password/reset', { email: this.get('model.email') }).then(function () {
          _this6.setState('forgotPassword.confirmed');
          _this6.set('forgotPasswordMessage', 'An email with a reset link has been sent to your inbox');
        }, function (response) {
          var data = JSON.parse(response);
          _this6.setState('forgotPassword.error');
          _this6.setErrors(data.errors);
        });
      }
    }
  });

});
define('frontend-cp/login/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({
    sessionService: Ember['default'].inject.service('session'),

    beforeModel: function beforeModel() {
      if (this.get('sessionService').isLoggedIn()) {
        this.transitionTo('session');
      }
    },

    model: function model() {
      // FIXME temp
      return Ember['default'].Object.create({
        email: 'test@kayako.com',
        password: 'setup'
      });
    },

    setupController: function setupController(controller, model) {
      controller.set('model', model);
    }
  });

});
define('frontend-cp/login/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 10
            }
          },
          "moduleName": "frontend-cp/login/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","login-form__wrapper");
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("h6");
          dom.setAttribute(el2,"class","t-center t-good");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]),0,0);
          return morphs;
        },
        statements: [
          ["content","forgotPasswordMessage",["loc",[null,[21,40],[21,65]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 12
              },
              "end": {
                "line": 29,
                "column": 12
              }
            },
            "moduleName": "frontend-cp/login/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["content","message",["loc",[null,[28,12],[28,23]]]]
          ],
          locals: ["message"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 31,
              "column": 10
            }
          },
          "moduleName": "frontend-cp/login/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h6");
          dom.setAttribute(el1,"class","t-center t-bad");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          return morphs;
        },
        statements: [
          ["block","each",[["get","errorMessages",["loc",[null,[27,20],[27,33]]]]],[],0,null,["loc",[null,[27,12],[29,21]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 41,
              "column": 10
            }
          },
          "moduleName": "frontend-cp/login/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","login-form__wrapper");
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","login-form__wrapper");
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2,"class","button button--primary u-1/1 u-mt");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3, 1]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          morphs[1] = dom.createAttrMorph(element0, 'disabled');
          morphs[2] = dom.createElementMorph(element0);
          morphs[3] = dom.createMorphAt(element0,0,0);
          return morphs;
        },
        statements: [
          ["inline","input",[],["type","email","value",["subexpr","@mut",[["get","model.email",["loc",[null,[35,39],[35,50]]]]],[],[]],"name","forgot-password","class","login__input login__input--alone","placeholder",["subexpr","format-message",[["subexpr","intl-get",["login.email"],[],["loc",[null,[35,143],[35,167]]]]],[],["loc",[null,[35,127],[35,168]]]],"disabled",["subexpr","@mut",[["get","isLoading",["loc",[null,[35,178],[35,187]]]]],[],[]]],["loc",[null,[35,12],[35,189]]]],
          ["attribute","disabled",["get","isLoading",["loc",[null,[39,110],[39,119]]]]],
          ["element","action",["sendForgotPasswordEmail"],[],["loc",[null,[39,62],[39,98]]]],
          ["inline","format-message",[["subexpr","intl-get",["login.resetpassword"],[],["loc",[null,[39,139],[39,171]]]]],[],["loc",[null,[39,122],[39,173]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child3 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 51,
                "column": 12
              },
              "end": {
                "line": 53,
                "column": 12
              }
            },
            "moduleName": "frontend-cp/login/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n            ");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            return morphs;
          },
          statements: [
            ["content","message",["loc",[null,[52,12],[52,23]]]]
          ],
          locals: ["message"],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 10
            }
          },
          "moduleName": "frontend-cp/login/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("h6");
          dom.setAttribute(el1,"class","t-center t-bad");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
          return morphs;
        },
        statements: [
          ["block","each",[["get","errorMessages",["loc",[null,[51,20],[51,33]]]]],[],0,null,["loc",[null,[51,12],[53,21]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child4 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 58,
              "column": 16
            },
            "end": {
              "line": 60,
              "column": 16
            }
          },
          "moduleName": "frontend-cp/login/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("                ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","component",[["get","topFormSet",["loc",[null,[59,28],[59,38]]]]],["model",["subexpr","@mut",[["get","model",["loc",[null,[59,45],[59,50]]]]],[],[]],"isLoading",["subexpr","@mut",[["get","isLoading",["loc",[null,[59,61],[59,70]]]]],[],[]],"otp",["subexpr","@mut",[["get","top",["loc",[null,[59,75],[59,78]]]]],[],[]],"newPassword1",["subexpr","@mut",[["get","newPassword1",["loc",[null,[59,92],[59,104]]]]],[],[]],"newPassword2",["subexpr","@mut",[["get","newPassword2",["loc",[null,[59,118],[59,130]]]]],[],[]]],["loc",[null,[59,16],[59,132]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child5 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 63,
              "column": 16
            },
            "end": {
              "line": 65,
              "column": 16
            }
          },
          "moduleName": "frontend-cp/login/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("                ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","component",[["get","bottomFormSet",["loc",[null,[64,28],[64,41]]]]],["model",["subexpr","@mut",[["get","model",["loc",[null,[64,48],[64,53]]]]],[],[]],"isLoading",["subexpr","@mut",[["get","isLoading",["loc",[null,[64,64],[64,73]]]]],[],[]],"otp",["subexpr","@mut",[["get","top",["loc",[null,[64,78],[64,81]]]]],[],[]],"newPassword1",["subexpr","@mut",[["get","newPassword1",["loc",[null,[64,95],[64,107]]]]],[],[]],"newPassword2",["subexpr","@mut",[["get","newPassword2",["loc",[null,[64,121],[64,133]]]]],[],[]]],["loc",[null,[64,16],[64,135]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 83,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/login/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","login");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","login__box");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flipper");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","front");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","login__image");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","back");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","login__image");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","login-form");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("form");
        dom.setAttribute(el5,"class","login-form__reset-form");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("h5");
        dom.setAttribute(el6,"class","login__header login__header--reset t-center");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","login-form__wrapper login__actions");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("a");
        dom.setAttribute(el7,"href","javascript:void(0);");
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("form");
        dom.setAttribute(el5,"class","login-form__form");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("h5");
        dom.setAttribute(el6,"class","login__header t-center");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","login-form__mask");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("div");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("div");
        dom.setAttribute(el8,"class","login-form__fields-container-top");
        var el9 = dom.createTextNode("\n");
        dom.appendChild(el8, el9);
        var el9 = dom.createComment("");
        dom.appendChild(el8, el9);
        var el9 = dom.createTextNode("              ");
        dom.appendChild(el8, el9);
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("div");
        dom.setAttribute(el8,"class","login-form__fields-container-bottom");
        var el9 = dom.createTextNode("\n");
        dom.appendChild(el8, el9);
        var el9 = dom.createComment("");
        dom.appendChild(el8, el9);
        var el9 = dom.createTextNode("              ");
        dom.appendChild(el8, el9);
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","login-form__wrapper");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("button");
        dom.setAttribute(el7,"class","button button--primary u-1/1 u-mt");
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6,"class","login-form__wrapper login__actions");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("a");
        dom.setAttribute(el7,"href","javascript:void(0);");
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0, 1]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element2, [1]);
        var element4 = dom.childAt(element3, [1, 1]);
        var element5 = dom.childAt(element3, [3, 1]);
        var element6 = dom.childAt(element1, [3, 1]);
        var element7 = dom.childAt(element6, [1]);
        var element8 = dom.childAt(element7, [9, 1]);
        var element9 = dom.childAt(element6, [3]);
        var element10 = dom.childAt(element9, [5, 1]);
        var element11 = dom.childAt(element9, [7, 1]);
        var element12 = dom.childAt(element9, [9, 1]);
        var morphs = new Array(22);
        morphs[0] = dom.createAttrMorph(element2, 'class');
        morphs[1] = dom.createAttrMorph(element4, 'style');
        morphs[2] = dom.createAttrMorph(element5, 'style');
        morphs[3] = dom.createAttrMorph(element6, 'class');
        morphs[4] = dom.createMorphAt(dom.childAt(element7, [1]),0,0);
        morphs[5] = dom.createMorphAt(element7,3,3);
        morphs[6] = dom.createMorphAt(element7,5,5);
        morphs[7] = dom.createMorphAt(element7,7,7);
        morphs[8] = dom.createAttrMorph(element8, 'class');
        morphs[9] = dom.createElementMorph(element8);
        morphs[10] = dom.createMorphAt(element8,0,0);
        morphs[11] = dom.createMorphAt(dom.childAt(element9, [1]),0,0);
        morphs[12] = dom.createMorphAt(element9,3,3);
        morphs[13] = dom.createAttrMorph(element10, 'class');
        morphs[14] = dom.createMorphAt(dom.childAt(element10, [1]),1,1);
        morphs[15] = dom.createMorphAt(dom.childAt(element10, [3]),1,1);
        morphs[16] = dom.createAttrMorph(element11, 'disabled');
        morphs[17] = dom.createElementMorph(element11);
        morphs[18] = dom.createMorphAt(element11,0,0);
        morphs[19] = dom.createAttrMorph(element12, 'class');
        morphs[20] = dom.createElementMorph(element12);
        morphs[21] = dom.createMorphAt(element12,0,0);
        return morphs;
      },
      statements: [
        ["attribute","class",["concat",["flip-container ",["subexpr","if",[["get","flipAvatar",["loc",[null,[3,36],[3,46]]]],"flip"],[],["loc",[null,[3,31],[3,55]]]]," ",["subexpr","if",[["get","isLoading",["loc",[null,[3,61],[3,70]]]],"a-success"],[],["loc",[null,[3,56],[3,84]]]]," ",["subexpr","if",[["get","isError",["loc",[null,[3,90],[3,97]]]],"a-error"],[],["loc",[null,[3,85],[3,109]]]]]]],
        ["attribute","style",["get","loginFrontImageStyle",["loc",[null,[6,44],[6,64]]]]],
        ["attribute","style",["get","loginBackImageStyle",["loc",[null,[9,44],[9,63]]]]],
        ["attribute","class",["concat",["login-form__container ",["subexpr","if",[["get","isLogin",["loc",[null,[15,45],[15,52]]]],"u-slide"],[],["loc",[null,[15,40],[15,64]]]]]]],
        ["inline","format-message",[["subexpr","intl-get",["login.resetpassword"],[],["loc",[null,[17,83],[17,115]]]]],[],["loc",[null,[17,66],[17,117]]]],
        ["block","if",[["get","isForgotPasswordEmailSent",["loc",[null,[19,16],[19,41]]]]],[],0,null,["loc",[null,[19,10],[23,17]]]],
        ["block","if",[["get","hasErrorMessages",["loc",[null,[25,16],[25,32]]]]],[],1,null,["loc",[null,[25,10],[31,17]]]],
        ["block","if",[["subexpr","not",[["get","isForgotPasswordEmailSent",["loc",[null,[33,21],[33,46]]]]],[],["loc",[null,[33,16],[33,47]]]]],[],2,null,["loc",[null,[33,10],[41,17]]]],
        ["attribute","class",["concat",["js-slide ",["subexpr","if",[["get","isLoading",["loc",[null,[44,63],[44,72]]]],"u-disable-link"],[],["loc",[null,[44,58],[44,91]]]]]]],
        ["element","action",["gotoLogin"],[],["loc",[null,[44,93],[44,115]]]],
        ["inline","format-message",[["subexpr","intl-get",["login.back"],[],["loc",[null,[44,133],[44,156]]]]],[],["loc",[null,[44,116],[44,158]]]],
        ["inline","format-message",[["subexpr","intl-get",["login.welcome"],[],["loc",[null,[48,62],[48,88]]]]],[],["loc",[null,[48,45],[48,90]]]],
        ["block","if",[["get","hasErrorMessages",["loc",[null,[49,16],[49,32]]]]],[],3,null,["loc",[null,[49,10],[54,17]]]],
        ["attribute","class",["concat",["login-form__content ",["subexpr","if",[["get","isAnimatingContent",["loc",[null,[56,49],[56,67]]]],"login-form__content--animate"],[],["loc",[null,[56,44],[56,100]]]]," ",["subexpr","if",[["get","isContentDown",["loc",[null,[56,106],[56,119]]]],"login-form__content-down"],[],["loc",[null,[56,101],[56,148]]]]]]],
        ["block","if",[["get","topFormSet",["loc",[null,[58,22],[58,32]]]]],[],4,null,["loc",[null,[58,16],[60,23]]]],
        ["block","if",[["get","bottomFormSet",["loc",[null,[63,22],[63,35]]]]],[],5,null,["loc",[null,[63,16],[65,23]]]],
        ["attribute","disabled",["get","loginButtonDisabled",["loc",[null,[71,73],[71,92]]]]],
        ["element","action",["login"],[],["loc",[null,[71,95],[71,113]]]],
        ["inline","format-message",[["subexpr","intl-get",["login.login"],[],["loc",[null,[71,131],[71,155]]]]],[],["loc",[null,[71,114],[71,157]]]],
        ["attribute","class",["concat",["js-slide ",["subexpr","if",[["get","isLoading",["loc",[null,[75,63],[75,72]]]],"u-disable-link"],[],["loc",[null,[75,58],[75,91]]]]]]],
        ["element","action",["gotoForgotPassword"],[],["loc",[null,[75,93],[75,124]]]],
        ["inline","format-message",[["subexpr","intl-get",["login.forgot"],[],["loc",[null,[75,142],[75,167]]]]],[],["loc",[null,[75,125],[75,169]]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5]
    };
  }()));

});
define('frontend-cp/mirage/config', ['exports', 'ember-cli-mirage'], function (exports, Mirage) {

  'use strict';

  exports['default'] = function(){this.post('admin/index.php',function(){return {'data':{'redirect':'/Base/Dashboard/','session':'AyUeuWPDD8JC2OA0c8335f8d1a99218c84cd7b97f7fcc2269a2e4274ieu04PQxkr2EAjPp9Z2Y2tJKd'},'errors':[],'notifications':{'error':[],'info':[],'success':[],'warning':[]},'status':200,'timestamp':1432593047};});this.get('/api/v1/cases/fields/1',function(){return {'status':200,'data':{'id':1,'fielduuid':'0939abea-4b49-4a10-8bd1-d44af45b8413','type':'SUBJECT','key':'subject','title':'Subject','is_required_for_agents':true,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Subject','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/1'},'resource':'case_field','session_id':'zM6kSQm1SWZCd33805d8b083b2f49499ce75f15dae6dfcada961SCzbSUOnVhi7hcPvKSOJRof'};});this.get('api/v1/locales/en-us',function(){return {'status':200,'data':{'locale':'en-us','name':'English (United States)','native_name':'English (United States)','region':'US','native_region':'United States','script':'','variant':'','direction':'LTR','is_enabled':true,'created_at':'2015-05-28T14:12:59Z','updated_at':'2015-05-28T14:12:59Z','resource_type':'locale'},'resource':'locale'};});this.post('/api/v1/base/password/reset',function(){return {'status':200,'auth_token':'yh5wFffnVzOi5IyYr1aMwojpcRJw0FGid3S9r5iDumvLsPI0fRWBl4VfTEpPkodWwUvLlQXr3zJkfTxC'};});this['delete']('/api/v1/session',function(){return {'status':200};});this.get('api/v1/locales/en-us/strings',function(db){return db.enusstrings[0];});this.get('/api/v1/session',function(){return {'status':200,'data':{'id':'pPW6tnOyJG6TmWCVea175d1bfc5dbf073a89ffeb6a2a198c61aae941Aqc7ahmzw8a','portal':'API','ip_address':'10.0.2.2','user_agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.132 Safari/537.36','user':{'id':1,'resource_type':'user'},'status':'ONLINE','created_at':'2015-07-23T16:32:01Z','last_activity_at':'2015-07-23T16:32:22Z','resource_type':'session'},'resource':'session','resources':{'role':{'1':{'id':1,'title':'Administrator','type':'ADMIN','ip_restriction':null,'password_expires_in_days':'0','is_two_factor_required':false,'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'role','resource_url':'http://novo/api/index.php?/v1/roles/1'}},'business_hour':{'1':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'}},'team':{'1':{'id':1,'title':'Sales','businesshour':{'id':1,'resource_type':'business_hour'},'followers':[],'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/1'},'2':{'id':2,'title':'Support','businesshour':{'id':1,'resource_type':'business_hour'},'followers':[],'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/2'},'3':{'id':3,'title':'Finance','businesshour':{'id':1,'resource_type':'business_hour'},'followers':[],'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/3'},'4':{'id':4,'title':'Human Resources','businesshour':{'id':1,'resource_type':'business_hour'},'followers':[],'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/4'}},'identity_email':{'1':{'id':1,'is_primary':true,'email':'test@kayako.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/1/identities/emails/1'}},'user_field':{'1':{'id':1,'fielduuid':'a007fb77-0c64-4b8c-a993-ab355135955c','type':'TEXT','key':'enter_the_name','title':'Enter the name','is_visible_to_customers':true,'customer_title':'Enter the name','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/1'},'2':{'id':2,'fielduuid':'ddde64f0-f40b-4159-8369-9372699b900b','type':'TEXTAREA','key':'contact_address','title':'contact address','is_visible_to_customers':true,'customer_title':'1','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':2,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/2'},'3':{'id':3,'fielduuid':'79ec4918-9406-4447-97a7-0b3583fa9df7','type':'CHECKBOX','key':'interests','title':'interests','is_visible_to_customers':false,'customer_title':null,'is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':3,'is_system':false,'options':[{'id':9,'resource_type':'field_option'},{'id':10,'resource_type':'field_option'},{'id':11,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/3'}},'field_option':{'9':{'id':9,'fielduuid':'79ec4918-9406-4447-97a7-0b3583fa9df7','value':'googling','tag':'googling','sort_order':9,'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'field_option'},'10':{'id':10,'fielduuid':'79ec4918-9406-4447-97a7-0b3583fa9df7','value':'learning new things','tag':'learningnewthings','sort_order':10,'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'field_option'},'11':{'id':11,'fielduuid':'79ec4918-9406-4447-97a7-0b3583fa9df7','value':'other','tag':null,'sort_order':11,'created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T12:09:20Z','resource_type':'field_option'}},'user':{'1':{'id':1,'full_name':'John Doe','designation':null,'is_enabled':true,'role':{'id':1,'resource_type':'role'},'avatar':'http://novo/index.php?/avatar/get/5dadfafe-ef84-5db9-91f5-d617d0f4e58b','teams':[{'id':1,'resource_type':'team'},{'id':2,'resource_type':'team'},{'id':3,'resource_type':'team'},{'id':4,'resource_type':'team'}],'emails':[{'id':1,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'access_level':null,'password_updated_at':'2015-07-23T12:09:20Z','avatar_updated_at':null,'activity_at':'2015-07-23T16:32:01Z','visited_at':'2015-07-23T16:32:01Z','created_at':'2015-07-23T12:09:20Z','updated_at':'2015-07-23T16:32:01Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/1'}}},'session_id':'pPW6tnOyJG6TmWCVea175d1bfc5dbf073a89ffeb6a2a198c61aae941Aqc7ahmzw8a'};});this.get('/api/v1/cases/forms/1',function(){return {'status':200,'data':{'id':1,'title':'Inbox','is_visible_to_customers':true,'customer_title':'Maintenance job form','description':null,'is_enabled':false,'is_default':false,'sort_order':1,'fields':[{'id':1,'resource_type':'case_field'},{'id':2,'resource_type':'case_field'},{'id':3,'resource_type':'case_field'},{'id':4,'resource_type':'case_field'},{'id':5,'resource_type':'case_field'},{'id':6,'resource_type':'case_field'},{'id':7,'resource_type':'case_field'},{'id':8,'resource_type':'case_field'},{'id':9,'resource_type':'case_field'},{'id':10,'resource_type':'case_field'},{'id':11,'resource_type':'case_field'}],'brand':{'id':1,'resource_type':'brand'},'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T13:45:45Z','resource_type':'case_form','resource_url':'http://novo/api/index.php?/v1/cases/forms/1'},'resource':'case_form','resources':{'case_field':{'1':{'id':1,'fielduuid':'0939abea-4b49-4a10-8bd1-d44af45b8413','type':'SUBJECT','key':'subject','title':'Subject','is_required_for_agents':true,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Subject','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/1'},'2':{'id':2,'fielduuid':'079313dc-dc9c-47db-9af6-029794eef5e6','type':'MESSAGE','key':'message','title':'Message','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Message','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':2,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/2'},'3':{'id':3,'fielduuid':'f34a13bf-6f32-48af-b2a8-805268b1b7a8','type':'PRIORITY','key':'priority','title':'Priority','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Priority','is_customer_editable':true,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':3,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/3'},'4':{'id':4,'fielduuid':'6b4cd677-ef6a-42f6-a725-5647e5719d34','type':'STATUS','key':'status','title':'Status','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Priority','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':4,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/4'},'5':{'id':5,'fielduuid':'b306d25c-c3c7-45de-a8d2-860881559208','type':'TYPE','key':'type','title':'Type','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Type','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':5,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/5'},'6':{'id':6,'fielduuid':'a9062464-7cdb-4062-9828-30ef28da1886','type':'TEAM','key':'team','title':'Team','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Team','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':6,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/6'},'7':{'id':7,'fielduuid':'4798cdd9-2add-48e2-90a8-67af21483304','type':'ASSIGNEE','key':'assignee','title':'Assignee','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Assignee','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':7,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/7'},'8':{'id':8,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','type':'SELECT','key':'product','title':'Product','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Product','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':8,'is_system':false,'options':[{'id':1,'resource_type':'field_option'},{'id':2,'resource_type':'field_option'},{'id':3,'resource_type':'field_option'},{'id':4,'resource_type':'field_option'},{'id':5,'resource_type':'field_option'},{'id':6,'resource_type':'field_option'},{'id':7,'resource_type':'field_option'},{'id':8,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/8'},'9':{'id':9,'fielduuid':'98f0682b-7f9f-456b-8302-c665b93cab09','type':'TEXT','key':'serial_number','title':'Serial number','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Serial number','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':9,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/9'},'10':{'id':10,'fielduuid':'e286c893-d948-47ef-b9c5-870aa8fd6468','type':'TEXTAREA','key':'reported_issues','title':'Reported issues','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Reported issues','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':10,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/10'},'11':{'id':11,'fielduuid':'d87dbf07-2f46-40fa-9b8a-bc0503b323cd','type':'DATE','key':'date_scheduled','title':'Date scheduled','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Date scheduled','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':11,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/11'}},'field_option':{'1':{'id':1,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Elektra Moderna 2-Group','tag':null,'sort_order':1,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'2':{'id':2,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Elektra Compact 1-Group','tag':null,'sort_order':2,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'3':{'id':3,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Elektra Compact 2-Group','tag':null,'sort_order':3,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'4':{'id':4,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Maidaid Barista MBC1D','tag':null,'sort_order':4,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'5':{'id':5,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Maidaid Barista MBC2D','tag':null,'sort_order':5,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'6':{'id':6,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Fracino Cybercino','tag':null,'sort_order':6,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'7':{'id':7,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Nespresso Gemini CS 200 PRO','tag':null,'sort_order':7,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'8':{'id':8,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Nespresso Gemini CS 220 PRO','tag':null,'sort_order':8,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'}},'language':{'1':{'id':1,'locale':'en-us','flag_icon':null,'direction':'LTR','is_enabled':true,'statistics':{'uptodate':0,'outdated':0,'missing':0},'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'language','resource_url':'http://novo/api/index.php?/v1/languages/1'}},'brand':{'1':{'id':1,'name':'Default','url':null,'language':{'id':1,'resource_type':'language'},'is_enabled':true,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'brand','resource_url':'http://novo/api/index.php?/v1/brands/1'}}},'session_id':'T5egVg5sUShBmlaQmBUEle35fa568f692a4bb8ecb8730dbec798d298a75abwWrkNQHEPYuYTQ1vSESUcStHE'};});this.get('/api/v1/cases/forms',function(){return {'status':200,'data':[{'id':1,'title':'Inbox','is_visible_to_customers':true,'customer_title':'Maintenance job form','description':null,'is_enabled':false,'is_default':false,'sort_order':1,'fields':[{'id':1,'resource_type':'case_field'},{'id':2,'resource_type':'case_field'},{'id':3,'resource_type':'case_field'},{'id':4,'resource_type':'case_field'},{'id':5,'resource_type':'case_field'},{'id':6,'resource_type':'case_field'},{'id':7,'resource_type':'case_field'},{'id':8,'resource_type':'case_field'},{'id':9,'resource_type':'case_field'},{'id':10,'resource_type':'case_field'},{'id':11,'resource_type':'case_field'}],'brand':{'id':1,'resource_type':'brand'},'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T13:02:52Z','resource_type':'case_form','resource_url':'http://novo/api/index.php?/v1/cases/forms/1'},{'id':2,'title':'Feedback on your coffee','is_visible_to_customers':true,'customer_title':'Feedback on your coffee','description':null,'is_enabled':true,'is_default':false,'sort_order':2,'fields':[{'id':1,'resource_type':'case_field'},{'id':2,'resource_type':'case_field'},{'id':3,'resource_type':'case_field'},{'id':4,'resource_type':'case_field'},{'id':5,'resource_type':'case_field'},{'id':6,'resource_type':'case_field'},{'id':7,'resource_type':'case_field'},{'id':12,'resource_type':'case_field'},{'id':13,'resource_type':'case_field'}],'brand':{'id':1,'resource_type':'brand'},'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_form','resource_url':'http://novo/api/index.php?/v1/cases/forms/2'}],'resource':'case_form','resources':{'case_field':{'1':{'id':1,'fielduuid':'0939abea-4b49-4a10-8bd1-d44af45b8413','type':'SUBJECT','key':'subject','title':'Subject','is_required_for_agents':true,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Subject','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/1'},'2':{'id':2,'fielduuid':'079313dc-dc9c-47db-9af6-029794eef5e6','type':'MESSAGE','key':'message','title':'Message','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Message','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':2,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/2'},'3':{'id':3,'fielduuid':'f34a13bf-6f32-48af-b2a8-805268b1b7a8','type':'PRIORITY','key':'priority','title':'Priority','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Priority','is_customer_editable':true,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':3,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/3'},'4':{'id':4,'fielduuid':'6b4cd677-ef6a-42f6-a725-5647e5719d34','type':'STATUS','key':'status','title':'Status','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Priority','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':4,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/4'},'5':{'id':5,'fielduuid':'b306d25c-c3c7-45de-a8d2-860881559208','type':'TYPE','key':'type','title':'Type','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Type','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':5,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/5'},'6':{'id':6,'fielduuid':'a9062464-7cdb-4062-9828-30ef28da1886','type':'TEAM','key':'team','title':'Team','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Team','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':6,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/6'},'7':{'id':7,'fielduuid':'4798cdd9-2add-48e2-90a8-67af21483304','type':'ASSIGNEE','key':'assignee','title':'Assignee','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Assignee','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':7,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/7'},'8':{'id':8,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','type':'SELECT','key':'product','title':'Product','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Product','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':8,'is_system':false,'options':[{'id':1,'resource_type':'field_option'},{'id':2,'resource_type':'field_option'},{'id':3,'resource_type':'field_option'},{'id':4,'resource_type':'field_option'},{'id':5,'resource_type':'field_option'},{'id':6,'resource_type':'field_option'},{'id':7,'resource_type':'field_option'},{'id':8,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/8'},'9':{'id':9,'fielduuid':'98f0682b-7f9f-456b-8302-c665b93cab09','type':'TEXT','key':'serial_number','title':'Serial number','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Serial number','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':9,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/9'},'10':{'id':10,'fielduuid':'e286c893-d948-47ef-b9c5-870aa8fd6468','type':'TEXTAREA','key':'reported_issues','title':'Reported issues','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Reported issues','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':10,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/10'},'11':{'id':11,'fielduuid':'d87dbf07-2f46-40fa-9b8a-bc0503b323cd','type':'DATE','key':'date_scheduled','title':'Date scheduled','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Date scheduled','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':11,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/11'},'12':{'id':12,'fielduuid':'afcf2e87-a07a-4cb0-8568-f2234549bdfa','type':'SELECT','key':'your_coffee','title':'Your coffee','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Your coffee','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':12,'is_system':false,'options':[{'id':9,'resource_type':'field_option'},{'id':10,'resource_type':'field_option'},{'id':11,'resource_type':'field_option'},{'id':12,'resource_type':'field_option'},{'id':13,'resource_type':'field_option'},{'id':14,'resource_type':'field_option'},{'id':15,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/12'},'13':{'id':13,'fielduuid':'d55cd74a-ba3a-4561-b01d-91eafa261c9d','type':'RADIO','key':'would_you_recommend_this_coffee_to_a_friend','title':'Would you recommend this coffee to a friend?','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Would you recommend this coffee to a friend?','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':13,'is_system':false,'options':[{'id':16,'resource_type':'field_option'},{'id':17,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/13'}},'field_option':{'1':{'id':1,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Elektra Moderna 2-Group','tag':null,'sort_order':1,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'2':{'id':2,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Elektra Compact 1-Group','tag':null,'sort_order':2,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'3':{'id':3,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Elektra Compact 2-Group','tag':null,'sort_order':3,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'4':{'id':4,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Maidaid Barista MBC1D','tag':null,'sort_order':4,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'5':{'id':5,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Maidaid Barista MBC2D','tag':null,'sort_order':5,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'6':{'id':6,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Fracino Cybercino','tag':null,'sort_order':6,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'7':{'id':7,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Nespresso Gemini CS 200 PRO','tag':null,'sort_order':7,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'8':{'id':8,'fielduuid':'f8f53b38-dd7a-432d-9559-d297b417250a','value':'Nespresso Gemini CS 220 PRO','tag':null,'sort_order':8,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'9':{'id':9,'fielduuid':'afcf2e87-a07a-4cb0-8568-f2234549bdfa','value':'Yirgacheffe Oromia - Single Origin','tag':'yirgacheffe-oromia','sort_order':1,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'10':{'id':10,'fielduuid':'afcf2e87-a07a-4cb0-8568-f2234549bdfa','value':'Kenya Kiunyu Ab - Single Origin','tag':'single-origin','sort_order':2,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'11':{'id':11,'fielduuid':'afcf2e87-a07a-4cb0-8568-f2234549bdfa','value':'Guatemala Asobagri - Single Origin','tag':'kenya-kiunyu-ab','sort_order':3,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'12':{'id':12,'fielduuid':'afcf2e87-a07a-4cb0-8568-f2234549bdfa','value':'Two Trees - Blend','tag':'two-trees','sort_order':4,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'13':{'id':13,'fielduuid':'afcf2e87-a07a-4cb0-8568-f2234549bdfa','value':'Clipper - Blend','tag':'clipper-blend','sort_order':5,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'14':{'id':14,'fielduuid':'afcf2e87-a07a-4cb0-8568-f2234549bdfa','value':'Honey - Blend','tag':'honey-blend','sort_order':6,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'15':{'id':15,'fielduuid':'afcf2e87-a07a-4cb0-8568-f2234549bdfa','value':'Brooklyn - Blend','tag':'brooklyn-blend','sort_order':7,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'16':{'id':16,'fielduuid':'d55cd74a-ba3a-4561-b01d-91eafa261c9d','value':'Yes','tag':null,'sort_order':1,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'},'17':{'id':17,'fielduuid':'d55cd74a-ba3a-4561-b01d-91eafa261c9d','value':'No','tag':null,'sort_order':2,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'field_option'}},'language':{'1':{'id':1,'locale':'en-us','flag_icon':null,'direction':'LTR','is_enabled':true,'statistics':{'uptodate':0,'outdated':0,'missing':0},'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'language','resource_url':'http://novo/api/index.php?/v1/languages/1'}},'brand':{'1':{'id':1,'name':'Default','url':null,'language':{'id':1,'resource_type':'language'},'is_enabled':true,'created_at':'2015-07-30T09:00:51Z','updated_at':'2015-07-30T09:00:51Z','resource_type':'brand','resource_url':'http://novo/api/index.php?/v1/brands/1'}}},'total_count':2,'session_id':'7NZnHJmj7HToQbMKBr01sWzAGT0b5ee4fa97c753581340604e37d8bf18e9885aaaGqOaevCdeKfHwmAB6'};});this.get('/api/v1/views/:viewId/cases',function(){return {'status':200,'data':[{'id':1,'mask_id':'DXX-189-28930','subject':'ERS Audit','portal':null,'source_channel':{'id':'02a60873-8118-453c-8258-8f44029e657d','resource_type':'channel'},'requester':{'id':2,'resource_type':'user'},'creator':{'id':3,'resource_type':'user'},'identity':{'id':2,'resource_type':'identity_email'},'assignee':{'team':{'id':3,'resource_type':'team'}},'brand':{'id':1,'resource_type':'brand'},'status':{'id':1,'resource_type':'case_status'},'priority':{'id':1,'resource_type':'case_priority'},'type':{'id':1,'resource_type':'case_type'},'sla':{'id':1,'resource_type':'sla'},'sla_metrics':[{'title':'FIRST_REPLY_TIME','state':'COMPLETED','is_breached':false,'target_in_seconds':null},{'title':'RESOLUTION_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-82656},{'title':'NEXT_REPLY_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-83016}],'tags':[{'id':1,'resource_type':'tag'},{'id':2,'resource_type':'tag'}],'form':{'id':1,'resource_type':'case_form'},'custom_fields':[{'field':{'id':8,'resource_type':'case_field'},'value':'Madhur','resource_type':'case_field_value'},{'field':{'id':9,'resource_type':'case_field'},'value':'Second Floor, 207 Old Street, London EC1V 9NR, United Kingdom','resource_type':'case_field_value'}],'followers':[],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'last_replier':{'id':2,'resource_type':'user'},'last_replier_identity':{'id':2,'resource_type':'identity_email'},'creation_mode':'WEB','state':'ACTIVE','post_count':3,'has_notes':false,'pinned_notes_count':0,'has_attachments':false,'rating':null,'rating_status':'UNOFFERED','created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','last_agent_activity_at':null,'last_customer_activity_at':'2015-07-09T15:36:10Z','resource_type':'case','resource_url':'http://novo/api/index.php?/v1/cases/1'},{'id':2,'mask_id':'PYI-851-88263','subject':'Profile Builder','portal':null,'source_channel':{'id':'02a60873-8118-453c-8258-8f44029e657d','resource_type':'channel'},'requester':{'id':4,'resource_type':'user'},'creator':{'id':5,'resource_type':'user'},'identity':{'id':4,'resource_type':'identity_email'},'assignee':{'team':{'id':2,'resource_type':'team'}},'brand':{'id':1,'resource_type':'brand'},'status':{'id':1,'resource_type':'case_status'},'priority':{'id':4,'resource_type':'case_priority'},'type':{'id':2,'resource_type':'case_type'},'sla':{'id':1,'resource_type':'sla'},'sla_metrics':[{'title':'FIRST_REPLY_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-83376},{'title':'RESOLUTION_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-82656}],'tags':[{'id':1,'resource_type':'tag'},{'id':3,'resource_type':'tag'}],'form':{'id':2,'resource_type':'case_form'},'custom_fields':[{'field':{'id':9,'resource_type':'case_field'},'value':'Estimated time','resource_type':'case_field_value'},{'field':{'id':10,'resource_type':'case_field'},'value':'1,2','resource_type':'case_field_value'},{'field':{'id':13,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':14,'resource_type':'case_field'},'value':'3','resource_type':'case_field_value'}],'followers':[],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'last_replier':{'id':4,'resource_type':'user'},'last_replier_identity':{'id':4,'resource_type':'identity_email'},'creation_mode':'WEB','state':'ACTIVE','post_count':3,'has_notes':true,'pinned_notes_count':0,'has_attachments':false,'rating':null,'rating_status':'UNOFFERED','created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','last_agent_activity_at':null,'last_customer_activity_at':'2015-07-09T15:36:10Z','resource_type':'case','resource_url':'http://novo/api/index.php?/v1/cases/2'},{'id':3,'mask_id':'TJS-877-65692','subject':'Windows 7 64 bit Upgrade Project','portal':null,'source_channel':{'id':'02a60873-8118-453c-8258-8f44029e657d','resource_type':'channel'},'requester':{'id':6,'resource_type':'user'},'creator':{'id':7,'resource_type':'user'},'identity':{'id':6,'resource_type':'identity_email'},'assignee':{'team':{'id':1,'resource_type':'team'}},'brand':{'id':1,'resource_type':'brand'},'status':{'id':1,'resource_type':'case_status'},'priority':{'id':2,'resource_type':'case_priority'},'type':{'id':2,'resource_type':'case_type'},'sla':{'id':1,'resource_type':'sla'},'sla_metrics':[{'title':'FIRST_REPLY_TIME','state':'COMPLETED','is_breached':false,'target_in_seconds':null},{'title':'RESOLUTION_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-82656}],'tags':[{'id':2,'resource_type':'tag'},{'id':4,'resource_type':'tag'}],'custom_fields':[{'field':{'id':8,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':9,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':10,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':11,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':12,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':13,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':14,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'}],'followers':[],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'last_replier':{'id':6,'resource_type':'user'},'last_replier_identity':{'id':6,'resource_type':'identity_email'},'creation_mode':'WEB','state':'ACTIVE','post_count':3,'has_notes':true,'pinned_notes_count':0,'has_attachments':false,'rating':null,'rating_status':'UNOFFERED','created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','last_agent_activity_at':null,'last_customer_activity_at':'2015-07-09T15:36:10Z','resource_type':'case','resource_url':'http://novo/api/index.php?/v1/cases/3'},{'id':4,'mask_id':'EXZ-814-50860','subject':'Netapp Disk Corruption','portal':null,'source_channel':{'id':'02a60873-8118-453c-8258-8f44029e657d','resource_type':'channel'},'requester':{'id':8,'resource_type':'user'},'creator':{'id':9,'resource_type':'user'},'identity':{'id':8,'resource_type':'identity_email'},'assignee':{'team':{'id':1,'resource_type':'team'}},'brand':{'id':1,'resource_type':'brand'},'status':{'id':1,'resource_type':'case_status'},'priority':{'id':1,'resource_type':'case_priority'},'type':{'id':3,'resource_type':'case_type'},'sla':{'id':1,'resource_type':'sla'},'sla_metrics':[{'title':'FIRST_REPLY_TIME','state':'COMPLETED','is_breached':false,'target_in_seconds':null},{'title':'RESOLUTION_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-82656},{'title':'NEXT_REPLY_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-83016}],'tags':[{'id':2,'resource_type':'tag'},{'id':3,'resource_type':'tag'}],'custom_fields':[{'field':{'id':8,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':9,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':10,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':11,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':12,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':13,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':14,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'}],'followers':[],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'last_replier':{'id':8,'resource_type':'user'},'last_replier_identity':{'id':8,'resource_type':'identity_email'},'creation_mode':'WEB','state':'ACTIVE','post_count':3,'has_notes':true,'pinned_notes_count':0,'has_attachments':false,'rating':null,'rating_status':'UNOFFERED','created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','last_agent_activity_at':null,'last_customer_activity_at':'2015-07-09T15:36:10Z','resource_type':'case','resource_url':'http://novo/api/index.php?/v1/cases/4'},{'id':5,'mask_id':'TPZ-697-83834','subject':'Daily Backup','portal':null,'source_channel':{'id':'02a60873-8118-453c-8258-8f44029e657d','resource_type':'channel'},'requester':{'id':10,'resource_type':'user'},'creator':{'id':11,'resource_type':'user'},'identity':{'id':10,'resource_type':'identity_email'},'assignee':{'team':{'id':3,'resource_type':'team'}},'brand':{'id':1,'resource_type':'brand'},'status':{'id':1,'resource_type':'case_status'},'priority':{'id':2,'resource_type':'case_priority'},'type':{'id':3,'resource_type':'case_type'},'sla':{'id':1,'resource_type':'sla'},'sla_metrics':[{'title':'FIRST_REPLY_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-83376},{'title':'RESOLUTION_TIME','state':'ACTIVE','is_breached':false,'target_in_seconds':-82656}],'tags':[{'id':1,'resource_type':'tag'},{'id':4,'resource_type':'tag'}],'custom_fields':[{'field':{'id':8,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':9,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':10,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':11,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':12,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':13,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'},{'field':{'id':14,'resource_type':'case_field'},'value':'','resource_type':'case_field_value'}],'followers':[],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'last_replier':{'id':10,'resource_type':'user'},'last_replier_identity':{'id':10,'resource_type':'identity_email'},'creation_mode':'WEB','state':'ACTIVE','post_count':3,'has_notes':false,'pinned_notes_count':0,'has_attachments':false,'rating':null,'rating_status':'UNOFFERED','created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','last_agent_activity_at':null,'last_customer_activity_at':'2015-07-09T15:36:10Z','resource_type':'case','resource_url':'http://novo/api/index.php?/v1/cases/5'}],'resource':'case','resources':{'language':{'1':{'id':1,'locale':'en-us','flag_icon':null,'direction':'LTR','is_enabled':true,'statistics':{'uptodate':0,'outdated':0,'missing':0},'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'language','resource_url':'http://novo/api/index.php?/v1/languages/1'}},'brand':{'1':{'id':1,'name':'Default','url':null,'language':{'id':1,'resource_type':'language'},'is_enabled':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'brand','resource_url':'http://novo/api/index.php?/v1/brands/1'}},'mailbox':{'1':{'id':1,'uuid':'02a60873-8118-453c-8258-8f44029e657d','service':'STANDARD','encryption':'NONE','address':'support@brewfictus.com','prefix':null,'smtp_type':null,'host':null,'port':null,'username':null,'preserve_mails':false,'brand':{'id':1,'resource_type':'brand'},'is_default':false,'is_enabled':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'mailbox','resource_url':'http://novo/api/index.php?/v1/mailboxes/1'}},'channel':{'02a60873-8118-453c-8258-8f44029e657d':{'uuid':'02a60873-8118-453c-8258-8f44029e657d','type':'MAILBOX','character_limit':null,'account':{'id':1,'resource_type':'mailbox'},'resource_type':'channel'}},'role':{'2':{'id':2,'title':'Agent','type':'AGENT','ip_restriction':null,'password_expires_in_days':'0','is_two_factor_required':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'role','resource_url':'http://novo/api/index.php?/v1/roles/2'},'3':{'id':3,'title':'Collaborator','type':'COLLABORATOR','ip_restriction':null,'password_expires_in_days':'0','is_two_factor_required':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'role','resource_url':'http://novo/api/index.php?/v1/roles/3'},'4':{'id':4,'title':'Customer','type':'CUSTOMER','ip_restriction':null,'password_expires_in_days':'0','is_two_factor_required':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'role','resource_url':'http://novo/api/index.php?/v1/roles/4'}},'identity_domain':{'1':{'id':1,'is_primary':true,'domain':'brew.com','is_validated':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_domain','resource_url':'http://novo/api/index.php?/v1/organizations/1/identities/domains/1'}},'organization':{'1':{'id':1,'name':'Brew','is_shared':false,'domains':[{'id':1,'resource_type':'identity_domain'}],'phone':[],'addresses':[],'websites':[],'notes':[],'pinned_notes_count':0,'tags':[],'custom_fields':[],'followers':[],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'organization','resource_url':'http://novo/api/index.php?/v1/organizations/1'}},'identity_email':{'2':{'id':2,'is_primary':true,'email':'johndoe2877832066@brew.com','is_notification_enabled':false,'is_validated':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/2/identities/emails/2'},'3':{'id':3,'is_primary':true,'email':'johndoe1867734778@brew.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/3/identities/emails/3'},'4':{'id':4,'is_primary':true,'email':'johndoe6646073448@brew.com','is_notification_enabled':false,'is_validated':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/4/identities/emails/4'},'5':{'id':5,'is_primary':true,'email':'johndoe2911221560@brew.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/5/identities/emails/5'},'6':{'id':6,'is_primary':true,'email':'johndoe1296700309@brew.com','is_notification_enabled':false,'is_validated':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/6/identities/emails/6'},'7':{'id':7,'is_primary':true,'email':'johndoe1588706763@brew.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/7/identities/emails/7'},'8':{'id':8,'is_primary':true,'email':'johndoe1311891368@brew.com','is_notification_enabled':false,'is_validated':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/8/identities/emails/8'},'9':{'id':9,'is_primary':true,'email':'johndoe2573818849@brew.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/9/identities/emails/9'},'10':{'id':10,'is_primary':true,'email':'johndoe1575498644@brew.com','is_notification_enabled':false,'is_validated':false,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/10/identities/emails/10'},'11':{'id':11,'is_primary':true,'email':'johndoe3800807592@brew.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/11/identities/emails/11'}},'user_field':{'1':{'id':1,'fielduuid':'dd1ae5ae-890b-41f1-9c9c-53dd19951f13','type':'TEXT','key':'enter_the_name','title':'Enter the name','is_visible_to_customers':true,'customer_title':'Enter the name','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/1'},'2':{'id':2,'fielduuid':'02b19e7d-782b-41da-9557-ef00ec81232d','type':'TEXTAREA','key':'contact_address','title':'contact address','is_visible_to_customers':true,'customer_title':'1','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':2,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/2'},'3':{'id':3,'fielduuid':'a1bab57f-3c04-4dc0-9349-2dea084336b0','type':'CHECKBOX','key':'interests','title':'interests','is_visible_to_customers':false,'customer_title':null,'is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':3,'is_system':false,'options':[{'id':9,'resource_type':'field_option'},{'id':10,'resource_type':'field_option'},{'id':11,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/3'}},'field_option':{'1':{'id':1,'fielduuid':'4dfcb17b-00fb-4899-907e-2ee517807651','value':'internetproblem','tag':'internet problem','sort_order':1,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'2':{'id':2,'fielduuid':'4dfcb17b-00fb-4899-907e-2ee517807651','value':'connectivityproblem','tag':'connectivity problem','sort_order':2,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'3':{'id':3,'fielduuid':'4dfcb17b-00fb-4899-907e-2ee517807651','value':'other','tag':null,'sort_order':3,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'4':{'id':4,'fielduuid':'55aeff67-4dbc-4809-8715-0227fae6e369','value':'yes','tag':'yes','sort_order':4,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'5':{'id':5,'fielduuid':'55aeff67-4dbc-4809-8715-0227fae6e369','value':'no','tag':'no','sort_order':5,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'6':{'id':6,'fielduuid':'a626e62e-0637-409d-a9a7-40f5b9bbc5da','value':'temporary','tag':null,'sort_order':6,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'7':{'id':7,'fielduuid':'a626e62e-0637-409d-a9a7-40f5b9bbc5da','value':'regularly','tag':null,'sort_order':7,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'8':{'id':8,'fielduuid':'a626e62e-0637-409d-a9a7-40f5b9bbc5da','value':'permanent','tag':null,'sort_order':8,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'9':{'id':9,'fielduuid':'a1bab57f-3c04-4dc0-9349-2dea084336b0','value':'googling','tag':'googling','sort_order':9,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'10':{'id':10,'fielduuid':'a1bab57f-3c04-4dc0-9349-2dea084336b0','value':'learning new things','tag':'learningnewthings','sort_order':10,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'},'11':{'id':11,'fielduuid':'a1bab57f-3c04-4dc0-9349-2dea084336b0','value':'other','tag':null,'sort_order':11,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'field_option'}},'user':{'2':{'id':2,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':4,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/2dff63d1-bf25-54f6-ba6c-cc344e67f4e1/false/200','organization':{'id':1,'resource_type':'organization'},'teams':[],'emails':[{'id':2,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/2'},'3':{'id':3,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':2,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/a6bb8433-c714-5e8d-b333-f3743c0bf878/false/200','teams':[],'emails':[{'id':3,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/3'},'4':{'id':4,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':4,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/4cee7e51-1d55-5285-b24b-3ca57ccff234/false/200','organization':{'id':1,'resource_type':'organization'},'teams':[],'emails':[{'id':4,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/4'},'5':{'id':5,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':2,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/464d1ca9-f6d3-5eb2-ba4c-0dd80f8ade75/false/200','teams':[],'emails':[{'id':5,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/5'},'6':{'id':6,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':4,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/d2e29f2d-616f-5abd-9bd0-70d46149efd3/false/200','organization':{'id':1,'resource_type':'organization'},'teams':[],'emails':[{'id':6,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/6'},'7':{'id':7,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':3,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/3e0df753-1a3c-5ea1-a69e-5b07fd41fbf7/false/200','teams':[],'emails':[{'id':7,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/7'},'8':{'id':8,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':4,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/1031b1ed-9779-53a6-b603-29db3168ef74/false/200','organization':{'id':1,'resource_type':'organization'},'teams':[],'emails':[{'id':8,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/8'},'9':{'id':9,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':2,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/bda10775-28e7-50a7-879e-2ac56f67db59/false/200','teams':[],'emails':[{'id':9,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/9'},'10':{'id':10,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':4,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/2d24e0f1-b9a1-549e-a327-865a9e6058a8/false/200','organization':{'id':1,'resource_type':'organization'},'teams':[],'emails':[{'id':10,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/10'},'11':{'id':11,'full_name':'John Doe','designation':null,'alias':null,'is_enabled':true,'role':{'id':3,'resource_type':'role'},'avatar':'http://novo/index.php?/Base/Avatar/Get/b1d1b7dd-df7c-503b-9e34-6789070f6c5d/false/200','teams':[],'emails':[{'id':11,'resource_type':'identity_email'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'resource_type':'user_field'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'access_level':null,'password_updated_at':'2015-07-09T15:36:10Z','avatar_updated_at':null,'activity_at':'2015-07-09T15:36:10Z','visited_at':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/11'}},'business_hour':{'1':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'}},'team':{'1':{'id':1,'title':'Sales','businesshour':{'id':1,'resource_type':'business_hour'},'followers':[],'created_at':'2015-07-09T15:36:10Z','updated_at':null,'resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/1'},'2':{'id':2,'title':'Support','businesshour':{'id':1,'resource_type':'business_hour'},'followers':[],'created_at':'2015-07-09T15:36:10Z','updated_at':null,'resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/2'},'3':{'id':3,'title':'Finance','businesshour':{'id':1,'resource_type':'business_hour'},'followers':[],'created_at':'2015-07-09T15:36:10Z','updated_at':null,'resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/3'}},'case_status':{'1':{'id':1,'label':'New','color':null,'visibility':'PUBLIC','type':'NEW','locales':[],'is_sla_active':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_status','resource_url':'http://novo/api/index.php?/v1/cases/statuses/1'}},'case_priority':{'1':{'id':1,'label':'Low','level':1,'color':null,'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_priority','resource_url':'http://novo/api/index.php?/v1/cases/priorities/1'},'2':{'id':2,'label':'Normal','level':2,'color':null,'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_priority','resource_url':'http://novo/api/index.php?/v1/cases/priorities/2'},'4':{'id':4,'label':'Urgent','level':4,'color':null,'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_priority','resource_url':'http://novo/api/index.php?/v1/cases/priorities/4'}},'case_type':{'1':{'id':1,'label':'Question','created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_type','resource_url':'http://novo/api/index.php?/v1/cases/types/1'},'2':{'id':2,'label':'Task','created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_type','resource_url':'http://novo/api/index.php?/v1/cases/types/2'},'3':{'id':3,'label':'Problem','created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_type','resource_url':'http://novo/api/index.php?/v1/cases/types/3'}},'sla':{'1':{'id':1,'title':'Regular support and sales tickets','description':null,'is_enabled':true,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'sla','resource_url':'http://novo/api/index.php?/v1/sla/1'}},'tag':{'1':{'id':1,'name':'connectivity','resource_type':'tag'},'2':{'id':2,'name':'bug','resource_type':'tag'},'3':{'id':3,'name':'internet','resource_type':'tag'},'4':{'id':4,'name':'printer','resource_type':'tag'}},'case_field':{'1':{'id':1,'fielduuid':'e6bb2845-4b85-455a-9828-07596d9bb506','type':'SUBJECT','key':'subject','title':'Subject','is_required_for_agents':true,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Subject','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/1'},'2':{'id':2,'fielduuid':'6df564a1-12c1-499e-8cb0-85dc9dea183b','type':'MESSAGE','key':'message','title':'Message','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Message','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':2,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/2'},'3':{'id':3,'fielduuid':'802b6d93-7a4f-4791-aefc-f7d53ea348f5','type':'PRIORITY','key':'priority','title':'Priority','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':true,'customer_title':'Priority','is_customer_editable':true,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':3,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/3'},'4':{'id':4,'fielduuid':'f0ec45ee-4ef9-4a13-bbc6-1d2e14d5726b','type':'STATUS','key':'status','title':'Status','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Priority','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':4,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/4'},'5':{'id':5,'fielduuid':'e8de6e9e-f178-469c-8008-e1096357ac0f','type':'TYPE','key':'type','title':'Type','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Type','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':5,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/5'},'6':{'id':6,'fielduuid':'a3b1a651-23b1-41dc-815a-e560b8940fc7','type':'TEAM','key':'team','title':'Team','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Team','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':6,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/6'},'7':{'id':7,'fielduuid':'307fad7a-fe29-499a-9279-e1fdc7f14582','type':'ASSIGNEE','key':'assignee','title':'Assignee','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':'Assignee','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':7,'is_system':true,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/7'},'8':{'id':8,'fielduuid':'30f9d670-ab63-48a6-a331-98460e7ff281','type':'TEXT','key':'enter_the_name','title':'Enter the name','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Enter the name','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':8,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/8'},'9':{'id':9,'fielduuid':'969fe14e-fe94-4eba-ad76-384c2469913f','type':'TEXTAREA','key':'contact_address','title':'contact address','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'1','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':9,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/9'},'10':{'id':10,'fielduuid':'4dfcb17b-00fb-4899-907e-2ee517807651','type':'CHECKBOX','key':'relateto','title':'relateto','is_required_for_agents':false,'is_required_on_resolution':false,'is_visible_to_customers':false,'customer_title':null,'is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':10,'is_system':false,'options':[{'id':1,'resource_type':'field_option'},{'id':2,'resource_type':'field_option'},{'id':3,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/10'},'11':{'id':11,'fielduuid':'55aeff67-4dbc-4809-8715-0227fae6e369','type':'RADIO','key':'important','title':'important','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'Important','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':11,'is_system':false,'options':[{'id':4,'resource_type':'field_option'},{'id':5,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/11'},'12':{'id':12,'fielduuid':'a626e62e-0637-409d-a9a7-40f5b9bbc5da','type':'SELECT','key':'problems','title':'problems','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'problem','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':12,'is_system':false,'options':[{'id':6,'resource_type':'field_option'},{'id':7,'resource_type':'field_option'},{'id':8,'resource_type':'field_option'}],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/12'},'13':{'id':13,'fielduuid':'a2aa541c-f9fe-4617-ab8f-38fa908139c0','type':'DATE','key':'date','title':'date','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'date','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':13,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/13'},'14':{'id':14,'fielduuid':'e7846dfb-fc2a-4efa-bd99-60ce89a7b05d','type':'NUMERIC','key':'days','title':'days','is_required_for_agents':false,'is_required_on_resolution':true,'is_visible_to_customers':true,'customer_title':'days','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':14,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_field','resource_url':'http://novo/api/index.php?/v1/cases/fields/14'}},'case_form':{'1':{'id':1,'title':'Internet Related Issue','is_visible_to_customers':true,'customer_title':'Internet Related Issue','description':null,'is_enabled':true,'is_default':false,'sort_order':1,'fields':[{'id':1,'resource_type':'case_field'},{'id':2,'resource_type':'case_field'},{'id':3,'resource_type':'case_field'},{'id':4,'resource_type':'case_field'},{'id':5,'resource_type':'case_field'},{'id':6,'resource_type':'case_field'},{'id':7,'resource_type':'case_field'},{'id':8,'resource_type':'case_field'},{'id':9,'resource_type':'case_field'}],'brand':{'id':1,'resource_type':'brand'},'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_form','resource_url':'http://novo/api/index.php?/v1/cases/forms/1'},'2':{'id':2,'title':'Computer Related issues','is_visible_to_customers':true,'customer_title':'Computer Related issues','description':null,'is_enabled':true,'is_default':false,'sort_order':2,'fields':[{'id':1,'resource_type':'case_field'},{'id':2,'resource_type':'case_field'},{'id':3,'resource_type':'case_field'},{'id':4,'resource_type':'case_field'},{'id':5,'resource_type':'case_field'},{'id':6,'resource_type':'case_field'},{'id':7,'resource_type':'case_field'},{'id':10,'resource_type':'case_field'},{'id':13,'resource_type':'case_field'},{'id':14,'resource_type':'case_field'},{'id':9,'resource_type':'case_field'}],'brand':null,'created_at':'2015-07-09T15:36:10Z','updated_at':'2015-07-09T15:36:10Z','resource_type':'case_form','resource_url':'http://novo/api/index.php?/v1/cases/forms/2'}}},'offset':0,'limit':5,'total_count':17,'next_url':'http://novo/api/index.php?/v1/cases/base&_flat=true&limit=5&offset=5','last_url':'http://novo/api/index.php?/v1/cases/base&_flat=true&limit=5&offset=15'};}); //todo check payload is correct and case/messages is still required
  this.get('/api/v1/messages',function(db){return new Mirage['default'].Response(400,{},db.messages);});this.get('/api/v1/views',function(db){return db.views[0];});this.get('/api/v1/cases/:id',function(db,request){if(isNaN(request.params.id)){throw 'Caught by a wild card!';}var originalCase=db.cases[0];var id=parseInt(request.params.id);return Object.assign({},originalCase,{id:id,data:Object.assign({},originalCase.data,{id:id,subject:originalCase.data.subject + ' ' + request.params.id})});});this.get('/api/v1/cases/:id/notes',function(db){return db.casenotes[0];});this.post('/api/v1/cases/:id/notes',function(db){return db.casenotes[0];});this.get('/api/v1/cases/:id/messages',function(db){return db.casemessages[0];});this.get('api/v1/cases/:id/reply/channels',function(db){return db.casechannels[0];});this.get('/api/v1/cases/priorities',function(db){return db.casepriorities[0];});this.get('/api/v1/cases/types',function(db){return db.casetypes[0];});this.get('/api/v1/cases/statuses',function(db){return db.casestatuses[0];});this.get('api/v1/cases/fields',function(db){return db.casefields[0];});this.get('api/v1/cases/reply/channels',function(db){return db.casereplychannels[0];});this.get('api/v1/cases/fields/:id/options',function(){return {'status':200,'data':[{'id':1,'fielduuid':'8d364470-77c1-46b5-8506-810700a2d29a','value':'internetproblem','tag':'internet problem','sort_order':1,'created_at':'2015-07-16T09:30:40Z','updated_at':'2015-07-16T09:30:40Z','resource_type':'field_option','resource_url':'http://novo/api/index.php?/v1/cases/fields/10/options/1'},{'id':2,'fielduuid':'8d364470-77c1-46b5-8506-810700a2d29a','value':'connectivityproblem','tag':'connectivity problem','sort_order':2,'created_at':'2015-07-16T09:30:40Z','updated_at':'2015-07-16T09:30:40Z','resource_type':'field_option','resource_url':'http://novo/api/index.php?/v1/cases/fields/10/options/2'},{'id':3,'fielduuid':'8d364470-77c1-46b5-8506-810700a2d29a','value':'other','tag':null,'sort_order':3,'created_at':'2015-07-16T09:30:40Z','updated_at':'2015-07-16T09:30:40Z','resource_type':'field_option','resource_url':'http://novo/api/index.php?/v1/cases/fields/10/options/3'}],'resource':'field_option','total_count':3,'session_id':'d4XE33cnM105GKla1pFqYDfjr313e422cd61c535941c9a2d5681fe7e39eed1ca6SVNXQCtt07Jlp3jO'};});this.get('api/v1/teams',function(){return {'status':200,'data':[{'id':1,'title':'Sales','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/1'},{'id':2,'title':'Support','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/2'},{'id':3,'title':'Finance','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/3'},{'id':4,'title':'Human Resources','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/4'}],'resource':'team','offset':0,'limit':10,'total_count':4,'session_id':'0VR4CSL7dXUshZtO8EI2a32a89eaa80d3bdecc9964941ec5d235a6632dcrhO2ug8M9VrLV'};});this.get('api/v1/users',function(){return {'status':200,'data':[{'id':1,'full_name':'John Doe','designation':null,'is_enabled':true,'role':{'id':1,'title':'Administrator','type':'ADMIN','created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'role','resource_url':'http://novo/api/index.php?/v1/roles/1'},'avatar':'http://novo/index.php?/avatar/get/3c8227bc-5101-51aa-908f-abc6dcb52dee','teams':[{'id':1,'title':'Sales','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/1'},{'id':2,'title':'Support','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/2'},{'id':3,'title':'Finance','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/3'},{'id':4,'title':'Human Resources','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/4'}],'emails':[{'id':1,'is_primary':true,'email':'test@kayako.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/1/identities/emails/1'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'fielduuid':'21cf6eb0-5da3-4054-b054-66c89778fd95','type':'TEXT','key':'enter_the_name','title':'Enter the name','is_visible_to_customers':true,'customer_title':'Enter the name','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/1'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'fielduuid':'15168ac8-e4cb-477c-8ae1-5c3f91585d89','type':'TEXTAREA','key':'contact_address','title':'contact address','is_visible_to_customers':true,'customer_title':'1','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':2,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/2'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','type':'CHECKBOX','key':'interests','title':'interests','is_visible_to_customers':false,'customer_title':null,'is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':3,'is_system':false,'options':[{'id':9,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'googling','tag':'googling','sort_order':9,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'},{'id':10,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'learning new things','tag':'learningnewthings','sort_order':10,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'},{'id':11,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'other','tag':null,'sort_order':11,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'}],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/3'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'access_level':null,'password_updated_at':'2015-07-23T13:36:12Z','avatar_updated_at':null,'activity_at':'2015-07-24T10:39:04Z','visited_at':'2015-07-24T10:39:49Z','created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-24T10:39:49Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/1'}],'resource':'user','total_count':10,'session_id':'aFPgO9mG2DdUipMpV0tK5k3mv8zMfJa6d966aaa605f8933fd939e2fa86ea8f6294a577L0dQypQ3vkYo3t25NLuESAA'};});this.get('/api/v1/cases/macros',function(){return {'status':200,'data':[{'id':1,'title':'tests \\\\ assign to blank ','contents':'blank','agent':{'id':1,'full_name':'John Doe','designation':null,'is_enabled':true,'role':{'id':1,'title':'Administrator','type':'ADMIN','created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'role','resource_url':'http://novo/api/index.php?/v1/roles/1'},'avatar':'http://novo/index.php?/avatar/get/3c8227bc-5101-51aa-908f-abc6dcb52dee','teams':[{'id':1,'title':'Sales','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/1'},{'id':2,'title':'Support','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/2'},{'id':3,'title':'Finance','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/3'},{'id':4,'title':'Human Resources','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/4'}],'emails':[{'id':1,'is_primary':true,'email':'test@kayako.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/1/identities/emails/1'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'fielduuid':'21cf6eb0-5da3-4054-b054-66c89778fd95','type':'TEXT','key':'enter_the_name','title':'Enter the name','is_visible_to_customers':true,'customer_title':'Enter the name','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/1'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'fielduuid':'15168ac8-e4cb-477c-8ae1-5c3f91585d89','type':'TEXTAREA','key':'contact_address','title':'contact address','is_visible_to_customers':true,'customer_title':'1','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':2,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/2'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','type':'CHECKBOX','key':'interests','title':'interests','is_visible_to_customers':false,'customer_title':null,'is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':3,'is_system':false,'options':[{'id':9,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'googling','tag':'googling','sort_order':9,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'},{'id':10,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'learning new things','tag':'learningnewthings','sort_order':10,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'},{'id':11,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'other','tag':null,'sort_order':11,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'}],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/3'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'access_level':null,'password_updated_at':'2015-07-23T13:36:12Z','avatar_updated_at':null,'activity_at':'2015-07-24T11:08:54Z','visited_at':'2015-07-24T11:08:54Z','created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-24T11:08:54Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/1'},'assignee':{'type':'AGENT','team':{'id':1,'title':'Sales','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/1'},'agent':{'id':1,'full_name':'John Doe','designation':null,'is_enabled':true,'role':{'id':1,'title':'Administrator','type':'ADMIN','created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'role','resource_url':'http://novo/api/index.php?/v1/roles/1'},'avatar':'http://novo/index.php?/avatar/get/3c8227bc-5101-51aa-908f-abc6dcb52dee','teams':[{'id':1,'title':'Sales','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/1'},{'id':2,'title':'Support','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/2'},{'id':3,'title':'Finance','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/3'},{'id':4,'title':'Human Resources','businesshour':{'id':1,'title':'Default Business Hours','zones':{'monday':[9,10,11,12,13,14,15,16,17,18],'tuesday':[9,10,11,12,13,14,15,16,17,18],'wednesday':[9,10,11,12,13,14,15,16,17,18],'thursday':[9,10,11,12,13,14,15,16,17,18],'friday':[9,10,11,12,13,14,15,16,17,18],'saturday':[],'sunday':[]},'holidays':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'business_hour','resource_url':'http://novo/api/index.php?/v1/businesshours/1'},'followers':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'team','resource_url':'http://novo/api/index.php?/v1/teams/4'}],'emails':[{'id':1,'is_primary':true,'email':'test@kayako.com','is_notification_enabled':false,'is_validated':true,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'identity_email','resource_url':'http://novo/api/index.php?/v1/users/1/identities/emails/1'}],'phones':[],'twitter':[],'facebook':[],'external_identities':[],'addresses':[],'websites':[],'custom_fields':[{'field':{'id':1,'fielduuid':'21cf6eb0-5da3-4054-b054-66c89778fd95','type':'TEXT','key':'enter_the_name','title':'Enter the name','is_visible_to_customers':true,'customer_title':'Enter the name','is_customer_editable':true,'is_required_for_customers':true,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':1,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/1'},'value':'','resource_type':'user_field_value'},{'field':{'id':2,'fielduuid':'15168ac8-e4cb-477c-8ae1-5c3f91585d89','type':'TEXTAREA','key':'contact_address','title':'contact address','is_visible_to_customers':true,'customer_title':'1','is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':2,'is_system':false,'options':[],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/2'},'value':'','resource_type':'user_field_value'},{'field':{'id':3,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','type':'CHECKBOX','key':'interests','title':'interests','is_visible_to_customers':false,'customer_title':null,'is_customer_editable':false,'is_required_for_customers':false,'description':null,'is_enabled':true,'regular_expression':null,'sort_order':3,'is_system':false,'options':[{'id':9,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'googling','tag':'googling','sort_order':9,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'},{'id':10,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'learning new things','tag':'learningnewthings','sort_order':10,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'},{'id':11,'fielduuid':'52d085c1-dd76-4aa0-b8c8-292414efd893','value':'other','tag':null,'sort_order':11,'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'field_option'}],'locales':[],'created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-23T13:36:12Z','resource_type':'user_field','resource_url':'http://novo/api/index.php?/v1/users/fields/3'},'value':'','resource_type':'user_field_value'}],'metadata':{'custom':null,'system':null,'resource_type':'metadata'},'tags':[],'notes':[],'pinned_notes_count':0,'followers':[],'locale':'en-us','time_zone':null,'time_zone_offset':null,'greeting':null,'signature':null,'status_message':null,'access_level':null,'password_updated_at':'2015-07-23T13:36:12Z','avatar_updated_at':null,'activity_at':'2015-07-24T11:08:54Z','visited_at':'2015-07-24T11:08:54Z','created_at':'2015-07-23T13:36:12Z','updated_at':'2015-07-24T11:08:54Z','resource_type':'user','resource_url':'http://novo/api/index.php?/v1/users/1'},'resource_type':'macro_assignee'},'properties':{'resource_type':'macro_properties'},'visibility':{'type':'ALL','resource_type':'macro_visibility'},'tags':[],'usage_count':0,'last_used_at':null,'created_at':'2015-07-23T13:38:59Z','updated_at':'2015-07-23T13:38:59Z','resource_type':'macro','resource_url':'http://novo/api/index.php?/v1/cases/macros/1'}],'resource':'macro','total_count':1,'session_id':'hom4BTrYwkPcHH847089d48a9177153bfa85890f20529058a07377544Oo5VgueZyI2RRvScA3ogmGNMZ'};}); // These comments are here to help you get started. Feel free to delete them.
  /*
      Default config
    */ // this.namespace = '';    // make this `api`, for example, if your API is namespaced
  // this.timing = 400;      // delay for each request, automatically set to 0 during testing
  /*
      Route shorthand cheatsheet
    */ /*
      GET shorthands

      // Collections
      this.get('/contacts');
      this.get('/contacts', 'users');
      this.get('/contacts', ['contacts', 'addresses']);

      // Single objects
      this.get('/contacts/:id');
      this.get('/contacts/:id', 'user');
      this.get('/contacts/:id', ['contact', 'addresses']);
    */ /*
      POST shorthands

      this.post('/contacts');
      this.post('/contacts', 'user'); // specify the type of resource to be created
    */ /*
      PUT shorthands

      this.put('/contacts/:id');
      this.put('/contacts/:id', 'user'); // specify the type of resource to be updated
    */ /*
      DELETE shorthands

      this.del('/contacts/:id');
      this.del('/contacts/:id', 'user'); // specify the type of resource to be deleted

      // Single object + related resources. Make sure parent resource is first.
      this.del('/contacts/:id', ['contact', 'addresses']);
    */ /*
      Function fallback. Manipulate data in the db via

        - db.{collection} // returns all the data defined in /app/mirage/fixtures/{collection}.js
        - db.{collection}.find(id)
        - db.{collection}.where(query)
        - db.{collection}.update(target, attrs)
        - db.{collection}.remove(target)

      // Example: return a single object with related models
      this.get('/contacts/:id', function(db, request) {
        var contactId = +request.params.id;
        var contact = db.contacts.find(contactId);
        var addresses = db.addresses
          .filterBy('contact_id', contactId);

        return {
          contact: contact,
          addresses: addresses
        };
      });

    */}

});
define('frontend-cp/mirage/fixtures/casechannels', ['exports'], function (exports) {

    'use strict';

    exports['default'] = [{
        'data': [{
            'account': {
                'id': 1,
                'resource_type': 'mailbox'
            },
            'character_limit': null,
            'resource_type': 'channel',
            'type': 'MAILBOX',
            'uuid': '89809a64-983f-4a67-94b5-15cb60883d0e'
        }, {
            'account': {
                'id': 1,
                'resource_type': 'facebook_page'
            },
            'character_limit': null,
            'resource_type': 'channel',
            'type': 'FACEBOOK',
            'uuid': '22c7ea79-16c9-430c-98fd-5f802c974872'
        }, {
            'account': {
                'id': 1,
                'resource_type': 'twitter_account'
            },
            'character_limit': 140,
            'resource_type': 'channel',
            'type': 'TWITTER',
            'uuid': '3796b27a-f1e9-45d5-8ca2-b071833c17e4'
        }],
        'resource': 'channel',
        'resources': {
            'brand': {
                '1': {
                    'created_at': '2015-07-17T10:44:50Z',
                    'id': 1,
                    'is_enabled': true,
                    'language': {
                        'id': 1,
                        'resource_type': 'language'
                    },
                    'name': 'Default',
                    'resource_type': 'brand',
                    'resource_url': 'http://novo/api/index.php?/v1/brands/1',
                    'updated_at': '2015-07-17T10:44:50Z',
                    'url': null
                }
            },
            'facebook_account': {
                '1': {
                    'account_id': '1399177110403746',
                    'created_at': '2015-07-17T10:44:50Z',
                    'id': 1,
                    'is_enabled': true,
                    'resource_type': 'facebook_account',
                    'resource_url': 'http://novo/api/index.php?/v1/facebook/account/1',
                    'title': 'John Mathew',
                    'updated_at': '2015-07-17T10:44:50Z'
                }
            },
            'facebook_page': {
                '1': {
                    'account': {
                        'id': 1,
                        'resource_type': 'facebook_account'
                    },
                    'brand': {
                        'id': 1,
                        'resource_type': 'brand'
                    },
                    'created_at': '2015-07-17T10:44:50Z',
                    'id': 1,
                    'is_enabled': true,
                    'page_id': '876423285750729',
                    'resource_type': 'facebook_page',
                    'resource_url': 'http://novo/api/index.php?/v1/facebook/page/1',
                    'route_messages': true,
                    'route_posts': true,
                    'title': 'HelpDesk Management System',
                    'updated_at': '2015-07-17T10:44:50Z',
                    'uuid': '22c7ea79-16c9-430c-98fd-5f802c974872'
                }
            },
            'language': {
                '1': {
                    'created_at': '2015-07-17T10:44:50Z',
                    'direction': 'LTR',
                    'flag_icon': null,
                    'id': 1,
                    'is_enabled': true,
                    'locale': 'en-us',
                    'resource_type': 'language',
                    'resource_url': 'http://novo/api/index.php?/v1/languages/1',
                    'statistics': {
                        'missing': 0,
                        'outdated': 0,
                        'uptodate': 0
                    },
                    'updated_at': '2015-07-17T10:44:50Z'
                }
            },
            'mailbox': {
                '1': {
                    'address': 'support@brewfictus.com',
                    'brand': {
                        'id': 1,
                        'resource_type': 'brand'
                    },
                    'created_at': '2015-07-17T10:44:50Z',
                    'encryption': 'NONE',
                    'host': null,
                    'id': 1,
                    'is_default': false,
                    'is_enabled': true,
                    'port': null,
                    'prefix': null,
                    'preserve_mails': false,
                    'resource_type': 'mailbox',
                    'resource_url': 'http://novo/api/index.php?/v1/mailboxes/1',
                    'service': 'STANDARD',
                    'smtp_type': null,
                    'updated_at': '2015-07-17T10:44:50Z',
                    'username': null,
                    'uuid': '89809a64-983f-4a67-94b5-15cb60883d0e'
                }
            },
            'twitter_account': {
                '1': {
                    'account_id': '3155953718',
                    'brand': {
                        'id': 1,
                        'resource_type': 'brand'
                    },
                    'created_at': '2015-07-17T10:44:50Z',
                    'id': 1,
                    'is_enabled': true,
                    'is_public': true,
                    'resource_type': 'twitter_account',
                    'resource_url': 'http://novo/api/index.php?/v1/twitter/account/1',
                    'route_favorites': true,
                    'route_mentions': true,
                    'route_messages': true,
                    'screen_name': 'englisha938',
                    'updated_at': '2015-07-17T10:44:50Z',
                    'uuid': '3796b27a-f1e9-45d5-8ca2-b071833c17e4'
                }
            }
        },
        'status': 200,
        'total_count': 3
    }];

});
define('frontend-cp/mirage/fixtures/casefields', ['exports'], function (exports) {

  'use strict';

  exports['default'] = [{
    'status': 200,
    'data': [{
      'id': 1,
      'fielduuid': 'e6bb2845-4b85-455a-9828-07596d9bb506',
      'type': 'SUBJECT',
      'key': 'subject',
      'title': 'Subject',
      'is_required_for_agents': true,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': 'Subject',
      'is_customer_editable': true,
      'is_required_for_customers': true,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 1,
      'is_system': true,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/1'
    }, {
      'id': 2,
      'fielduuid': '6df564a1-12c1-499e-8cb0-85dc9dea183b',
      'type': 'MESSAGE',
      'key': 'message',
      'title': 'Message',
      'is_required_for_agents': false,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': 'Message',
      'is_customer_editable': true,
      'is_required_for_customers': true,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 2,
      'is_system': true,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/2'
    }, {
      'id': 3,
      'fielduuid': '802b6d93-7a4f-4791-aefc-f7d53ea348f5',
      'type': 'PRIORITY',
      'key': 'priority',
      'title': 'Priority',
      'is_required_for_agents': false,
      'is_required_on_resolution': false,
      'is_visible_to_customers': true,
      'customer_title': 'Priority',
      'is_customer_editable': true,
      'is_required_for_customers': false,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 3,
      'is_system': true,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/3'
    }, {
      'id': 4,
      'fielduuid': 'f0ec45ee-4ef9-4a13-bbc6-1d2e14d5726b',
      'type': 'STATUS',
      'key': 'status',
      'title': 'Status',
      'is_required_for_agents': false,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': 'Priority',
      'is_customer_editable': false,
      'is_required_for_customers': false,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 4,
      'is_system': true,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/4'
    }, {
      'id': 5,
      'fielduuid': 'e8de6e9e-f178-469c-8008-e1096357ac0f',
      'type': 'TYPE',
      'key': 'type',
      'title': 'Type',
      'is_required_for_agents': false,
      'is_required_on_resolution': false,
      'is_visible_to_customers': false,
      'customer_title': 'Type',
      'is_customer_editable': false,
      'is_required_for_customers': false,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 5,
      'is_system': true,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/5'
    }, {
      'id': 6,
      'fielduuid': 'a3b1a651-23b1-41dc-815a-e560b8940fc7',
      'type': 'TEAM',
      'key': 'team',
      'title': 'Team',
      'is_required_for_agents': false,
      'is_required_on_resolution': false,
      'is_visible_to_customers': false,
      'customer_title': 'Team',
      'is_customer_editable': false,
      'is_required_for_customers': false,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 6,
      'is_system': true,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/6'
    }, {
      'id': 7,
      'fielduuid': '307fad7a-fe29-499a-9279-e1fdc7f14582',
      'type': 'ASSIGNEE',
      'key': 'assignee',
      'title': 'Assignee',
      'is_required_for_agents': false,
      'is_required_on_resolution': false,
      'is_visible_to_customers': false,
      'customer_title': 'Assignee',
      'is_customer_editable': false,
      'is_required_for_customers': false,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 7,
      'is_system': true,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/7'
    }, {
      'id': 8,
      'fielduuid': '30f9d670-ab63-48a6-a331-98460e7ff281',
      'type': 'TEXT',
      'key': 'enter_the_name',
      'title': 'Enter the name',
      'is_required_for_agents': false,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': 'Enter the name',
      'is_customer_editable': true,
      'is_required_for_customers': true,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 8,
      'is_system': false,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/8'
    }, {
      'id': 9,
      'fielduuid': '969fe14e-fe94-4eba-ad76-384c2469913f',
      'type': 'TEXTAREA',
      'key': 'contact_address',
      'title': 'contact address',
      'is_required_for_agents': false,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': '1',
      'is_customer_editable': false,
      'is_required_for_customers': false,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 9,
      'is_system': false,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/9'
    }, {
      'id': 10,
      'fielduuid': '4dfcb17b-00fb-4899-907e-2ee517807651',
      'type': 'CHECKBOX',
      'key': 'relateto',
      'title': 'relateto',
      'is_required_for_agents': false,
      'is_required_on_resolution': false,
      'is_visible_to_customers': false,
      'customer_title': null,
      'is_customer_editable': false,
      'is_required_for_customers': false,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 10,
      'is_system': false,
      'options': [{
        'id': 1,
        'resource_type': 'field_option'
      }, {
        'id': 2,
        'resource_type': 'field_option'
      }, {
        'id': 3,
        'resource_type': 'field_option'
      }],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/10'
    }, {
      'id': 11,
      'fielduuid': '55aeff67-4dbc-4809-8715-0227fae6e369',
      'type': 'RADIO',
      'key': 'important',
      'title': 'important',
      'is_required_for_agents': false,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': 'Important',
      'is_customer_editable': true,
      'is_required_for_customers': true,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 11,
      'is_system': false,
      'options': [{
        'id': 4,
        'resource_type': 'field_option'
      }, {
        'id': 5,
        'resource_type': 'field_option'
      }],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/11'
    }, {
      'id': 12,
      'fielduuid': 'a626e62e-0637-409d-a9a7-40f5b9bbc5da',
      'type': 'SELECT',
      'key': 'problems',
      'title': 'problems',
      'is_required_for_agents': false,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': 'problem',
      'is_customer_editable': true,
      'is_required_for_customers': true,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 12,
      'is_system': false,
      'options': [{
        'id': 6,
        'resource_type': 'field_option'
      }, {
        'id': 7,
        'resource_type': 'field_option'
      }, {
        'id': 8,
        'resource_type': 'field_option'
      }],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/12'
    }, {
      'id': 13,
      'fielduuid': 'a2aa541c-f9fe-4617-ab8f-38fa908139c0',
      'type': 'DATE',
      'key': 'date',
      'title': 'date',
      'is_required_for_agents': false,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': 'date',
      'is_customer_editable': true,
      'is_required_for_customers': true,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 13,
      'is_system': false,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/13'
    }, {
      'id': 14,
      'fielduuid': 'e7846dfb-fc2a-4efa-bd99-60ce89a7b05d',
      'type': 'NUMERIC',
      'key': 'days',
      'title': 'days',
      'is_required_for_agents': false,
      'is_required_on_resolution': true,
      'is_visible_to_customers': true,
      'customer_title': 'days',
      'is_customer_editable': true,
      'is_required_for_customers': true,
      'description': null,
      'is_enabled': true,
      'regular_expression': null,
      'sort_order': 14,
      'is_system': false,
      'options': [],
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_field',
      'resource_url': 'http://novo/api/index.php?/v1/cases/fields/14'
    }],
    'resource': 'case_field',
    'resources': {
      'field_option': {
        '1': {
          'id': 1,
          'fielduuid': '4dfcb17b-00fb-4899-907e-2ee517807651',
          'value': 'internetproblem',
          'tag': 'internet problem',
          'sort_order': 1,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '2': {
          'id': 2,
          'fielduuid': '4dfcb17b-00fb-4899-907e-2ee517807651',
          'value': 'connectivityproblem',
          'tag': 'connectivity problem',
          'sort_order': 2,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '3': {
          'id': 3,
          'fielduuid': '4dfcb17b-00fb-4899-907e-2ee517807651',
          'value': 'other',
          'tag': null,
          'sort_order': 3,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '4': {
          'id': 4,
          'fielduuid': '55aeff67-4dbc-4809-8715-0227fae6e369',
          'value': 'yes',
          'tag': 'yes',
          'sort_order': 4,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '5': {
          'id': 5,
          'fielduuid': '55aeff67-4dbc-4809-8715-0227fae6e369',
          'value': 'no',
          'tag': 'no',
          'sort_order': 5,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '6': {
          'id': 6,
          'fielduuid': 'a626e62e-0637-409d-a9a7-40f5b9bbc5da',
          'value': 'temporary',
          'tag': null,
          'sort_order': 6,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '7': {
          'id': 7,
          'fielduuid': 'a626e62e-0637-409d-a9a7-40f5b9bbc5da',
          'value': 'regularly',
          'tag': null,
          'sort_order': 7,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '8': {
          'id': 8,
          'fielduuid': 'a626e62e-0637-409d-a9a7-40f5b9bbc5da',
          'value': 'permanent',
          'tag': null,
          'sort_order': 8,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        }
      }
    },
    'total_count': 14
  }];

});
define('frontend-cp/mirage/fixtures/casemessages', ['exports'], function (exports) {

    'use strict';

    exports['default'] = [{
        'data': [{
            'attachments': [],
            'body_html': 'Just a couple more questions. E&amp;Y would like to know the role/purpose of the DB accounts from  the attached file.',
            'body_text': 'Just a couple more questions. E&Y would like to know the role/purpose of the DB accounts from  the attached file.',
            'created_at': '2015-07-09T15:36:10Z',
            'creation_mode': 'SYSTEM',
            'creator': {
                'id': 3,
                'resource_type': 'user'
            },
            'download_all': null,
            'email': null,
            'fullname': null,
            'id': 2,
            'identity': {
                'id': 3,
                'resource_type': 'identity_email'
            },
            'locale': null,
            'location': null,
            'mailbox': {
                'id': 1,
                'resource_type': 'mailbox'
            },
            'metadata': {
                'custom': null,
                'resource_type': 'metadata',
                'system': {
                    'ipaddress': '',
                    'useragent': ''
                }
            },
            'recipients': [{
                'id': 2,
                'resource_type': 'message_recipient'
            }],
            'resource_type': 'case_message',
            'resource_url': 'http://novo/api/index.php?/v1/cases/1/messages/2',
            'response_time': 0,
            'subject': 'ERS Audit',
            'updated_at': '2015-07-09T15:36:10Z',
            'uuid': '9cf15cde-955e-4baf-9c56-c5b77d3f3e21'
        }, {
            'attachments': [],
            'body_html': 'Just a couple more questions. E&amp;Y would like to know the role/purpose of the DB accounts from  the attached file.',
            'body_text': 'Just a couple more questions. E&Y would like to know the role/purpose of the DB accounts from  the attached file.',
            'created_at': '2015-07-09T15:36:10Z',
            'creation_mode': 'SYSTEM',
            'creator': {
                'id': 6,
                'resource_type': 'user'
            },
            'download_all': null,
            'email': null,
            'fullname': null,
            'id': 3,
            'identity': {
                'id': 6,
                'resource_type': 'identity_email'
            },
            'locale': null,
            'location': null,
            'mailbox': {
                'id': 1,
                'resource_type': 'mailbox'
            },
            'metadata': {
                'custom': null,
                'resource_type': 'metadata',
                'system': {
                    'ipaddress': '',
                    'useragent': ''
                }
            },
            'recipients': [{
                'id': 3,
                'resource_type': 'message_recipient'
            }],
            'resource_type': 'case_message',
            'resource_url': 'http://novo/api/index.php?/v1/cases/1/messages/3',
            'response_time': 0,
            'subject': 'ERS Audit',
            'updated_at': '2015-07-09T15:36:10Z',
            'uuid': 'f9809fdf-becf-4581-bff4-c507465dc5a9'
        }, {
            'attachments': [],
            'body_html': 'Perform a auditory test. ',
            'body_text': 'Perform a auditory test. ',
            'created_at': '2015-07-09T15:36:10Z',
            'creation_mode': 'SYSTEM',
            'creator': {
                'id': 17,
                'resource_type': 'user'
            },
            'download_all': null,
            'email': null,
            'fullname': null,
            'id': 1,
            'identity': {
                'id': 17,
                'resource_type': 'identity_email'
            },
            'locale': null,
            'location': null,
            'mailbox': {
                'id': 1,
                'resource_type': 'mailbox'
            },
            'metadata': {
                'custom': null,
                'resource_type': 'metadata',
                'system': {
                    'ipaddress': '',
                    'useragent': ''
                }
            },
            'recipients': [{
                'id': 1,
                'resource_type': 'message_recipient'
            }],
            'resource_type': 'case_message',
            'resource_url': 'http://novo/api/index.php?/v1/cases/1/messages/1',
            'response_time': 0,
            'subject': 'ERS Audit',
            'updated_at': '2015-07-09T15:36:10Z',
            'uuid': 'ff28e929-4b29-4f6f-a26a-8e352ecc23ce'
        }],
        'limit': 10,
        'logs': [{
            'level': 'NOTICE',
            'message': 'Redundant request parameters supplied: page'
        }],
        'offset': 0,
        'resource': 'case_message',
        'resources': {
            'brand': {
                '1': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'id': 1,
                    'is_enabled': true,
                    'language': {
                        'id': 1,
                        'resource_type': 'language'
                    },
                    'name': 'Default',
                    'resource_type': 'brand',
                    'resource_url': 'http://novo/api/index.php?/v1/brands/1',
                    'updated_at': '2015-07-09T15:36:10Z',
                    'url': null
                }
            },
            'field_option': {
                '10': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'fielduuid': 'a1bab57f-3c04-4dc0-9349-2dea084336b0',
                    'id': 10,
                    'resource_type': 'field_option',
                    'sort_order': 10,
                    'tag': 'learningnewthings',
                    'updated_at': '2015-07-09T15:36:10Z',
                    'value': 'learning new things'
                },
                '11': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'fielduuid': 'a1bab57f-3c04-4dc0-9349-2dea084336b0',
                    'id': 11,
                    'resource_type': 'field_option',
                    'sort_order': 11,
                    'tag': null,
                    'updated_at': '2015-07-09T15:36:10Z',
                    'value': 'other'
                },
                '9': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'fielduuid': 'a1bab57f-3c04-4dc0-9349-2dea084336b0',
                    'id': 9,
                    'resource_type': 'field_option',
                    'sort_order': 9,
                    'tag': 'googling',
                    'updated_at': '2015-07-09T15:36:10Z',
                    'value': 'googling'
                }
            },
            'identity_domain': {
                '1': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'domain': 'brew.com',
                    'id': 1,
                    'is_primary': true,
                    'is_validated': false,
                    'resource_type': 'identity_domain',
                    'resource_url': 'http://novo/api/index.php?/v1/organizations/1/identities/domains/1',
                    'updated_at': '2015-07-09T15:36:10Z'
                }
            },
            'identity_email': {
                '17': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'email': 'johndoe1894180398@brew.com',
                    'id': 17,
                    'is_notification_enabled': false,
                    'is_primary': true,
                    'is_validated': true,
                    'resource_type': 'identity_email',
                    'resource_url': 'http://novo/api/index.php?/v1/users/17/identities/emails/17',
                    'updated_at': '2015-07-09T15:36:10Z'
                },
                '22': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'email': 'johndoe2626944166@brew.com',
                    'id': 22,
                    'is_notification_enabled': false,
                    'is_primary': true,
                    'is_validated': false,
                    'resource_type': 'identity_email',
                    'resource_url': 'http://novo/api/index.php?/v1/users/22/identities/emails/22',
                    'updated_at': '2015-07-09T15:36:10Z'
                },
                '23': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'email': 'johndoe1165922667@brew.com',
                    'id': 23,
                    'is_notification_enabled': false,
                    'is_primary': true,
                    'is_validated': false,
                    'resource_type': 'identity_email',
                    'resource_url': 'http://novo/api/index.php?/v1/users/23/identities/emails/23',
                    'updated_at': '2015-07-09T15:36:10Z'
                },
                '24': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'email': 'johndoe1752011347@brew.com',
                    'id': 24,
                    'is_notification_enabled': false,
                    'is_primary': true,
                    'is_validated': false,
                    'resource_type': 'identity_email',
                    'resource_url': 'http://novo/api/index.php?/v1/users/24/identities/emails/24',
                    'updated_at': '2015-07-09T15:36:10Z'
                },
                '3': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'email': 'johndoe1867734778@brew.com',
                    'id': 3,
                    'is_notification_enabled': false,
                    'is_primary': true,
                    'is_validated': true,
                    'resource_type': 'identity_email',
                    'resource_url': 'http://novo/api/index.php?/v1/users/3/identities/emails/3',
                    'updated_at': '2015-07-09T15:36:10Z'
                },
                '6': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'email': 'johndoe1296700309@brew.com',
                    'id': 6,
                    'is_notification_enabled': false,
                    'is_primary': true,
                    'is_validated': false,
                    'resource_type': 'identity_email',
                    'resource_url': 'http://novo/api/index.php?/v1/users/6/identities/emails/6',
                    'updated_at': '2015-07-09T15:36:10Z'
                }
            },
            'language': {
                '1': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'direction': 'LTR',
                    'flag_icon': null,
                    'id': 1,
                    'is_enabled': true,
                    'locale': 'en-us',
                    'resource_type': 'language',
                    'resource_url': 'http://novo/api/index.php?/v1/languages/1',
                    'statistics': {
                        'missing': 0,
                        'outdated': 0,
                        'uptodate': 0
                    },
                    'updated_at': '2015-07-09T15:36:10Z'
                }
            },
            'mailbox': {
                '1': {
                    'address': 'support@brewfictus.com',
                    'brand': {
                        'id': 1,
                        'resource_type': 'brand'
                    },
                    'created_at': '2015-07-09T15:36:10Z',
                    'encryption': 'NONE',
                    'host': null,
                    'id': 1,
                    'is_default': false,
                    'is_enabled': true,
                    'port': null,
                    'prefix': null,
                    'preserve_mails': false,
                    'resource_type': 'mailbox',
                    'resource_url': 'http://novo/api/index.php?/v1/mailboxes/1',
                    'service': 'STANDARD',
                    'smtp_type': null,
                    'updated_at': '2015-07-09T15:36:10Z',
                    'username': null,
                    'uuid': '02a60873-8118-453c-8258-8f44029e657d'
                }
            },
            'message_recipient': {
                '1': {
                    'id': 1,
                    'identity': {
                        'id': 22,
                        'resource_type': 'identity_email'
                    },
                    'name': 'John Doe',
                    'resource_type': 'message_recipient',
                    'type': 'CC'
                },
                '2': {
                    'id': 2,
                    'identity': {
                        'id': 23,
                        'resource_type': 'identity_email'
                    },
                    'name': 'John Doe',
                    'resource_type': 'message_recipient',
                    'type': 'TO'
                },
                '3': {
                    'id': 3,
                    'identity': {
                        'id': 24,
                        'resource_type': 'identity_email'
                    },
                    'name': 'John Doe',
                    'resource_type': 'message_recipient',
                    'type': 'BCC'
                }
            },
            'organization': {
                '1': {
                    'addresses': [],
                    'created_at': '2015-07-09T15:36:10Z',
                    'custom_fields': [],
                    'domains': [{
                        'id': 1,
                        'resource_type': 'identity_domain'
                    }],
                    'followers': [],
                    'id': 1,
                    'is_shared': false,
                    'metadata': {
                        'custom': null,
                        'resource_type': 'metadata',
                        'system': null
                    },
                    'name': 'Brew',
                    'notes': [],
                    'phone': [],
                    'pinned_notes_count': 0,
                    'resource_type': 'organization',
                    'resource_url': 'http://novo/api/index.php?/v1/organizations/1',
                    'tags': [],
                    'updated_at': '2015-07-09T15:36:10Z',
                    'websites': []
                }
            },
            'role': {
                '2': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'id': 2,
                    'ip_restriction': null,
                    'is_two_factor_required': false,
                    'password_expires_in_days': '0',
                    'resource_type': 'role',
                    'resource_url': 'http://novo/api/index.php?/v1/roles/2',
                    'title': 'Agent',
                    'type': 'AGENT',
                    'updated_at': '2015-07-09T15:36:10Z'
                },
                '4': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'id': 4,
                    'ip_restriction': null,
                    'is_two_factor_required': false,
                    'password_expires_in_days': '0',
                    'resource_type': 'role',
                    'resource_url': 'http://novo/api/index.php?/v1/roles/4',
                    'title': 'Customer',
                    'type': 'CUSTOMER',
                    'updated_at': '2015-07-09T15:36:10Z'
                }
            },
            'user': {
                '17': {
                    'access_level': null,
                    'activity_at': '2015-07-09T15:36:10Z',
                    'addresses': [],
                    'alias': null,
                    'avatar': 'http://novo/index.php?/Base/Avatar/Get/999e1ab3-48fc-5e7c-a4a0-14107dcb996e/false/200',
                    'avatar_updated_at': null,
                    'created_at': '2015-07-09T15:36:10Z',
                    'custom_fields': [{
                        'field': {
                            'id': 1,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }, {
                        'field': {
                            'id': 2,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }, {
                        'field': {
                            'id': 3,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }],
                    'designation': null,
                    'emails': [{
                        'id': 17,
                        'resource_type': 'identity_email'
                    }],
                    'external_identities': [],
                    'facebook': [],
                    'followers': [],
                    'full_name': 'John Doe',
                    'greeting': null,
                    'id': 17,
                    'is_enabled': true,
                    'locale': 'en-us',
                    'metadata': {
                        'custom': null,
                        'resource_type': 'metadata',
                        'system': null
                    },
                    'notes': [],
                    'password_updated_at': '2015-07-09T15:36:10Z',
                    'phones': [],
                    'pinned_notes_count': 0,
                    'resource_type': 'user',
                    'resource_url': 'http://novo/api/index.php?/v1/users/17',
                    'role': {
                        'id': 2,
                        'resource_type': 'role'
                    },
                    'signature': null,
                    'status_message': null,
                    'tags': [],
                    'teams': [],
                    'time_zone': null,
                    'time_zone_offset': null,
                    'twitter': [],
                    'updated_at': '2015-07-09T15:36:10Z',
                    'visited_at': null,
                    'websites': []
                },
                '3': {
                    'access_level': null,
                    'activity_at': '2015-07-09T15:36:10Z',
                    'addresses': [],
                    'alias': null,
                    'avatar': 'http://novo/index.php?/Base/Avatar/Get/a6bb8433-c714-5e8d-b333-f3743c0bf878/false/200',
                    'avatar_updated_at': null,
                    'created_at': '2015-07-09T15:36:10Z',
                    'custom_fields': [{
                        'field': {
                            'id': 1,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }, {
                        'field': {
                            'id': 2,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }, {
                        'field': {
                            'id': 3,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }],
                    'designation': null,
                    'emails': [{
                        'id': 3,
                        'resource_type': 'identity_email'
                    }],
                    'external_identities': [],
                    'facebook': [],
                    'followers': [],
                    'full_name': 'John Doe',
                    'greeting': null,
                    'id': 3,
                    'is_enabled': true,
                    'locale': 'en-us',
                    'metadata': {
                        'custom': null,
                        'resource_type': 'metadata',
                        'system': null
                    },
                    'notes': [],
                    'password_updated_at': '2015-07-09T15:36:10Z',
                    'phones': [],
                    'pinned_notes_count': 0,
                    'resource_type': 'user',
                    'resource_url': 'http://novo/api/index.php?/v1/users/3',
                    'role': {
                        'id': 2,
                        'resource_type': 'role'
                    },
                    'signature': null,
                    'status_message': null,
                    'tags': [],
                    'teams': [],
                    'time_zone': null,
                    'time_zone_offset': null,
                    'twitter': [],
                    'updated_at': '2015-07-09T15:36:10Z',
                    'visited_at': null,
                    'websites': []
                },
                '6': {
                    'access_level': null,
                    'activity_at': '2015-07-09T15:36:10Z',
                    'addresses': [],
                    'alias': null,
                    'avatar': 'http://novo/index.php?/Base/Avatar/Get/d2e29f2d-616f-5abd-9bd0-70d46149efd3/false/200',
                    'avatar_updated_at': null,
                    'created_at': '2015-07-09T15:36:10Z',
                    'custom_fields': [{
                        'field': {
                            'id': 1,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }, {
                        'field': {
                            'id': 2,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }, {
                        'field': {
                            'id': 3,
                            'resource_type': 'user_field'
                        },
                        'resource_type': 'user_field_value',
                        'value': ''
                    }],
                    'designation': null,
                    'emails': [{
                        'id': 6,
                        'resource_type': 'identity_email'
                    }],
                    'external_identities': [],
                    'facebook': [],
                    'followers': [],
                    'full_name': 'John Doe',
                    'greeting': null,
                    'id': 6,
                    'is_enabled': true,
                    'locale': 'en-us',
                    'metadata': {
                        'custom': null,
                        'resource_type': 'metadata',
                        'system': null
                    },
                    'notes': [],
                    'organization': {
                        'id': 1,
                        'resource_type': 'organization'
                    },
                    'password_updated_at': '2015-07-09T15:36:10Z',
                    'phones': [],
                    'pinned_notes_count': 0,
                    'resource_type': 'user',
                    'resource_url': 'http://novo/api/index.php?/v1/users/6',
                    'role': {
                        'id': 4,
                        'resource_type': 'role'
                    },
                    'signature': null,
                    'status_message': null,
                    'tags': [],
                    'teams': [],
                    'time_zone': null,
                    'time_zone_offset': null,
                    'twitter': [],
                    'updated_at': '2015-07-09T15:36:10Z',
                    'visited_at': null,
                    'websites': []
                }
            },
            'user_field': {
                '1': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'customer_title': 'Enter the name',
                    'description': null,
                    'fielduuid': 'dd1ae5ae-890b-41f1-9c9c-53dd19951f13',
                    'id': 1,
                    'is_customer_editable': true,
                    'is_enabled': true,
                    'is_required_for_customers': true,
                    'is_system': false,
                    'is_visible_to_customers': true,
                    'key': 'enter_the_name',
                    'locales': [],
                    'options': [],
                    'regular_expression': null,
                    'resource_type': 'user_field',
                    'resource_url': 'http://novo/api/index.php?/v1/users/fields/1',
                    'sort_order': 1,
                    'title': 'Enter the name',
                    'type': 'TEXT',
                    'updated_at': '2015-07-09T15:36:10Z'
                },
                '2': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'customer_title': '1',
                    'description': null,
                    'fielduuid': '02b19e7d-782b-41da-9557-ef00ec81232d',
                    'id': 2,
                    'is_customer_editable': false,
                    'is_enabled': true,
                    'is_required_for_customers': false,
                    'is_system': false,
                    'is_visible_to_customers': true,
                    'key': 'contact_address',
                    'locales': [],
                    'options': [],
                    'regular_expression': null,
                    'resource_type': 'user_field',
                    'resource_url': 'http://novo/api/index.php?/v1/users/fields/2',
                    'sort_order': 2,
                    'title': 'contact address',
                    'type': 'TEXTAREA',
                    'updated_at': '2015-07-09T15:36:10Z'
                },
                '3': {
                    'created_at': '2015-07-09T15:36:10Z',
                    'customer_title': null,
                    'description': null,
                    'fielduuid': 'a1bab57f-3c04-4dc0-9349-2dea084336b0',
                    'id': 3,
                    'is_customer_editable': false,
                    'is_enabled': true,
                    'is_required_for_customers': false,
                    'is_system': false,
                    'is_visible_to_customers': false,
                    'key': 'interests',
                    'locales': [],
                    'options': [{
                        'id': 9,
                        'resource_type': 'field_option'
                    }, {
                        'id': 10,
                        'resource_type': 'field_option'
                    }, {
                        'id': 11,
                        'resource_type': 'field_option'
                    }],
                    'regular_expression': null,
                    'resource_type': 'user_field',
                    'resource_url': 'http://novo/api/index.php?/v1/users/fields/3',
                    'sort_order': 3,
                    'title': 'interests',
                    'type': 'CHECKBOX',
                    'updated_at': '2015-07-09T15:36:10Z'
                }
            }
        },
        'status': 200,
        'total_count': 3
    }];

});
define('frontend-cp/mirage/fixtures/casenotes', ['exports'], function (exports) {

  'use strict';

  exports['default'] = [{
    'status': 200,
    'data': [],
    'resource': 'note',
    'offset': 0,
    'limit': 10,
    'total_count': 0,
    'logs': [{
      'level': 'NOTICE',
      'message': 'To avoid long delays instead of supplying username and password with each request use just the session id'
    }]
  }];

});
define('frontend-cp/mirage/fixtures/casepriorities', ['exports'], function (exports) {

  'use strict';

  exports['default'] = [{
    'status': 200,
    'data': [{
      'id': 1,
      'label': 'Low',
      'level': 1,
      'color': null,
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_priority',
      'resource_url': 'http://novo/api/index.php?/v1/cases/priorities/1'
    }, {
      'id': 2,
      'label': 'Normal',
      'level': 2,
      'color': null,
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_priority',
      'resource_url': 'http://novo/api/index.php?/v1/cases/priorities/2'
    }, {
      'id': 3,
      'label': 'High',
      'level': 3,
      'color': null,
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_priority',
      'resource_url': 'http://novo/api/index.php?/v1/cases/priorities/3'
    }, {
      'id': 4,
      'label': 'Urgent',
      'level': 4,
      'color': null,
      'locales': [],
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_priority',
      'resource_url': 'http://novo/api/index.php?/v1/cases/priorities/4'
    }],
    'resource': 'case_priority',
    'total_count': 4
  }];

});
define('frontend-cp/mirage/fixtures/cases', ['exports'], function (exports) {

  'use strict';

  exports['default'] = [{
    'status': 200,
    'data': {
      'id': 1,
      'mask_id': 'DXX-189-28930',
      'subject': 'ERS Audit',
      'portal': null,
      'source_channel': {
        'id': '02a60873-8118-453c-8258-8f44029e657d',
        'resource_type': 'channel'
      },
      'requester': {
        'id': 2,
        'resource_type': 'user'
      },
      'creator': {
        'id': 3,
        'resource_type': 'user'
      },
      'identity': {
        'id': 2,
        'resource_type': 'identity_email'
      },
      'assignee': {
        'team': {
          'id': 3,
          'resource_type': 'team'
        }
      },
      'brand': {
        'id': 1,
        'resource_type': 'brand'
      },
      'status': {
        'id': 1,
        'resource_type': 'case_status'
      },
      'priority': {
        'id': 1,
        'resource_type': 'case_priority'
      },
      'type': {
        'id': 1,
        'resource_type': 'case_type'
      },
      'sla': {
        'id': 1,
        'resource_type': 'sla'
      },
      'sla_metrics': [{
        'title': 'FIRST_REPLY_TIME',
        'state': 'COMPLETED',
        'is_breached': false,
        'target_in_seconds': null
      }, {
        'title': 'RESOLUTION_TIME',
        'state': 'ACTIVE',
        'is_breached': false,
        'target_in_seconds': -233678
      }, {
        'title': 'NEXT_REPLY_TIME',
        'state': 'ACTIVE',
        'is_breached': false,
        'target_in_seconds': -234038
      }],
      'tags': [{
        'id': 1,
        'resource_type': 'tag'
      }, {
        'id': 2,
        'resource_type': 'tag'
      }],
      'form': {
        'id': 1,
        'resource_type': 'case_form'
      },
      'custom_fields': [{
        'field': {
          'id': 8,
          'resource_type': 'case_field'
        },
        'value': 'Madhur',
        'resource_type': 'case_field_value'
      }, {
        'field': {
          'id': 9,
          'resource_type': 'case_field'
        },
        'value': 'Second Floor, 207 Old Street, London EC1V 9NR, United Kingdom',
        'resource_type': 'case_field_value'
      }],
      'followers': [],
      'metadata': {
        'custom': null,
        'system': null,
        'resource_type': 'metadata'
      },
      'last_replier': {
        'id': 2,
        'resource_type': 'user'
      },
      'last_replier_identity': {
        'id': 2,
        'resource_type': 'identity_email'
      },
      'creation_mode': 'WEB',
      'state': 'ACTIVE',
      'post_count': 3,
      'has_notes': false,
      'pinned_notes_count': 0,
      'has_attachments': false,
      'rating': null,
      'rating_status': 'UNOFFERED',
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'last_agent_activity_at': null,
      'last_customer_activity_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case',
      'resource_url': 'http://novo/api/index.php?/v1/cases/1'
    },
    'resource': 'case',
    'resources': {
      'language': {
        '1': {
          'id': 1,
          'locale': 'en-us',
          'flag_icon': null,
          'direction': 'LTR',
          'is_enabled': true,
          'statistics': {
            'uptodate': 0,
            'outdated': 0,
            'missing': 0
          },
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'language',
          'resource_url': 'http://novo/api/index.php?/v1/languages/1'
        }
      },
      'brand': {
        '1': {
          'id': 1,
          'name': 'Default',
          'url': null,
          'language': {
            'id': 1,
            'resource_type': 'language'
          },
          'is_enabled': true,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'brand',
          'resource_url': 'http://novo/api/index.php?/v1/brands/1'
        }
      },
      'mailbox': {
        '1': {
          'id': 1,
          'uuid': '02a60873-8118-453c-8258-8f44029e657d',
          'service': 'STANDARD',
          'encryption': 'NONE',
          'address': 'support@brewfictus.com',
          'prefix': null,
          'smtp_type': null,
          'host': null,
          'port': null,
          'username': null,
          'preserve_mails': false,
          'brand': {
            'id': 1,
            'resource_type': 'brand'
          },
          'is_default': false,
          'is_enabled': true,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'mailbox',
          'resource_url': 'http://novo/api/index.php?/v1/mailboxes/1'
        }
      },
      'channel': {
        '02a60873-8118-453c-8258-8f44029e657d': {
          'uuid': '02a60873-8118-453c-8258-8f44029e657d',
          'type': 'MAILBOX',
          'character_limit': null,
          'account': {
            'id': 1,
            'resource_type': 'mailbox'
          },
          'resource_type': 'channel'
        }
      },
      'role': {
        '2': {
          'id': 2,
          'title': 'Agent',
          'type': 'AGENT',
          'ip_restriction': null,
          'password_expires_in_days': '0',
          'is_two_factor_required': false,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'role',
          'resource_url': 'http://novo/api/index.php?/v1/roles/2'
        },
        '4': {
          'id': 4,
          'title': 'Customer',
          'type': 'CUSTOMER',
          'ip_restriction': null,
          'password_expires_in_days': '0',
          'is_two_factor_required': false,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'role',
          'resource_url': 'http://novo/api/index.php?/v1/roles/4'
        }
      },
      'identity_domain': {
        '1': {
          'id': 1,
          'is_primary': true,
          'domain': 'brew.com',
          'is_validated': false,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'identity_domain',
          'resource_url': 'http://novo/api/index.php?/v1/organizations/1/identities/domains/1'
        }
      },
      'organization': {
        '1': {
          'id': 1,
          'name': 'Brew',
          'is_shared': false,
          'domains': [{
            'id': 1,
            'resource_type': 'identity_domain'
          }],
          'phone': [],
          'addresses': [],
          'websites': [],
          'notes': [],
          'pinned_notes_count': 0,
          'tags': [],
          'custom_fields': [],
          'followers': [],
          'metadata': {
            'custom': null,
            'system': null,
            'resource_type': 'metadata'
          },
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'organization',
          'resource_url': 'http://novo/api/index.php?/v1/organizations/1'
        }
      },
      'identity_email': {
        '2': {
          'id': 2,
          'is_primary': true,
          'email': 'johndoe2877832066@brew.com',
          'is_notification_enabled': false,
          'is_validated': false,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'identity_email',
          'resource_url': 'http://novo/api/index.php?/v1/users/2/identities/emails/2'
        },
        '3': {
          'id': 3,
          'is_primary': true,
          'email': 'johndoe1867734778@brew.com',
          'is_notification_enabled': false,
          'is_validated': true,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'identity_email',
          'resource_url': 'http://novo/api/index.php?/v1/users/3/identities/emails/3'
        }
      },
      'user_field': {
        '1': {
          'id': 1,
          'fielduuid': 'dd1ae5ae-890b-41f1-9c9c-53dd19951f13',
          'type': 'TEXT',
          'key': 'enter_the_name',
          'title': 'Enter the name',
          'is_visible_to_customers': true,
          'customer_title': 'Enter the name',
          'is_customer_editable': true,
          'is_required_for_customers': true,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 1,
          'is_system': false,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'user_field',
          'resource_url': 'http://novo/api/index.php?/v1/users/fields/1'
        },
        '2': {
          'id': 2,
          'fielduuid': '02b19e7d-782b-41da-9557-ef00ec81232d',
          'type': 'TEXTAREA',
          'key': 'contact_address',
          'title': 'contact address',
          'is_visible_to_customers': true,
          'customer_title': '1',
          'is_customer_editable': false,
          'is_required_for_customers': false,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 2,
          'is_system': false,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'user_field',
          'resource_url': 'http://novo/api/index.php?/v1/users/fields/2'
        },
        '3': {
          'id': 3,
          'fielduuid': 'a1bab57f-3c04-4dc0-9349-2dea084336b0',
          'type': 'CHECKBOX',
          'key': 'interests',
          'title': 'interests',
          'is_visible_to_customers': false,
          'customer_title': null,
          'is_customer_editable': false,
          'is_required_for_customers': false,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 3,
          'is_system': false,
          'options': [{
            'id': 9,
            'resource_type': 'field_option'
          }, {
            'id': 10,
            'resource_type': 'field_option'
          }, {
            'id': 11,
            'resource_type': 'field_option'
          }],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'user_field',
          'resource_url': 'http://novo/api/index.php?/v1/users/fields/3'
        }
      },
      'field_option': {
        '9': {
          'id': 9,
          'fielduuid': 'a1bab57f-3c04-4dc0-9349-2dea084336b0',
          'value': 'googling',
          'tag': 'googling',
          'sort_order': 9,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '10': {
          'id': 10,
          'fielduuid': 'a1bab57f-3c04-4dc0-9349-2dea084336b0',
          'value': 'learning new things',
          'tag': 'learningnewthings',
          'sort_order': 10,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        },
        '11': {
          'id': 11,
          'fielduuid': 'a1bab57f-3c04-4dc0-9349-2dea084336b0',
          'value': 'other',
          'tag': null,
          'sort_order': 11,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'field_option'
        }
      },
      'user': {
        '2': {
          'id': 2,
          'full_name': 'John Doe',
          'designation': null,
          'alias': null,
          'is_enabled': true,
          'role': {
            'id': 4,
            'resource_type': 'role'
          },
          'avatar': 'http://novo/index.php?/Base/Avatar/Get/2dff63d1-bf25-54f6-ba6c-cc344e67f4e1/false/200',
          'organization': {
            'id': 1,
            'resource_type': 'organization'
          },
          'teams': [],
          'emails': [{
            'id': 2,
            'resource_type': 'identity_email'
          }],
          'phones': [],
          'twitter': [],
          'facebook': [],
          'external_identities': [],
          'addresses': [],
          'websites': [],
          'custom_fields': [{
            'field': {
              'id': 1,
              'resource_type': 'user_field'
            },
            'value': '',
            'resource_type': 'user_field_value'
          }, {
            'field': {
              'id': 2,
              'resource_type': 'user_field'
            },
            'value': '',
            'resource_type': 'user_field_value'
          }, {
            'field': {
              'id': 3,
              'resource_type': 'user_field'
            },
            'value': '',
            'resource_type': 'user_field_value'
          }],
          'metadata': {
            'custom': null,
            'system': null,
            'resource_type': 'metadata'
          },
          'locale': 'en-us',
          'time_zone': null,
          'time_zone_offset': null,
          'greeting': null,
          'signature': null,
          'status_message': null,
          'tags': [],
          'notes': [],
          'pinned_notes_count': 0,
          'followers': [],
          'access_level': null,
          'password_updated_at': '2015-07-09T15:36:10Z',
          'avatar_updated_at': null,
          'activity_at': '2015-07-09T15:36:10Z',
          'visited_at': null,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'user',
          'resource_url': 'http://novo/api/index.php?/v1/users/2'
        },
        '3': {
          'id': 3,
          'full_name': 'John Doe',
          'designation': null,
          'alias': null,
          'is_enabled': true,
          'role': {
            'id': 2,
            'resource_type': 'role'
          },
          'avatar': 'http://novo/index.php?/Base/Avatar/Get/a6bb8433-c714-5e8d-b333-f3743c0bf878/false/200',
          'teams': [],
          'emails': [{
            'id': 3,
            'resource_type': 'identity_email'
          }],
          'phones': [],
          'twitter': [],
          'facebook': [],
          'external_identities': [],
          'addresses': [],
          'websites': [],
          'custom_fields': [{
            'field': {
              'id': 1,
              'resource_type': 'user_field'
            },
            'value': '',
            'resource_type': 'user_field_value'
          }, {
            'field': {
              'id': 2,
              'resource_type': 'user_field'
            },
            'value': '',
            'resource_type': 'user_field_value'
          }, {
            'field': {
              'id': 3,
              'resource_type': 'user_field'
            },
            'value': '',
            'resource_type': 'user_field_value'
          }],
          'metadata': {
            'custom': null,
            'system': null,
            'resource_type': 'metadata'
          },
          'locale': 'en-us',
          'time_zone': null,
          'time_zone_offset': null,
          'greeting': null,
          'signature': null,
          'status_message': null,
          'tags': [],
          'notes': [],
          'pinned_notes_count': 0,
          'followers': [],
          'access_level': null,
          'password_updated_at': '2015-07-09T15:36:10Z',
          'avatar_updated_at': null,
          'activity_at': '2015-07-09T15:36:10Z',
          'visited_at': null,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'user',
          'resource_url': 'http://novo/api/index.php?/v1/users/3'
        }
      },
      'business_hour': {
        '1': {
          'id': 1,
          'title': 'Default Business Hours',
          'zones': {
            'monday': [9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
            'tuesday': [9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
            'wednesday': [9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
            'thursday': [9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
            'friday': [9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
            'saturday': [],
            'sunday': []
          },
          'holidays': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'business_hour',
          'resource_url': 'http://novo/api/index.php?/v1/businesshours/1'
        }
      },
      'team': {
        '3': {
          'id': 3,
          'title': 'Finance',
          'businesshour': {
            'id': 1,
            'resource_type': 'business_hour'
          },
          'followers': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': null,
          'resource_type': 'team',
          'resource_url': 'http://novo/api/index.php?/v1/teams/3'
        }
      },
      'case_status': {
        '1': {
          'id': 1,
          'label': 'New',
          'color': null,
          'visibility': 'PUBLIC',
          'type': 'NEW',
          'locales': [],
          'is_sla_active': true,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_status',
          'resource_url': 'http://novo/api/index.php?/v1/cases/statuses/1'
        }
      },
      'case_priority': {
        '1': {
          'id': 1,
          'label': 'Low',
          'level': 1,
          'color': null,
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_priority',
          'resource_url': 'http://novo/api/index.php?/v1/cases/priorities/1'
        }
      },
      'case_type': {
        '1': {
          'id': 1,
          'label': 'Question',
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_type',
          'resource_url': 'http://novo/api/index.php?/v1/cases/types/1'
        }
      },
      'sla': {
        '1': {
          'id': 1,
          'title': 'Regular support and sales tickets',
          'description': null,
          'is_enabled': true,
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'sla',
          'resource_url': 'http://novo/api/index.php?/v1/sla/1'
        }
      },
      'tag': {
        '1': {
          'id': 1,
          'name': 'connectivity',
          'resource_type': 'tag'
        },
        '2': {
          'id': 2,
          'name': 'bug',
          'resource_type': 'tag'
        }
      },
      'case_field': {
        '1': {
          'id': 1,
          'fielduuid': 'e6bb2845-4b85-455a-9828-07596d9bb506',
          'type': 'SUBJECT',
          'key': 'subject',
          'title': 'Subject',
          'is_required_for_agents': true,
          'is_required_on_resolution': true,
          'is_visible_to_customers': true,
          'customer_title': 'Subject',
          'is_customer_editable': true,
          'is_required_for_customers': true,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 1,
          'is_system': true,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/1'
        },
        '2': {
          'id': 2,
          'fielduuid': '6df564a1-12c1-499e-8cb0-85dc9dea183b',
          'type': 'MESSAGE',
          'key': 'message',
          'title': 'Message',
          'is_required_for_agents': false,
          'is_required_on_resolution': true,
          'is_visible_to_customers': true,
          'customer_title': 'Message',
          'is_customer_editable': true,
          'is_required_for_customers': true,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 2,
          'is_system': true,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/2'
        },
        '3': {
          'id': 3,
          'fielduuid': '802b6d93-7a4f-4791-aefc-f7d53ea348f5',
          'type': 'PRIORITY',
          'key': 'priority',
          'title': 'Priority',
          'is_required_for_agents': false,
          'is_required_on_resolution': false,
          'is_visible_to_customers': true,
          'customer_title': 'Priority',
          'is_customer_editable': true,
          'is_required_for_customers': false,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 3,
          'is_system': true,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/3'
        },
        '4': {
          'id': 4,
          'fielduuid': 'f0ec45ee-4ef9-4a13-bbc6-1d2e14d5726b',
          'type': 'STATUS',
          'key': 'status',
          'title': 'Status',
          'is_required_for_agents': false,
          'is_required_on_resolution': true,
          'is_visible_to_customers': true,
          'customer_title': 'Priority',
          'is_customer_editable': false,
          'is_required_for_customers': false,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 4,
          'is_system': true,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/4'
        },
        '5': {
          'id': 5,
          'fielduuid': 'e8de6e9e-f178-469c-8008-e1096357ac0f',
          'type': 'TYPE',
          'key': 'type',
          'title': 'Type',
          'is_required_for_agents': false,
          'is_required_on_resolution': false,
          'is_visible_to_customers': false,
          'customer_title': 'Type',
          'is_customer_editable': false,
          'is_required_for_customers': false,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 5,
          'is_system': true,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/5'
        },
        '6': {
          'id': 6,
          'fielduuid': 'a3b1a651-23b1-41dc-815a-e560b8940fc7',
          'type': 'TEAM',
          'key': 'team',
          'title': 'Team',
          'is_required_for_agents': false,
          'is_required_on_resolution': false,
          'is_visible_to_customers': false,
          'customer_title': 'Team',
          'is_customer_editable': false,
          'is_required_for_customers': false,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 6,
          'is_system': true,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/6'
        },
        '7': {
          'id': 7,
          'fielduuid': '307fad7a-fe29-499a-9279-e1fdc7f14582',
          'type': 'ASSIGNEE',
          'key': 'assignee',
          'title': 'Assignee',
          'is_required_for_agents': false,
          'is_required_on_resolution': false,
          'is_visible_to_customers': false,
          'customer_title': 'Assignee',
          'is_customer_editable': false,
          'is_required_for_customers': false,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 7,
          'is_system': true,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/7'
        },
        '8': {
          'id': 8,
          'fielduuid': '30f9d670-ab63-48a6-a331-98460e7ff281',
          'type': 'TEXT',
          'key': 'enter_the_name',
          'title': 'Enter the name',
          'is_required_for_agents': false,
          'is_required_on_resolution': true,
          'is_visible_to_customers': true,
          'customer_title': 'Enter the name',
          'is_customer_editable': true,
          'is_required_for_customers': true,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 8,
          'is_system': false,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/8'
        },
        '9': {
          'id': 9,
          'fielduuid': '969fe14e-fe94-4eba-ad76-384c2469913f',
          'type': 'TEXTAREA',
          'key': 'contact_address',
          'title': 'contact address',
          'is_required_for_agents': false,
          'is_required_on_resolution': true,
          'is_visible_to_customers': true,
          'customer_title': '1',
          'is_customer_editable': false,
          'is_required_for_customers': false,
          'description': null,
          'is_enabled': true,
          'regular_expression': null,
          'sort_order': 9,
          'is_system': false,
          'options': [],
          'locales': [],
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_field',
          'resource_url': 'http://novo/api/index.php?/v1/cases/fields/9'
        }
      },
      'case_form': {
        '1': {
          'id': 1,
          'title': 'Internet Related Issue',
          'is_visible_to_customers': true,
          'customer_title': 'Internet Related Issue',
          'description': null,
          'is_enabled': true,
          'is_default': false,
          'sort_order': 1,
          'fields': [{
            'id': 1,
            'resource_type': 'case_field'
          }, {
            'id': 2,
            'resource_type': 'case_field'
          }, {
            'id': 3,
            'resource_type': 'case_field'
          }, {
            'id': 4,
            'resource_type': 'case_field'
          }, {
            'id': 5,
            'resource_type': 'case_field'
          }, {
            'id': 6,
            'resource_type': 'case_field'
          }, {
            'id': 7,
            'resource_type': 'case_field'
          }, {
            'id': 8,
            'resource_type': 'case_field'
          }, {
            'id': 9,
            'resource_type': 'case_field'
          }],
          'brand': {
            'id': 1,
            'resource_type': 'brand'
          },
          'created_at': '2015-07-09T15:36:10Z',
          'updated_at': '2015-07-09T15:36:10Z',
          'resource_type': 'case_form',
          'resource_url': 'http://novo/api/index.php?/v1/cases/forms/1'
        }
      }
    }
  }];

});
define('frontend-cp/mirage/fixtures/casestatuses', ['exports'], function (exports) {

  'use strict';

  exports['default'] = [{
    'status': 200,
    'data': [{
      'id': 1,
      'label': 'New',
      'color': null,
      'visibility': 'PUBLIC',
      'type': 'NEW',
      'locales': [],
      'is_sla_active': true,
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_status',
      'resource_url': 'http://novo/api/index.php?/v1/cases/statuses/1'
    }, {
      'id': 2,
      'label': 'Open',
      'color': null,
      'visibility': 'PUBLIC',
      'type': 'OPEN',
      'locales': [],
      'is_sla_active': true,
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_status',
      'resource_url': 'http://novo/api/index.php?/v1/cases/statuses/2'
    }, {
      'id': 3,
      'label': 'Pending',
      'color': null,
      'visibility': 'PUBLIC',
      'type': 'PENDING',
      'locales': [],
      'is_sla_active': true,
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_status',
      'resource_url': 'http://novo/api/index.php?/v1/cases/statuses/3'
    }, {
      'id': 4,
      'label': 'Completed',
      'color': null,
      'visibility': 'PUBLIC',
      'type': 'COMPLETED',
      'locales': [],
      'is_sla_active': true,
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_status',
      'resource_url': 'http://novo/api/index.php?/v1/cases/statuses/4'
    }, {
      'id': 5,
      'label': 'Closed',
      'color': null,
      'visibility': 'PUBLIC',
      'type': 'CLOSED',
      'locales': [],
      'is_sla_active': true,
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_status',
      'resource_url': 'http://novo/api/index.php?/v1/cases/statuses/5'
    }],
    'resource': 'case_status',
    'total_count': 5
  }];

});
define('frontend-cp/mirage/fixtures/casetypes', ['exports'], function (exports) {

  'use strict';

  exports['default'] = [{
    'status': 200,
    'data': [{
      'id': 1,
      'label': 'Question',
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_type',
      'resource_url': 'http://novo/api/index.php?/v1/cases/types/1'
    }, {
      'id': 2,
      'label': 'Task',
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_type',
      'resource_url': 'http://novo/api/index.php?/v1/cases/types/2'
    }, {
      'id': 3,
      'label': 'Problem',
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_type',
      'resource_url': 'http://novo/api/index.php?/v1/cases/types/3'
    }, {
      'id': 4,
      'label': 'Incident',
      'created_at': '2015-07-09T15:36:10Z',
      'updated_at': '2015-07-09T15:36:10Z',
      'resource_type': 'case_type',
      'resource_url': 'http://novo/api/index.php?/v1/cases/types/4'
    }],
    'resource': 'case_type',
    'total_count': 4
  }];

});
define('frontend-cp/mirage/fixtures/enusstrings', ['exports'], function (exports) {

  'use strict';

  exports['default'] = [{
    status: 200,
    data: [{
      id: 'frontend.api.admin.navigation.apps',
      value: 'Apps',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.navigation.manage',
      value: 'Manage',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.administration',
      value: 'Administration',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.apps',
      value: 'Apps',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.endpoints',
      value: 'Endpoints',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms',
      value: 'Case Forms',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.buttons.add_new_caseform',
      value: 'Add new form',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.headings.enabled_fields',
      value: 'Enabled Fields',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.headings.disabled_fields',
      value: 'Disabled Fields',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.heading.customer_settings',
      value: 'Customers',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.heading.configure_form',
      value: 'Configure Form',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.new.heading',
      value: 'Case Forms / New',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.edit.heading',
      value: 'Case Forms / Edit',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.heading.agent_settings',
      value: 'Agents',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.label.field_title',
      value: 'Form title for agents',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.label.is_visible_to_customers',
      value: 'Customers can see and select this form',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.help.is_visible_to_customers',
      value: 'When customers can see and select case forms, they will be able to select a case form when submitting a new request in the Help Center. This means that case forms can be used to direct customers to create different types of request and to provide specific pieces of information for that request type.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.label.customer_form_title',
      value: 'Form title for customers',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.label.customer_form_description',
      value: 'Form description for customers',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.help.api_key',
      value: 'The field key is unique to this form and is used to reference fields using the Kayako API and in search.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.help.configure_fields',
      value: 'System fields are included in each case form by default. Add and arrange custom case fields to the case form below. You can manage case fields in the [Case fields] section.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.label.add_new_field',
      value: 'Add new field',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.caseforms.remove_from_form',
      value: 'Remove from form',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields',
      value: 'Case Fields',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.headings.enabled_fields',
      value: 'Enabled Fields',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.headings.disabled_fields',
      value: 'Disabled Fields',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.heading.priorities',
      value: 'Priorities',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.text.name',
      value: 'Text',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.text.description',
      value: 'This is a text field',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.multiline.name',
      value: 'Multiline Text',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.multiline.description',
      value: 'Multiline - a text field on two lines!',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.regex.name',
      value: 'Regular expression',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.regex.description',
      value: 'Choose a regular expression to validate this fied type',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.radio.name',
      value: 'Radio box',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.radio.description',
      value: 'Single select radio box',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.dropdown.name',
      value: 'Dropdown box',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.dropdown.description',
      value: 'Single select drop down box',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.numeric.name',
      value: 'Numeric field',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.numeric.description',
      value: 'Enforce a numeric value',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.decimal.name',
      value: 'Decimal field',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.decimal.description',
      value: 'Enforce a decimal value',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.file.name',
      value: 'File',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.file.description',
      value: 'Allow a file upload',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.yesno.name',
      value: 'Yes/No',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.yesno.description',
      value: 'Allow a yes or no choice',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.date.name',
      value: 'Date field',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.date.description',
      value: 'Allow a user to select a date using a date picker',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.checkbox.name',
      value: 'Checkbox',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.checkbox.description',
      value: 'Checkbox! Check yourself',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.priority.name',
      value: 'Priority',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.team.name',
      value: 'Team',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.assignee.name',
      value: 'Assignee',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.type.name',
      value: 'Type',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.status.name',
      value: 'Status',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.subject.name',
      value: 'Subject',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.message.name',
      value: 'Message',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.select.name',
      value: 'Select',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.type.select.description',
      value: 'Selecta',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.buttons.add_new_casefield',
      value: 'Add New Field',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.description',
      value: 'Lorem ipsum dolor sit amet, diam appetere facilisis at pri, his vocibus iudicabit te. Te decore feugiat necessitatibus nec, id eos fugit dicunt. Vis ei ubique blandit, in vidit maiestatis disputationi vix, essent perpetua interesset ei mea. Et mea ubique feugait, ne nam unum clita, no his indoctum conclusionemque. Ad pri aperiri definitionem, nec ei dictas blandit.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.new.heading',
      value: 'Case Fields / New',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.heading',
      value: 'Case Fields / Edit',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.heading.agent_settings',
      value: 'Agent Settings',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.heading.customer_settings',
      value: 'Customer Settings',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.heading.field_options',
      value: 'Field Options',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.heading.field_settings',
      value: 'Field Settings',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.heading.regex',
      value: 'Regular Expression',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.is_required_for_agents_when_updating_case',
      value: 'Creating, replying to or updating a case',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.is_required_for_agents_when_resolving_case',
      value: 'Resolving a case',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.field_title',
      value: 'Field title',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.help.field_title',
      value: 'This is the title that is displayed to your agents',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.is_visible_to_customers',
      value: 'Customers can see this field',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.is_required_for_agents',
      value: 'For agents, this field is required when',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.customer_field_title',
      value: 'Field title for customers',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.customer_field_description',
      value: 'Field description for customers',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.help.customer_field_description',
      value: 'Enter an optional description into this field that will be show to customers in the help center',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.is_editable_by_customers',
      value: 'Customers can edit this field',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.help.is_editable_by_customers',
      value: 'Enable this setting to allow your customers to change the value of this field from the Help Center or through the API.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.is_required_for_customers',
      value: 'This field is required for customers',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.help.is_required_for_customers',
      value: 'Enable this setting to require your customers to complete thi field when creating or updating a case from the Help Center or through the API.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.api_key',
      value: 'API field key',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.help.api_key',
      value: 'The field key is unique to this field and is used to reference fields using the Kayako API and in search.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.help.is_enabled',
      value: 'Disabled case fields will not be available on cases or case forms, but any existing data will still be searchable and can be referenced in reporting.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.edit.label.priorities',
      value: 'The order of priorities matter: your priorities should go from highest to lowest. If you remove a priority, all cases using that priority will be set to no priority.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.casefields.help.regex',
      value: 'Enter a regular expression that will be evaluated against your users input. If the regular expression evaluates to false, the input will be deemed invalid.',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.subject',
      value: 'Cases: Subject',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.casestatusid',
      value: 'Cases: Status',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.casetypeid',
      value: 'Cases: Type',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.casepriorityid',
      value: 'Cases: Priority ID',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.brandid',
      value: 'Cases: Brand',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.assigneeteamid',
      value: 'Cases: Assigned Agent Team',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.assigneeagentid',
      value: 'Cases: Assigned Agent',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.requesterid',
      value: 'Cases: Requester',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.taglinks.tagid',
      value: 'Tag',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.users.organizationid',
      value: 'Users: Organisation',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.cases.postcount',
      value: 'Cases: Number of posts',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.string_contains',
      value: 'String contains',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.string_does_not_contain',
      value: 'String does not contain',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.comparison_equalto',
      value: 'is equal to',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.comparison_not_equalto',
      value: 'is not equal to',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.comparison_lessthan',
      value: 'is less than',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.comparison_greaterthan',
      value: 'is greater than',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.collection_contains_insensitive',
      value: 'contains (case insensitive)',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.collection_does_not_contain_insensitive',
      value: 'does not contain (case insensitive)',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.admin.predicate_builder.operators.collection_contains_any_insensitive',
      value: 'contains any (case insensitive)',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.activity',
      value: 'Activity',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.addparticipant',
      value: 'Add a participant',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.linkedCasesInline',
      value: 'Link a case',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.assignee',
      value: 'Assignee',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.cases',
      value: 'Cases',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.due',
      value: 'Due',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.lastreplier',
      value: 'Last replier',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.lastupdated',
      value: 'Last updated {time}',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.metric.total',
      value: '{number, number} Total',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.metric.unresolved',
      value: 'Unresolved',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.newtag',
      value: 'New Tag',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.note',
      value: 'Note',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.priority',
      value: 'Priority',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.requester',
      value: 'Requester',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.status',
      value: 'Status',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.subheader',
      value: '{time, date, medium} – {time, time, short} created via {channel}{hasBrand, select,\n    true {, {brand}}\n    false {}\n  }',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.subject',
      value: 'Subject',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.submit',
      value: 'Submit',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.ticketid',
      value: 'Ticket ID',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.type',
      value: 'Type',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.applymacro',
      value: 'Apply Macro',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.applymacroplaceholder',
      value: 'Type to search macros',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.channelType.MAILBOX',
      value: 'email',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.channelType.TWITTER',
      value: 'Twitter',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.channelType.FACEBOOK',
      value: 'Facebook',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.cases.field_title.requester',
      value: 'Requester',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.feed.replied',
      value: 'replied {ago}',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.next',
      value: 'Next',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.close',
      value: 'close',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.datepicker.clear',
      value: 'Clear',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.datepicker.close',
      value: 'Close',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.datepicker.today',
      value: 'Today',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.filesize',
      value: '{size, number, filesize} {unit, select,\n    mb {MB}\n    kb {KB}\n  }',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.logout',
      value: 'logout',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.paginatorof',
      value: 'of {number, number}',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.popover.next',
      value: 'next',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.popover.previous',
      value: 'previous',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.search',
      value: 'Search helpdesk...',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.attachment',
      value: 'Attachment',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.authorship',
      value: 'Authorship',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.cc',
      value: 'CC',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.billing',
      value: 'Billing',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.bold',
      value: 'Bold',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.bullet',
      value: 'Bullet',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.image',
      value: 'Image',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.italic',
      value: 'Italic',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.link',
      value: 'Link',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.list',
      value: 'List',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.texteditor.notes_reminder',
      value: 'This private note will only be seen by agents',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.users',
      value: 'Users',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.enable',
      value: 'Enable',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.enabled',
      value: 'Enabled',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.disable',
      value: 'Disable',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.disabled',
      value: 'Disabled',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.delete',
      value: 'Delete',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.edit',
      value: 'Edit',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.default',
      value: 'Default',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.profile.position',
      value: '{position}',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.profile.place',
      value: '{place}',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.profile.openCases',
      value: '{number} Open Cases',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.profile.time',
      value: 'Currently, {time}',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.profile.follow',
      value: 'Follow',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.profile.unfollow',
      value: 'Unfollow',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.profile.viewProfile',
      value: 'View Profile',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.make_default',
      value: 'Make default',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.save',
      value: 'Save',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.cancel',
      value: 'Cancel',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.and',
      value: 'And',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.or',
      value: 'Or',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.day_abbreviation',
      value: 'd',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.hour_abbreviation',
      value: 'h',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.minute_abbreviation',
      value: 'm',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.SLA',
      value: 'SLA',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.confirm.delete',
      value: 'Are you sure you want to delete this',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.generic.confirm.lose_changes',
      value: 'You have unsaved changes on this page Are you sure you want to discard these changes?',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.back',
      value: '« Back',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.email',
      value: 'Email',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.forgot',
      value: 'Forgot password?',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.login',
      value: 'Login',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.newpassword',
      value: 'New Password',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.password',
      value: 'Password',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.repeatpassword',
      value: 'Password (repeat)',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.resetpassword',
      value: 'Reset your password',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.login.welcome',
      value: 'Welcome to Kayako',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.search.no-results',
      value: 'No results found',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.search.placeholder',
      value: 'Search...',
      'resource_type': 'locale_string'
    }, {
      id: 'frontend.api.users.addnewuser',
      value: 'Add New User',
      'resource_type': 'locale_string'
    }],
    resource: 'locale_string'
  }];

});
define('frontend-cp/mirage/fixtures/views', ['exports'], function (exports) {

  'use strict';

  exports['default'] = [{
    'data': [{
      'columns': [{
        'name': 'id',
        'resource_type': 'column'
      }, {
        'name': 'subject',
        'resource_type': 'column'
      }, {
        'name': 'status',
        'resource_type': 'column'
      }, {
        'name': 'assignee',
        'resource_type': 'column'
      }, {
        'name': 'requester',
        'resource_type': 'column'
      }],
      'created_at': '2015-07-21T14:24:09Z',
      'id': 1,
      'is_default': true,
      'is_enabled': true,
      'order_by': 'ASC',
      'order_by_column': 'id',
      'predicate_collections': [{
        'id': 'd2cc8164-6567-4023-9689-0f6e89e6d5a3',
        'resource_type': 'predicate_collection'
      }, {
        'id': 'dc4b3a90-83f2-4ac2-a3b6-f0c3b32f8c98',
        'resource_type': 'predicate_collection'
      }],
      'resource_type': 'view',
      'resource_url': 'http://novo/api/index.php?/v1/views/1',
      'title': 'Inbox',
      'updated_at': '2015-07-21T14:24:09Z',
      'visibility_to_teams': [],
      'visibility_type': 'ALL'
    }],
    'limit': 10,
    'offset': 0,
    'resource': 'view',
    'resources': {
      'predicate_collection': {
        'd2cc8164-6567-4023-9689-0f6e89e6d5a3': {
          'operator': 'OR',
          'propositions': [{
            'field': 'cases.casestatusid',
            'operator': 'comparison_equalto',
            'resource_type': 'proposition',
            'value': '1'
          }, {
            'field': 'cases.casestatusid',
            'operator': 'comparison_equalto',
            'resource_type': 'proposition',
            'value': '2'
          }],
          'resource_type': 'predicate_collection',
          'uuid': 'd2cc8164-6567-4023-9689-0f6e89e6d5a3'
        },
        'dc4b3a90-83f2-4ac2-a3b6-f0c3b32f8c98': {
          'operator': 'OR',
          'propositions': [{
            'field': 'cases.assigneeteamid',
            'operator': 'comparison_equalto',
            'resource_type': 'proposition',
            'value': '0'
          }, {
            'field': 'cases.assigneeagentid',
            'operator': 'comparison_equalto',
            'resource_type': 'proposition',
            'value': '-1'
          }, {
            'field': 'cases.assigneeteamid',
            'operator': 'comparison_equalto',
            'resource_type': 'proposition',
            'value': '-2'
          }],
          'resource_type': 'predicate_collection',
          'uuid': 'dc4b3a90-83f2-4ac2-a3b6-f0c3b32f8c98'
        }
      }
    },
    'session_id': 'elalu1lDneXAzAmO01LtjyvNKbrb28034758317e047682bec73a05884c500725a788D7w1Kvkyef7TgAPXczQqbrvHsKuy0f',
    'status': 200,
    'total_count': 1
  }];

});
define('frontend-cp/mixins/breadcrumbable', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Mixin.create({
    urlService: Ember['default'].inject.service('url'),

    activeBreadcrumb: (function () {
      var breadcrumbs = this.get('breadcrumbs');
      if (!breadcrumbs) {
        return null;
      }
      var currentPath = this.get('urlService.currentPath');

      if (!currentPath) {
        return null;
      }

      var selected = breadcrumbs.find(function (breadcrumb) {
        return currentPath.indexOf(breadcrumb.route) === 0;
      });

      return selected ? selected.id : null;
    }).property('urlService.currentPath', 'breadcrumbs'),

    setBreadcrumb: function setBreadcrumb(id) {
      var breadcrumb = this.get('breadcrumbs').find(function (breadcrumb) {
        return breadcrumb.id === id;
      });
      this.transitionToRoute(breadcrumb.route);
    },

    actions: {
      breadcrumbChange: function breadcrumbChange(id) {
        this.setBreadcrumb(id);
      }
    }
  });

});
define('frontend-cp/mixins/change-aware-model', ['exports', 'ember', 'npm:lodash'], function (exports, Ember, _) {

  'use strict';

  exports['default'] = Ember['default'].Mixin.create({
    initialRelationships: [],

    // build an array of all relationships whenever the model is loaded
    // so we can check against them to see if any have been added or removed
    cacheRelationships: function cacheRelationships() {
      var _this = this;

      var initialRelationships = {};
      this.eachRelationship(function (name, meta) {
        if (meta.options.noCache) {
          return;
        }
        var relationship = _this.get(name);
        initialRelationships[name] = null;

        if (relationship) {
          if (typeof relationship.forEach === 'function') {
            initialRelationships[name] = [];
            relationship.forEach(function (relatedObject) {
              initialRelationships[name].pushObject(relatedObject);
            });
          } else {
            initialRelationships[name] = relationship;
          }
        }
      });
      this.set('initialRelationships', initialRelationships);
    },

    initialize: (function () {
      this.cacheRelationships();
    }).on('didUpdate', 'ready'),

    hasDirtyBelongsToRelationship: function hasDirtyBelongsToRelationship(relationshipKey) {
      var initialRelationships = this.get('initialRelationships');
      var initialRelationshipId = initialRelationships[relationshipKey];
      var currentRelationshipId = this.get(relationshipKey);

      return initialRelationshipId !== currentRelationshipId;
    },

    hasDirtyHasManyRelationship: function hasDirtyHasManyRelationship(relationshipKey) {
      var initialRelationships = this.get('initialRelationships');
      var initialRelationship = initialRelationships[relationshipKey];
      var currentRelationship = this.get(relationshipKey);

      if (initialRelationship.length !== currentRelationship.length) {
        return true;
      }

      return currentRelationship.some(function (relationship, index) {
        return relationship !== initialRelationship[index];
      });
    },

    hasDirtyAttribute: function hasDirtyAttribute(attributeName) {
      var changedAttributes = Object.keys(this.changedAttributes());
      return changedAttributes.indexOf(attributeName) !== -1;
    },

    /*
     * Checks model for changed attributes, then
     * checks all model relationships for dirty attributes
     */
    hasDirtyChanges: function hasDirtyChanges() {
      return this.hasChangesToSelf() || this.hasNewOrDirtyRelations() || this.hasDeletedRelationships();
    },

    hasChangesToSelf: function hasChangesToSelf() {
      var changes = this.changedAttributes();

      // if there is no ID, and the only change is to a sort
      // order, we never want to mark this as dirty
      if (!this.get('id') && changes.sortOrder) {
        delete changes.sortOrder;
      }

      return !_['default'].isEmpty(changes);
    },

    hasNewOrDirtyRelations: function hasNewOrDirtyRelations() {
      var _this2 = this;

      var initialRelationships = this.get('initialRelationships');
      var hasChanges = false;

      this.eachRelationship(function (name, descriptor) {
        if (descriptor.options.noCache) {
          return;
        }
        var relationshipObject = _this2.get(descriptor.key);

        if (descriptor.kind === 'hasMany') {
          relationshipObject.forEach(function (relationshipObj) {
            // only check if the relationship model has the change-aware mixin
            if (typeof relationshipObj.hasDirtyChanges === 'function' && relationshipObj.hasDirtyChanges()) {
              hasChanges = true;
            }

            //check relation isn't a new addition
            if (initialRelationships[descriptor.key].indexOf(relationshipObj) === -1) {
              hasChanges = true;
            }
          });
        } else if (descriptor.kind === 'belongsTo') {
          var _relationshipObject = _this2.get(descriptor.key);

          // only check if the relationship model has the change-aware mixin
          if (typeof _relationshipObject.hasDirtyChanges === 'function') {
            if (_relationshipObject.hasDirtyChanges()) {
              hasChanges = true;
            }
          }
        }
      });

      return hasChanges;
    },

    hasDeletedRelationships: function hasDeletedRelationships() {
      var _this3 = this;

      var hasChanges = false;
      var initialRelationships = this.get('initialRelationships');

      Object.keys(initialRelationships).forEach(function (relationshipName) {

        if (hasChanges) {
          // we only need one change - exit early if we've found one
          return;
        }

        var currentRelatedObjects = _this3.get(relationshipName);

        if (typeof currentRelatedObjects.forEach === 'function') {
          // hasMany relationship
          initialRelationships[relationshipName].forEach(function (relatedObject) {
            if (currentRelatedObjects.indexOf(relatedObject) === -1) {
              hasChanges = true;
            }
          });
        } else {
          //belongsTo relationship
          if (currentRelatedObjects !== initialRelationships[relationshipName]) {
            hasChanges = true;
          }
        }
      });

      return hasChanges;
    }
  });

});
define('frontend-cp/mixins/pusher-binding', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Mixin.create({
    pusher: Ember['default'].inject.service(),

    /*
     *  PUSHER_SUBSCRIPTIONS
     *  an object to store information about channel event subscriptions
     *  and which actions to call when they are hit:
     *
     *  PUSHER_SUBSCRIPTIONS: {
     *    chanel_name: {
     *      event_name: action_name
     *    }
     *  }
     */

    initializeSubscriptions: (function () {
      var _this = this;

      this._super();
      var pusherSubscriptions = this.get('PUSHER_SUBSCRIPTIONS');
      if (!pusherSubscriptions) {
        return;
      }

      var channels = Object.keys(pusherSubscriptions);

      channels.forEach(function (channelName) {
        var eventNames = Object.keys(pusherSubscriptions[channelName]);

        eventNames.forEach(function (eventName) {
          var actionName = pusherSubscriptions[channelName][eventName];
          _this.get('pusher').subscribeTo(channelName, eventName, _this, actionName);
        });
      });
    }).on('init'),

    cleanUp: (function () {
      var _this2 = this;

      this._super();
      var pusherSubscriptions = this.get('PUSHER_SUBSCRIPTIONS');
      if (!pusherSubscriptions) {
        return;
      }

      var channels = Object.keys(pusherSubscriptions);
      channels.forEach(function (channelName) {
        var eventNames = Object.keys(pusherSubscriptions[channelName]);

        eventNames.forEach(function (eventName) {
          _this2.get('pusher').unsubscribeTo(channelName, eventName);
        });
      });
    }).on('willDestroy')

  });

});
define('frontend-cp/mixins/simple-state', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Mixin.create({

    /**
     * An object tree representing all possible
     * states and their parent/child relationships
     * @type {Object}
     */
    stateMap: null,

    /**
     * The current state as a dot separated list
     * representing the state hierarchy
     * @type {String}
     */
    _currentState: '',

    /**
     * Read-only current state property
     * For most use cases use isInState, used mostly as a property
     * in computed properties to observe when state changes
     * @return {String} current state as a dot separated list representing the state hierarchy
     */
    currentState: (function () {
      return this.get('_currentState');
    }).property('_currentState'),

    /**
     * Sets the current state as a dot separated
     * list representing the desired state hierarchy
     * eg. 'root.session.foo'
     * Throws an error if the state is not available
     * in the stateMap object tree
     * @param {String} state Dot separated string of state hierarchy
     */
    setState: function setState(state) {
      if (this.get('stateMap.' + state)) {
        this.set('_currentState', state);
      } else {
        throw new Error('Invalid state: ' + state);
      }
    },

    /**
     * Returns true if you are in the current state, you must specify the currentState
     * in order force a call to this.get('currentState') in computed properties,
     * otherwise the computed property will not be called.
     * or any of its parent states
     * @param  {String}  state Dot separated string of state hierarchy
     * @param  {String}  currentState Dot separated string of state hierarchy
     * @return {Boolean}
     */
    isInState: function isInState(state, currentState) {
      if (currentState === undefined) {
        throw new Error('currentState is not defined');
      }
      return currentState.indexOf(state) === 0;
    },

    /**
     * Returns true if the last substate in the state string
     * is the leafState/s
     * @param  {String}  subState     Dot separated string of sub-state
     * @param  {String}  currentState currentState Dot separated string of state hierarchy
     * @return {Boolean}
     */
    endsWithSubState: function endsWithSubState(subState, currentState) {
      if (currentState === undefined) {
        throw new Error('currentState is not defined');
      }
      return currentState.indexOf(subState) === currentState.length - subState.length;
    },

    getStateAtLevel: function getStateAtLevel(level, currentState) {
      currentState = currentState || this.get('_currentState');
      return currentState.split('.')[level];
    }
  });

});
define('frontend-cp/models/access-log', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    user: DS['default'].belongsTo('user', { async: true, parent: true }),
    action: DS['default'].attr('string'),
    createdAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/account', ['exports', 'ember-data'], function (exports, DS) {

	'use strict';

	exports['default'] = DS['default'].Model.extend({});

});
define('frontend-cp/models/app', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    name: DS['default'].attr('string'),
    version: DS['default'].attr('string'),
    author: DS['default'].attr('string'),
    authorEmail: DS['default'].attr('string'),
    shortDescription: DS['default'].attr('string'),
    longDescription: DS['default'].attr('string'),
    visibility: DS['default'].attr('string'),
    installable: DS['default'].attr('boolean'),
    installed: DS['default'].attr('boolean'),
    smallIcon: DS['default'].attr('string'),
    largeIcon: DS['default'].attr('string'),
    // categories: TODO what they are?
    defaultLocale: DS['default'].attr('string'),
    productVersion: DS['default'].attr('string')

    // TODO action: install
    // TODO action: upgrade
    // TODO action: uninstall
  });

});
define('frontend-cp/models/attachment', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    name: DS['default'].attr('string'),
    size: DS['default'].attr('number'),
    width: DS['default'].attr('number'), // TODO should exist on attachment within posts/:id
    height: DS['default'].attr('number'), // TODO should exist on attachment within posts/:id
    type: DS['default'].attr('string'), // TODO should exist on attachment within posts/:id
    url: DS['default'].attr('string'), // TODO should exist on attachment within posts/:id
    urlDownload: DS['default'].attr('string'), // TODO should exist on attachment within posts/:id
    thumbnails: DS['default'].hasMany('thumbnail', { async: true, child: true }),
    createdAt: DS['default'].attr('date'), // TODO should exist on attachment within posts/:id

    // Virtual parent field
    message: DS['default'].belongsTo('case-message', { async: true, parent: true })
  });

});
define('frontend-cp/models/brand', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string'),
    companyName: DS['default'].attr('string'),
    url: DS['default'].attr('string'),
    language: DS['default'].belongsTo('language', { async: false }),
    isEnabled: DS['default'].attr('boolean')
  });

});
define('frontend-cp/models/business-hour', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string', { async: false }),
    //zones: DS.hasMany('zone'),
    holidays: DS['default'].hasMany('holiday', { async: false }),
    teams: DS['default'].hasMany('team', { async: false }),
    createdAt: DS['default'].attr('date', { async: false }),
    updatedAt: DS['default'].attr('date', { async: false })
  });

});
define('frontend-cp/models/case-assignee', ['exports', 'ember-data', 'frontend-cp/mixins/change-aware-model'], function (exports, DS, ChangeAwareModel) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend(ChangeAwareModel['default'], {
    teamFragment: DS['default'].hasOneFragment('relationship-fragment'),

    team: (function () {
      return this.store.getById('team', this.get('teamFragment.relationshipId'));
    }).property('teamFragment', 'teamFragment.relationshipId'),

    agentFragment: DS['default'].hasOneFragment('relationship-fragment'),
    agent: (function () {
      return this.store.getById('user', this.get('agentFragment.relationshipId'));
    }).property('agentFragment')
  });

});
define('frontend-cp/models/case-field-type', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    nameIntlKey: null,
    descriptionIntlKey: null,
    iconFileName: null,

    adminEditComponentName: null,
    isSystem: false,
    isChoiceField: false,
    isValid: function isValid() {
      return true;
    }
  });

});
define('frontend-cp/models/case-field-value', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    // TODO fix when relationship support lands to ember-data.model-fragments
    // field: DS.belongsTo('case-field', { async: true }),
    fieldFragment: DS['default'].hasOneFragment('relationship-fragment'),
    field: (function () {
      return this.store.peekRecord('case-field', this.get('fieldFragment.relationshipId'));
    }).property('fieldFragment.relationshipId'),

    value: DS['default'].attr('string')
  });

});
define('frontend-cp/models/case-field', ['exports', 'ember-data', 'frontend-cp/models/field'], function (exports, DS, Field) {

  'use strict';

  exports['default'] = Field['default'].extend({
    fielduuid: DS['default'].attr('string'),
    fieldType: DS['default'].belongsTo('case-field-type', { async: true }),
    key: DS['default'].attr('string'),
    title: DS['default'].attr('string'),
    customerTitle: DS['default'].attr('string'),
    description: DS['default'].attr('string'),

    isRequiredForAgents: DS['default'].attr('boolean'),
    isRequiredOnResolution: DS['default'].attr('boolean'),
    isVisibleToCustomers: DS['default'].attr('boolean'),
    isCustomerEditable: DS['default'].attr('boolean'),
    isRequiredForCustomers: DS['default'].attr('boolean'),
    isEnabled: DS['default'].attr('boolean'),
    isSystem: DS['default'].attr('boolean'),

    regularExpression: DS['default'].attr('string'),
    sortOrder: DS['default'].attr('number'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/case-form', ['exports', 'ember-data', 'frontend-cp/mixins/change-aware-model'], function (exports, DS, ChangeAwareModel) {

  'use strict';

  exports['default'] = DS['default'].Model.extend(ChangeAwareModel['default'], {
    title: DS['default'].attr('string'),
    customerTitle: DS['default'].attr('string'),
    description: DS['default'].attr('string'),
    isVisibleToCustomers: DS['default'].attr('boolean'),
    isEnabled: DS['default'].attr('boolean'),
    isDefault: DS['default'].attr('boolean'),
    sortOrder: DS['default'].attr('number'),
    fields: DS['default'].hasMany('case-field', { async: false }),
    brand: DS['default'].belongsTo('brand', { async: false }),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/case-message', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    uuid: DS['default'].attr('string'),
    subject: DS['default'].attr('string'),
    bodyText: DS['default'].attr('string'),
    bodyHtml: DS['default'].attr('string'),
    recipients: DS['default'].hasMany('message-recipient', { async: false }),
    fullname: DS['default'].attr('string'),
    email: DS['default'].attr('string'),
    creator: DS['default'].belongsTo('user', { async: false }),
    identity: DS['default'].belongsTo('identity', { async: false }),
    mailbox: DS['default'].belongsTo('mailbox', { async: false }),
    attachments: DS['default'].hasMany('attachment', { async: false }),
    location: DS['default'].belongsTo('location', { async: false }),
    // metadata: DS...
    creationMode: DS['default'].attr('string'),
    locale: DS['default'].attr('string'),
    responseTime: DS['default'].attr('number'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date'),

    // Parent field
    'case': DS['default'].belongsTo('case', { async: true, parent: true })
  });

});
define('frontend-cp/models/case-note', ['exports', 'ember-data', 'frontend-cp/models/event'], function (exports, DS, Event) {

  'use strict';

  exports['default'] = Event['default'].extend({
    uuid: DS['default'].attr('string'),
    subject: DS['default'].attr('string'),
    contents: DS['default'].attr('string'),
    isPinned: DS['default'].attr('boolean'),
    color: DS['default'].attr('string', { defaultValue: 'YELLOW' }), // TODO enum YELLOW, RED, GREEN, BLUE, ORANGE, PURPLE
    creator: DS['default'].belongsTo('user', { async: false }),
    identity: DS['default'].belongsTo('identity', { async: false }),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date'),

    'case': DS['default'].belongsTo('case', { async: false, parent: true }),
    note: DS['default'].belongsTo('note', { async: false })
  });

});
define('frontend-cp/models/case-priority', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    label: DS['default'].attr('string'),
    level: DS['default'].attr('number'),
    color: DS['default'].attr('string'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/case-reply', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    contents: DS['default'].attr('string'),
    channelType: DS['default'].attr('string'),
    channel: DS['default'].belongsTo('account', { async: false }),
    inReplyToUuid: DS['default'].attr('string'),
    // options[cc]
    // options[bcc]
    // options[markdown]
    // options[send_link]
    status: DS['default'].belongsTo('case-status', { async: false }),
    priority: DS['default'].belongsTo('case-priority', { async: false }),
    caseType: DS['default'].belongsTo('case-type', { async: false }),
    assigneeTeam: DS['default'].belongsTo('team', { async: false }),
    assigneeAgent: DS['default'].belongsTo('user', { async: false }),
    tags: DS['default'].attr('string'),
    fieldValues: DS['default'].hasManyFragments('case-field-value'),
    // _filename: DS.belongsTo('?'),

    'case': DS['default'].belongsTo('case', { async: true, parent: true }),
    post: DS['default'].belongsTo('case-message', { async: true })
  });

});
define('frontend-cp/models/case-status', ['exports', 'ember-data', 'frontend-cp/mixins/change-aware-model'], function (exports, DS, ChangeAwareModel) {

  'use strict';

  exports['default'] = DS['default'].Model.extend(ChangeAwareModel['default'], {
    label: DS['default'].attr('string'),
    color: DS['default'].attr('string'),
    statusType: DS['default'].attr('string'),
    visibility: DS['default'].attr('string'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/case-type', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    label: DS['default'].attr('string'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/case', ['exports', 'ember-data', 'frontend-cp/mixins/change-aware-model'], function (exports, DS, ChangeAwareModel) {

  'use strict';

  exports['default'] = DS['default'].Model.extend(ChangeAwareModel['default'], {
    assignee: DS['default'].hasOneFragment('case-assignee', { defaultValue: {} }),
    maskId: DS['default'].attr('string'),
    subject: DS['default'].attr('string'),
    portal: DS['default'].attr('string'),
    sourceChannel: DS['default'].belongsTo('channel', { async: false }),
    requester: DS['default'].belongsTo('user', { async: false }),
    creator: DS['default'].belongsTo('user', { async: false }),
    identity: DS['default'].belongsTo('identity', { polymorphic: true, async: false }),
    sla: DS['default'].belongsTo('sla', { async: false }),
    slaMetrics: DS['default'].hasManyFragments('sla-metric'),
    // assignee: DS.belongsTo('team'), TODO weird json
    assignedBy: DS['default'].belongsTo('user', { async: false }),
    brand: DS['default'].belongsTo('brand', { async: false }),
    status: DS['default'].belongsTo('case-status', { async: false }),
    priority: DS['default'].belongsTo('case-priority', { async: false }),
    caseType: DS['default'].belongsTo('case-type', { async: false }),
    tags: DS['default'].hasMany('tag', { async: false }),
    form: DS['default'].belongsTo('case-form', { async: false }),
    customFields: DS['default'].hasManyFragments('case-field-value'),
    fieldValues: DS['default'].hasManyFragments('case-field-value', { defaultValue: [] }), // write only
    // metadata // TODO nested json
    lastReplier: DS['default'].belongsTo('user', { async: false }),
    lastReplierIdentity: DS['default'].belongsTo('identity', { async: false }),
    creationMode: DS['default'].attr('string'),
    state: DS['default'].attr('string'),
    totalPosts: DS['default'].attr('number'),
    hasNotes: DS['default'].attr('boolean'),
    hasAttachments: DS['default'].attr('boolean'),
    rating: DS['default'].attr('number'),
    ratingStatus: DS['default'].attr('string'),
    assignDueAt: DS['default'].attr('date'),
    replyDueAt: DS['default'].attr('date'),
    resolutionDueAt: DS['default'].attr('date'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date'),
    lastAgentActivityAt: DS['default'].attr('date'),
    lastCustomerActivityAt: DS['default'].attr('date'),

    // Children fields
    notes: DS['default'].hasMany('case-note', { async: true, child: true, noCache: true }),
    messages: DS['default'].hasMany('case-message', { async: true, child: true, noCache: true }),
    channels: DS['default'].hasMany('channel', { async: true, child: true, url: 'channels', noCache: true }),
    replyChannels: DS['default'].hasMany('channel', { async: true, child: true, url: 'reply/channels', noCache: true }),
    reply: DS['default'].hasMany('case-reply', { async: true, child: true, noCache: true }),

    // Parent field
    view: DS['default'].belongsTo('view', { async: true, parent: true }),

    save: function save() {
      var _this = this;

      this.get('customFields').forEach(function (customField) {
        _this.get('fieldValues').createFragment({
          fieldFragment: _this.get('store').createFragment('relationship-fragment', {
            relationshipId: customField.get('field.id'),
            relationshipType: customField.get('field.type')
          }),
          value: customField.get('value') === '' ? null : customField.get('value')
        });
      });

      return this._super();
    },

    saveWithNote: function saveWithNote(contents) {
      var note = this.get('store').createRecord('case-note', {
        contents: contents,
        'case': this
      });

      return note.save();
    },

    saveWithPost: function saveWithPost(contents, channel) {
      var _this2 = this;

      var account = channel.get('account');
      var channelType = channel.get('channelType');
      var reply = this.get('store').createRecord('case-reply', {
        'case': this,
        channel: account,
        channelType: channelType,
        contents: contents,
        status: this.get('status'),
        caseType: this.get('caseType'),
        priority: this.get('priority'),
        fieldValues: [],
        tags: this.get('tags').map(function (tag) {
          return tag.get('name');
        }).join(',')
      });

      reply.get('case.customFields').forEach(function (customField) {
        reply.get('fieldValues').createFragment({
          fieldFragment: _this2.get('store').createFragment('relationship-fragment', {
            relationshipId: customField.get('field.id'),
            relationshipType: customField.get('field.type')
          }),
          value: customField.get('value') === '' ? null : customField.get('value')
        });
      });

      return reply.save();
    },

    hasDirtyHasManyRelationship: function hasDirtyHasManyRelationship(relationshipKey) {
      if (relationshipKey !== 'tags') {
        return this._super(relationshipKey);
      }

      /*
       * TAGS is a special case - the equality depends on the
       * tag name, rather than the tag entity (when we add tags,
       * the server decides which entity our tag name resolves to - we
       * don't care)
       */
      var initialRelationships = this.get('initialRelationships');
      var initialTags = initialRelationships.tags;
      var currentTags = this.get('tags');

      if (initialTags.length !== currentTags.length) {
        return true;
      }

      return currentTags.some(function (tag, index) {
        return tag.get('name') !== initialTags[index].get('name');
      });
    }
  });

});
define('frontend-cp/models/channel', ['exports', 'ember-data', 'ember'], function (exports, DS, Ember) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    channelType: DS['default'].attr('string'),
    charaterLimit: DS['default'].attr('number'),
    account: DS['default'].belongsTo('account', { polymorphic: true, async: false }),

    iconClass: Ember['default'].computed('channelType', {
      get: function get() {
        var channelType = this.get('channelType');

        switch (channelType) {
          case 'MAILBOX':
            {
              return 'i-inbox';
            }
          case 'FACEBOOK':
            {
              return 'i-facebook';
            }
          case 'TWITTER':
            {
              return 'i-twitter';
            }
        }
      }
    }),

    handle: Ember['default'].computed('channelType', {
      get: function get() {
        var channelType = this.get('channelType');
        switch (channelType) {
          case 'MAILBOX':
            {
              return this.get('account.address');
            }
          case 'FACEBOOK':
            {
              return this.get('account.title');
            }
          case 'TWITTER':
            {
              return this.get('account.screenName');
            }
        }
      }
    }),

    message: Ember['default'].computed('channelType', {
      get: function get() {
        var channelType = this.get('channelType');
        var handle = this.get('handle');

        switch (channelType) {
          case 'MAILBOX':
            {
              return 'Reply via Email (' + handle + ')';
            }
          case 'FACEBOOK':
            {
              return 'Reply via Facebook (' + handle + ')';
            }
          case 'TWITTER':
            {
              return 'Reply via Twitter (' + handle + ')';
            }
        }
      }
    }),

    label: Ember['default'].computed('handle', {
      get: function get() {
        var handle = this.get('handle');

        return handle || 'Reply';
      }
    })
  });

});
define('frontend-cp/models/column-fragment', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    name: DS['default'].attr('string')
  });

});
define('frontend-cp/models/column', ['exports', 'ember-data'], function (exports, DS) {

	'use strict';

	exports['default'] = DS['default'].Model.extend({});

});
define('frontend-cp/models/contact-address', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    isPrimary: DS['default'].attr('boolean', { defaultValue: false }),
    address1: DS['default'].attr('string'),
    address2: DS['default'].attr('string'),
    city: DS['default'].attr('string'),
    state: DS['default'].attr('string'),
    postalCode: DS['default'].attr('string'), // TODO maybe integer?
    country: DS['default'].attr('string'), // TODO should be country code
    type: DS['default'].attr('string', { defaultValue: 'OTHER' }),

    parent: DS['default'].belongsTo('has-addresses', { async: true, polymorphic: true, parent: true })
  });

});
define('frontend-cp/models/contact-website', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    isPrimary: DS['default'].attr('boolean', { defaultValue: false }),
    url: DS['default'].attr('string'),

    parent: DS['default'].belongsTo('has-websites', { async: true, polymorphic: true, parent: true })
  });

});
define('frontend-cp/models/definition-value-fragment', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    value: DS['default'].attr('number'),
    string: DS['default'].attr('string')
  });

});
define('frontend-cp/models/definition', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    name: DS['default'].attr('string'),
    definitionType: DS['default'].attr('string'),
    subType: DS['default'].attr('string'),
    operator: DS['default'].attr('array'),
    value: DS['default'].hasManyFragments('definition-value-fragment') //can be an empty string or an object with keys as value and properties as text
  });

});
define('frontend-cp/models/event', ['exports', 'ember-data'], function (exports, DS) {

	'use strict';

	exports['default'] = DS['default'].Model.extend({});

});
define('frontend-cp/models/facebook-account', ['exports', 'ember-data', 'frontend-cp/models/account'], function (exports, DS, Account) {

  'use strict';

  exports['default'] = Account['default'].extend({
    accountId: DS['default'].attr('string'),
    title: DS['default'].attr('string'),
    isEnabled: DS['default'].attr('boolean', { defaultValue: true }),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/facebook-page', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string')
  });

});
define('frontend-cp/models/field-option', ['exports', 'ember-data', 'frontend-cp/mixins/change-aware-model'], function (exports, DS, ChangeAwareModel) {

  'use strict';

  exports['default'] = DS['default'].Model.extend(ChangeAwareModel['default'], {
    fielduuid: DS['default'].attr('string'),
    value: DS['default'].attr('string'),
    tag: DS['default'].attr('string'),
    sortOrder: DS['default'].attr('number'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date'),

    parent: DS['default'].belongsTo('field', { polymorphic: true, async: true, parent: true })

  });

});
define('frontend-cp/models/field', ['exports', 'ember-data', 'frontend-cp/mixins/change-aware-model'], function (exports, DS, ChangeAwareModel) {

  'use strict';

  exports['default'] = DS['default'].Model.extend(ChangeAwareModel['default'], {
    options: DS['default'].hasMany('field-option', { child: true, async: true, url: 'options', inverse: 'parent' })
  });

});
define('frontend-cp/models/has-addresses', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    addresses: DS['default'].hasMany('contact-address', { async: true, url: 'contacts/addresses' })
  });

});
define('frontend-cp/models/has-email-identities', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    emails: DS['default'].hasMany('identity-email', { async: true })
  });

});
define('frontend-cp/models/has-facebook-identities', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    facebook: DS['default'].hasMany('identity-facebook', { async: true })
  });

});
define('frontend-cp/models/has-phone-identities', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    phones: DS['default'].hasMany('identity-phone', { async: true })
  });

});
define('frontend-cp/models/has-slack-identities', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    slack: DS['default'].hasMany('identity-slack', { async: true })
  });

});
define('frontend-cp/models/has-twitter-identities', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    twitter: DS['default'].hasMany('identity-twitter', { async: true })
  });

});
define('frontend-cp/models/has-websites', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    websites: DS['default'].hasMany('contact-website', { async: true })
  });

});
define('frontend-cp/models/holiday', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string'),
    date: DS['default'].attr('date'),
    openHours: DS['default'].attr() //array http://stackoverflow.com/a/26107853
  });

});
define('frontend-cp/models/identity-domain', ['exports', 'ember-data', 'frontend-cp/models/identity'], function (exports, DS, Identity) {

  'use strict';

  exports['default'] = Identity['default'].extend({
    domain: DS['default'].attr('string'),

    parent: DS['default'].belongsTo('organization', { async: true, polymorphic: true, parent: true })
  });

});
define('frontend-cp/models/identity-email', ['exports', 'ember-data', 'frontend-cp/models/identity'], function (exports, DS, Identity) {

  'use strict';

  exports['default'] = Identity['default'].extend({
    email: DS['default'].attr('string'),
    isNotificationEnabled: DS['default'].attr('string'),

    parent: DS['default'].belongsTo('has-email-identities', { async: true, polymorphic: true, parent: true })
  });

});
define('frontend-cp/models/identity-facebook', ['exports', 'ember-data', 'frontend-cp/models/identity'], function (exports, DS, Identity) {

  'use strict';

  exports['default'] = Identity['default'].extend({
    facebookId: DS['default'].attr('string'),
    userName: DS['default'].attr('string'),
    fullName: DS['default'].attr('string'),
    email: DS['default'].attr('string'),
    bio: DS['default'].attr('string'),
    birthDate: DS['default'].attr('date'),
    website: DS['default'].attr('string'),
    profileUrl: DS['default'].attr('string'),
    locale: DS['default'].attr('string'),
    verified: DS['default'].attr('boolean'),

    parent: DS['default'].belongsTo('has-facebook-identities', { async: true, polymorphic: true, parent: true })
  });

});
define('frontend-cp/models/identity-phone', ['exports', 'ember-data', 'frontend-cp/models/identity'], function (exports, DS, Identity) {

  'use strict';

  exports['default'] = Identity['default'].extend({
    number: DS['default'].attr('string'),
    type: DS['default'].attr('string'),

    parent: DS['default'].belongsTo('has-phone-identities', { async: true, polymorphic: true, parent: true })
  });

});
define('frontend-cp/models/identity-slack', ['exports', 'ember-data', 'frontend-cp/models/identity'], function (exports, DS, Identity) {

  'use strict';

  exports['default'] = Identity['default'].extend({
    userName: DS['default'].attr('string'),

    parent: DS['default'].belongsTo('user', { async: true, polymorphic: true, parent: true })
    //parent: DS.belongsTo('has-slack-identities', { async: true, polymorphic: true, parent: true })
  });

});
define('frontend-cp/models/identity-twitter', ['exports', 'ember-data', 'frontend-cp/models/identity'], function (exports, DS, Identity) {

  'use strict';

  exports['default'] = Identity['default'].extend({
    twitterId: DS['default'].attr('string'),
    fullName: DS['default'].attr('string'),
    screenName: DS['default'].attr('string'),
    followerCount: DS['default'].attr('number'),
    description: DS['default'].attr('string'),
    url: DS['default'].attr('string'),
    location: DS['default'].attr('string'),
    profileImageUrl: DS['default'].attr('string'),
    locale: DS['default'].attr('string'),
    verified: DS['default'].attr('boolean'),

    parent: DS['default'].belongsTo('has-twitter-identities', { async: true, polymorphic: true, parent: true })
  });

});
define('frontend-cp/models/identity', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    isPrimary: DS['default'].attr('boolean'),
    isValidated: DS['default'].attr('boolean')
  });

});
define('frontend-cp/models/language-statistics', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    uptodate: DS['default'].attr('number'),
    outdated: DS['default'].attr('number'),
    missing: DS['default'].attr('number')
  });

});
define('frontend-cp/models/language', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    locale: DS['default'].attr('string'),
    flagIcon: DS['default'].attr('string'),
    direction: DS['default'].attr('string'),
    isEnabled: DS['default'].attr('boolean'),
    statistics: DS['default'].hasOneFragment('language-statistics'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/link', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    label: DS['default'].attr('string'),
    object: DS['default'].belongsTo('object', { polymorphic: true, async: false })
  });

});
define('frontend-cp/models/locale-string', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    value: DS['default'].attr('string'),

    locale: DS['default'].belongsTo('locale', { async: true, parent: true })
  });

});
define('frontend-cp/models/locale', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    name: DS['default'].attr('string'),
    nativeName: DS['default'].attr('string'),
    region: DS['default'].attr('string'),
    nativeRegion: DS['default'].attr('string'),
    script: DS['default'].attr('string'),
    variant: DS['default'].attr('string'),
    direction: DS['default'].attr('string'),
    isEnabled: DS['default'].attr('boolean'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date'),

    strings: DS['default'].hasMany('locale-string', { async: true, child: true, url: 'strings' })
  });

});
define('frontend-cp/models/location', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    city: DS['default'].attr('string'),
    region: DS['default'].attr('string'),
    regionCode: DS['default'].attr('string'),
    areaCode: DS['default'].attr('string'),
    timeZone: DS['default'].attr('string'),
    organization: DS['default'].attr('string'),
    netSpeed: DS['default'].attr('string'),
    country: DS['default'].attr('string'),
    countryCode: DS['default'].attr('string'),
    postalCode: DS['default'].attr('string'),
    latitude: DS['default'].attr('string'),
    longitude: DS['default'].attr('string'),
    metroCode: DS['default'].attr('string'),
    isp: DS['default'].attr('string')
  });

});
define('frontend-cp/models/macro-assignee', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    type: DS['default'].attr('string'), //UNASSIGNED, CURRENT_AGENT, TEAM, AGENT

    teamFragment: DS['default'].hasOneFragment('relationship-fragment'),
    team: (function () {
      return this.store.getById('team', this.get('teamFragment.relationshipId'));
    }).property('teamFragment.relationshipId'),

    agentFragment: DS['default'].hasOneFragment('relationship-fragment'),
    agent: (function () {
      return this.store.getById('user', this.get('agentFragment.relationshipId'));
    }).property('agentFragment.relationshipId')
  });

});
define('frontend-cp/models/macro-properties', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    typeFragment: DS['default'].hasOneFragment('relationship-fragment'),
    macroType: (function () {
      return this.store.getById('case-type', this.get('typeFragment.relationshipId'));
    }).property('typeFragment.relationshipId'),

    statusFragment: DS['default'].hasOneFragment('relationship-fragment'),
    status: (function () {
      return this.store.getById('case-status', this.get('statusFragment.relationshipId'));
    }).property('statusFragment.relationshipId'),

    priorityFragment: DS['default'].hasOneFragment('relationship-fragment'),
    priority: (function () {
      return this.store.getById('case-priority', this.get('priorityFragment.relationshipId'));
    }).property('priorityFragment.relationshipId')
  });

});
define('frontend-cp/models/macro-visibility', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    type: DS['default'].attr('string'), // ALL, TEAM, PRIVATE
    status: DS['default'].belongsTo('status'),
    priority: DS['default'].belongsTo('priority')
  });

});
define('frontend-cp/models/macro', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string'),
    contents: DS['default'].attr('string'),
    agent: DS['default'].belongsTo('user'),
    assignee: DS['default'].hasOneFragment('macro-assignee'),
    properties: DS['default'].hasOneFragment('macro-properties'),
    visibility: DS['default'].hasOneFragment('macro-visibility')
  });

});
define('frontend-cp/models/mailbox', ['exports', 'ember-data', 'frontend-cp/models/account'], function (exports, DS, Account) {

  'use strict';

  exports['default'] = Account['default'].extend({
    service: DS['default'].attr('string'),
    encryption: DS['default'].attr('string'),
    address: DS['default'].attr('string'),
    prefix: DS['default'].attr('string'),
    smtpType: DS['default'].attr('string'),
    host: DS['default'].attr('string'),
    port: DS['default'].attr('number'),
    username: DS['default'].attr('string'),
    preserveMails: DS['default'].attr('boolean'),
    brand: DS['default'].belongsTo('brand'),
    isDefault: DS['default'].attr('boolean'),
    isEnabled: DS['default'].attr('boolean')
  });

});
define('frontend-cp/models/message-recipient', ['exports', 'ember-data'], function (exports, DS) {

	'use strict';

	exports['default'] = DS['default'].Model.extend({});

});
define('frontend-cp/models/note', ['exports', 'ember-data', 'frontend-cp/models/event'], function (exports, DS, Event) {

  'use strict';

  exports['default'] = Event['default'].extend({
    contentText: DS['default'].attr('string'),
    contentHtml: DS['default'].attr('string'),
    color: DS['default'].attr('string', { defaultValue: 'YELLOW' }), // TODO enum YELLOW, RED, GREEN, BLUE, ORANGE, PURPLE
    isPinned: DS['default'].attr('boolean'),

    user: DS['default'].belongsTo('user', { async: false }),
    'case': DS['default'].belongsTo('case', { async: true, parent: true }),

    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/object', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string'),
    icon: DS['default'].hasMany('attachment'),
    createdAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/organization-field-value', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    // TODO fix when relationship support lands to ember-data.model-fragments
    // field: DS.belongsTo('organization-field', { async: true }),
    fieldFragment: DS['default'].hasOneFragment('relationship-fragment'),
    field: (function () {
      return this.store.peekRecord('organization-field', this.get('fieldFragment.relationshipId'));
    }).property('fieldFragment.relationshipId'),

    value: DS['default'].attr('string')
  });

});
define('frontend-cp/models/organization-field', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    fielduuid: DS['default'].attr('string'),
    fieldType: DS['default'].attr('string'),
    name: DS['default'].attr('string'),
    title: DS['default'].attr('string'),
    key: DS['default'].attr('string'),
    description: DS['default'].attr('string'),
    agentTitle: DS['default'].attr('string'),
    isRequired: DS['default'].attr('boolean'),
    isCustomerEditable: DS['default'].attr('boolean'),
    isVisibleToCustomers: DS['default'].attr('boolean'),
    isEnabled: DS['default'].attr('boolean'),
    regularExpression: DS['default'].attr('string'),
    sortOrder: DS['default'].attr('number'),
    options: DS['default'].hasMany('field-option'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/organization', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    name: DS['default'].attr('string'),
    isShared: DS['default'].attr('boolean'),
    brand: DS['default'].belongsTo('brand', { async: true }),
    emails: DS['default'].hasMany('identity-email', { async: true, url: 'identities/emails' }),
    phones: DS['default'].hasMany('identity-phone', { async: true, url: 'identities/phones' }),
    twitter: DS['default'].hasMany('identity-twitter', { async: true, url: 'identities/twitter' }),
    facebook: DS['default'].hasMany('identity-facebook', { async: true, url: 'identities/facebook' }),
    addresses: DS['default'].hasMany('contact-address', { async: true, url: 'contacts/addresses' }),
    websites: DS['default'].hasMany('contact-website', { async: true, url: 'contacts/websites' }),
    notes: DS['default'].hasMany('note', { async: true }),
    pinned: DS['default'].attr('number'),
    tags: DS['default'].hasMany('tag', { async: true }),
    customFields: DS['default'].hasManyFragments('organization-field-value'),
    followers: DS['default'].hasMany('user', { async: true }),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date'),

    // Shadow children fields
    domains: DS['default'].hasMany('identity-domain', { async: true, child: true, url: 'identities/domains' })
  });

});
define('frontend-cp/models/predicate-collection', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    operator: DS['default'].attr('string', { 'default': 'OR' }),
    propositions: DS['default'].hasManyFragments('predicate-proposition')
  });

});
define('frontend-cp/models/predicate-proposition', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    field: DS['default'].attr('string'),
    operator: DS['default'].attr('string'),
    values: DS['default'].attr('string')
  });

});
define('frontend-cp/models/relationship-fragment', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    relationshipId: DS['default'].attr('string'),
    relationshipType: DS['default'].attr('string')
  });

});
define('frontend-cp/models/role', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string'),
    type: DS['default'].attr('string')
  });

});
define('frontend-cp/models/search-result-group', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    totalCount: DS['default'].attr('number'),
    results: DS['default'].hasManyFragments('search-result')
  });

});
define('frontend-cp/models/search-result', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    objectId: DS['default'].attr('number'),
    title: DS['default'].attr('string'),
    snippet: DS['default'].attr('string'),
    resource: DS['default'].attr('string')
  });

});
define('frontend-cp/models/session', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    portal: DS['default'].attr('string'),
    ipAddress: DS['default'].attr('string'),
    userAgent: DS['default'].attr('string'),
    user: DS['default'].belongsTo('user'),
    status: DS['default'].attr('string'),
    createdAt: DS['default'].attr('date'),
    lastActivityAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/sla-metric', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    title: DS['default'].attr('string'),
    state: DS['default'].attr('string'), //COMPLETED | PAUSED | ACTIVE
    isBreached: DS['default'].attr('boolean'),
    remainingSeconds: DS['default'].attr('number'),
    totalSeconds: DS['default'].attr('number'),

    status: (function () {
      // OK | OPEN | WARNING | BREACHED
      if (this.get('isBreached')) {
        return 'BAD';
      }
      if (this.get('isCompleted')) {
        return 'GOOD';
      }
      if (this.get('hasLessThan20PercentRemaining')) {
        return 'WARNING';
      }
      return 'OPEN';
    }).property('isBreached', 'isCompleted', 'hasLessThan20PercentRemaining'),

    isCompleted: (function () {
      return this.get('state') === 'COMPLETED';
    }).property('state'),

    hasLessThan20PercentRemaining: (function () {
      var percentageLeft = 100 * this.get('remainingSeconds') / this.get('totalSeconds');
      return percentageLeft > 20;
    }).property('remainingSeconds', 'totalSeconds'),

    numberOfWholeDaysRemaining: (function () {
      return Math.abs(Math.floor(this.get('remainingSeconds') / 86400)); //86400 = 60*60*24
    }).property('remainingSeconds'),

    numberOfWholeHoursRemaining: (function () {
      var remainingHours = Math.abs(Math.floor(this.get('remainingSeconds') / 3600));
      return remainingHours % 24; //will be shown in days
    }).property('remainingSeconds'),

    numberOfWholeMinutesRemaining: (function () {
      var remainingMinutes = Math.abs(Math.floor(this.get('remainingSeconds') / 60));
      return remainingMinutes % 60;
    }).property('remainingSeconds')
  });

});
define('frontend-cp/models/sla', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string'),
    description: DS['default'].attr('string'),
    isEnabled: DS['default'].attr('boolean'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/tab', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Object.extend({

    /**
     * Tab base URL
     * Path to the tab's 'home' page.
     * This is used to check whether a page falls within this tab's remit.
     * @type {[type]}
     */
    baseUrl: null,

    /**
     * Tab URL
     * Path to the page that's currently displayed in the tab.
     * This will either be the `baseUrl` or one of its descendant URLs.
     * @type {string}
     */
    url: null,

    /**
     * Tab label
     * @type {string}
     */
    label: null,

    /**
     * Whether the tab is currently selected
     * @type {boolean}
     */
    selected: false,

    /**
     * UI state object
     * Ember object containing UI state related to this tab
     * @type {Object}
     */
    state: null
  });

});
define('frontend-cp/models/tag', ['exports', 'ember-data', 'frontend-cp/mixins/change-aware-model'], function (exports, DS, ChangeAwareModel) {

  'use strict';

  exports['default'] = DS['default'].Model.extend(ChangeAwareModel['default'], {
    name: DS['default'].attr('string')
  });

});
define('frontend-cp/models/team', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string'),

    emails: DS['default'].hasMany('identity-email', { async: true, child: true, url: 'identities/emails' }),
    facebook: DS['default'].hasMany('identity-facebook', { async: true, child: true, url: 'identities/facebook' }),
    phones: DS['default'].hasMany('identity-phone', { async: true, child: true, url: 'identities/phones' }),
    slack: DS['default'].hasMany('identity-slack', { async: true, child: true, url: 'identities/slack' }),
    twitter: DS['default'].hasMany('identity-twitter', { async: true, child: true, url: 'identities/twitter' }),
    websites: DS['default'].hasMany('contact-website', { async: true, child: true, url: 'contacts/websites' })
  });

});
define('frontend-cp/models/thumbnail', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    name: DS['default'].attr('string'),
    size: DS['default'].attr('number'),
    width: DS['default'].attr('number'),
    height: DS['default'].attr('number'),
    thumbnailType: DS['default'].attr('string'),
    url: DS['default'].attr('string'),
    createdAt: DS['default'].attr('date'),

    attachment: DS['default'].belongsTo('attachment', { async: true, parent: true })
  });

});
define('frontend-cp/models/twitter-account', ['exports', 'ember-data', 'frontend-cp/models/account'], function (exports, DS, Account) {

  'use strict';

  exports['default'] = Account['default'].extend({
    twitterId: DS['default'].attr('string'),
    screenName: DS['default'].attr('string'),
    brand: DS['default'].belongsTo('brand', { async: false }),
    routeMentions: DS['default'].attr('boolean'),
    routeMessages: DS['default'].attr('boolean'),
    routeFavorites: DS['default'].attr('boolean'),
    isPublic: DS['default'].attr('boolean'),
    isEnabled: DS['default'].attr('boolean'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/user-field-value', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].ModelFragment.extend({
    // TODO fix when relationship support lands to ember-data.model-fragments
    // field: DS.belongsTo('user-field', { async: true }),
    fieldFragment: DS['default'].hasOneFragment('relationship-fragment'),
    field: (function () {
      return this.store.peekRecord('user-field', this.get('fieldFragment.relationshipId'));
    }).property('fieldFragment.relationshipId'),

    value: DS['default'].attr('string')
  });

});
define('frontend-cp/models/user-field', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    fielduuid: DS['default'].attr('string'),
    fieldType: DS['default'].attr('string'),
    key: DS['default'].attr('string'),
    title: DS['default'].attr('string'),
    isVisibleToCustomers: DS['default'].attr('boolean'),
    customerTitle: DS['default'].attr('string'),
    isCustomerEditable: DS['default'].attr('boolean'),
    isRequiredForCustomers: DS['default'].attr('boolean'),
    description: DS['default'].attr('string'),
    isEnabled: DS['default'].attr('boolean'),
    regularExpression: DS['default'].attr('string'),
    sortOrder: DS['default'].attr('number'),
    options: DS['default'].hasMany('field-option'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/user-note', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    contents: DS['default'].attr('string'),
    color: DS['default'].attr('string'), // TODO option
    user: DS['default'].belongsTo('user', { async: true, parent: true }),
    attachments: DS['default'].hasMany('attachment', { async: false }),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/user', ['exports', 'ember-data', 'ember'], function (exports, DS, Ember) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    fullName: DS['default'].attr('string'),
    designation: DS['default'].attr('string'),
    alias: DS['default'].attr('string'),
    isEnabled: DS['default'].attr('boolean'),
    role: DS['default'].belongsTo('role', { async: true }),
    avatar: DS['default'].attr('string'),
    organization: DS['default'].belongsTo('organization', { async: true }),
    teams: DS['default'].hasMany('team', { async: false }),
    emails: DS['default'].hasMany('identity-email', { async: true, url: 'identities/emails' }),
    phones: DS['default'].hasMany('identity-phone', { async: true, url: 'identities/phones' }),
    twitter: DS['default'].hasMany('identity-twitter', { async: true, url: 'identities/twitter' }),
    facebook: DS['default'].hasMany('identity-facebook', { async: true, url: 'identities/facebook' }),
    addresses: DS['default'].hasMany('contact-address', { async: true, url: 'contacts/addresses' }),
    websites: DS['default'].hasMany('contact-website', { async: true, url: 'contacts/websites' }),
    customFields: DS['default'].hasManyFragments('user-field-value'),
    tags: DS['default'].hasMany('tag', { async: false }),
    notes: DS['default'].hasMany('user-note', { child: true, url: 'notes' }),
    accessLevel: DS['default'].attr('string'),
    locale: DS['default'].attr('string'),
    timeZone: DS['default'].attr('string'),
    timeZoneOffset: DS['default'].attr('number'),
    greeting: DS['default'].attr('string'),
    signature: DS['default'].attr('string'),
    statusMessage: DS['default'].attr('string'),
    passwordUpdateAt: DS['default'].attr('date'),
    avatarUpdateAt: DS['default'].attr('date'),
    activityAt: DS['default'].attr('date'),
    visitedAt: DS['default'].attr('date'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date'),

    // Shadow children fields
    accesslogs: DS['default'].hasMany('access-log', { async: true, child: true }),
    slack: DS['default'].hasMany('identity-slack', { async: true, child: true }),

    primaryEmail: (function () {
      var emails = this.get('emails');
      var primaryEmails = emails.filter(function (email) {
        return email.isPrimary;
      });

      return Ember['default'].isEmpty(primaryEmails) ? primaryEmails.get('firstObject') : emails.get('firstObject');
    }).property('emails'),

    primaryEmailAddress: (function () {
      return this.get('primaryEmail.email');
    }).property('primaryEmail')
  });

});
define('frontend-cp/models/view', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    title: DS['default'].attr('string'),
    agent: DS['default'].belongsTo('user', { async: false }),
    visibilityType: DS['default'].attr('string'),
    visibilityToTeams: DS['default'].hasMany('team', { async: false }),
    columns: DS['default'].hasManyFragments('column-fragment'),
    predicateCollections: DS['default'].hasMany('predicate-collection', { async: false }),
    orderByColumn: DS['default'].attr('string'),
    caseCount: DS['default'].attr('number'),
    caseCountAccuracy: DS['default'].attr('string'),
    orderBy: DS['default'].attr('string'),
    isEnabled: DS['default'].attr('boolean'),
    isDefault: DS['default'].attr('boolean'),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date'),

    // Children fields
    cases: DS['default'].hasMany('case', { async: true, child: true, url: 'cases' })
  });

});
define('frontend-cp/models/vote', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Model.extend({
    type: DS['default'].attr('string'),
    user: DS['default'].belongsTo('user', { async: false }),
    createdAt: DS['default'].attr('date'),
    updatedAt: DS['default'].attr('date')
  });

});
define('frontend-cp/models/zone', ['exports', 'ember-data'], function (exports, DS) {

	'use strict';

	exports['default'] = DS['default'].Model.extend({});

});
define('frontend-cp/router', ['exports', 'ember', 'frontend-cp/config/environment'], function (exports, Ember, config) {

  'use strict';

  Ember['default'].Router.reopen({
    urlDidChange: (function () {
      var urlService = this.get('container').lookup('service:url');
      urlService.set('currentUrl', this.get('url'));
    }).on('didTransition')
  });

  var Router = Ember['default'].Router.extend({
    location: config['default'].locationType
  });

  Router.map(function () {
    this.route('login');
    this.route('session', { path: '' }, function () {
      this.route('showcase', { path: '/showcase' });
      this.route('styleguide', { path: '/styleguide' });
      this.route('cases', function () {
        this.route('new', { path: '/new' });
        this.route('case', { path: '/:case_id' }, function () {
          this.route('notes');
          this.route('organisation');
          this.route('user');
        });
      });
      this.route('users', function () {
        this.route('user', { path: '/:user_id' }, function () {
          this.route('organisation');
        });
      });

      this.route('admin', function () {
        this.route('showcase');
        this.route('manage', function () {
          this.route('case-fields', function () {
            this.route('new', { path: '/new' });
            this.route('edit', { path: '/:case_field_id' });
          });

          this.route('case-forms', function () {
            this.route('new');
            this.route('edit', { path: '/:case_form_id' });
          });
        });
      });
    });
  });

  exports['default'] = Router;

});
define('frontend-cp/routes/abstract/tabbed-route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({
    /**
     * Whether the route should open in its own tab
     * @type {boolean}
     */
    isTabbedRoute: true,

    /**
     * Tab model allocated to this route
     * (assigned in the `tabs` initializer)
     * @type {Tab}
     */
    tab: null,

    getTabLabel: function getTabLabel(model) {
      // Override this method to set the tab label
      return null;
    },

    setupController: function setupController(controller, model) {
      this._super(controller, model);
      var tabModel = this.get('tab');
      var tabLabel = this.getTabLabel(model);
      tabModel.set('label', tabLabel);
    }
  });

});
define('frontend-cp/serializers/application', ['exports', 'ember', 'ember-data', 'npm:lodash'], function (exports, Ember, DS, _) {

  'use strict';

  var get = Ember['default'].get;
  var merge = Ember['default'].merge;

  exports['default'] = DS['default'].RESTSerializer.extend({
    primaryRecordKey: 'data',
    sideloadedRecordsKey: 'resources',

    normalizePayload: function normalizePayload(payload) {
      if (!payload) {
        return {};
      }

      if (_['default'].isNumber(payload.status)) {
        delete payload.status;
      }

      if (payload.logs) {
        delete payload.logs;
      }

      var data = payload[this.primaryRecordKey];
      if (data) {
        this.extractData(data, payload);
        delete payload[this.primaryRecordKey];
      }

      var sideloaded = payload[this.sideloadedRecordsKey];
      if (sideloaded) {
        this.extractSideloaded(sideloaded);
        delete payload[this.sideloadedRecordsKey];
      }

      delete payload.resource;
      return payload;
    },

    extractData: function extractData(data, payload) {
      if (Ember['default'].isArray(data)) {
        this.extractArrayData(data, payload);
      } else {
        this.extractSingleData(data, payload);
      }
    },

    /**
     * Extract top-level "data" containing a single primary data
     *
     * @param {Object[]} data - data
     * @param {Object[]} payload - payload
     */
    extractSingleData: function extractSingleData(data, payload) {
      payload[data.resource_type] = data;
      this.extractItem(data, data.resource_type);
    },

    /**
     * @param {Object[]} data - data
     * @param {String} typeKey - type of the item being extracted
     * @return {Object} data — data extracted
     */
    extractItem: function extractItem(data, typeKey) {
      this.extractRelationships(data);
      var store = get(this, 'store');
      var type = store.modelFor(typeKey);
      if (!data.links) {
        data.links = {};
      }

      type.eachRelationship(function (name, relationship) {
        if (relationship.options.child) {
          if (relationship.options.url) {
            data.links[name] = relationship.options.url;
          } else {
            var inverseRelationship = type.inverseFor(name, store);
            var childType = inverseRelationship.type;
            var childAdapter = store.adapterFor(childType.modelName);
            data.links[name] = childAdapter.pathForType(childType.modelName);
          }
        }
      });

      delete data.resource_type;
      return data;
    },

    /**
     * Extract top-level "data" containing a single primary data
     *
     * @param {Object[]} data - data
     * @param {Object[]} payload - payload
     */
    extractArrayData: function extractArrayData(data, payload) {
      var _this = this;

      data.forEach(function (item) {
        return _this.extractItem(item, payload.resource);
      });
      payload[payload.resource] = data;
    },

    /**
     * Extract top-level "included" containing associated objects
     *
     * @param {Object} sideloaded - sideloaded
     */
    extractSideloaded: function extractSideloaded(sideloaded) {
      var _this2 = this;

      var store = get(this, 'store');
      var models = {};

      _['default'].each(sideloaded, function (resources, type) {
        models[type] = [];
        _['default'].each(resources, function (resource) {
          // TODO remove || type — this is a temporary fix
          type = resource.resource_type || type;
          _this2.extractRelationships(resource);
          models[type].push(resource);
        });
      });

      this.pushPayload(store, models);
    },

    extractMeta: function extractMeta(store, typeClass, payload) {
      if (!payload.meta) {
        payload.meta = {};
      }
      if (payload.total_count !== undefined) {
        payload.meta.total = payload.total_count;
        delete payload.total_count;
      }
      if (payload.offset !== undefined) {
        payload.meta.offset = payload.offset;
        delete payload.offset;
      }
      if (payload.limit !== undefined) {
        payload.meta.limit = payload.limit;
        delete payload.limit;
      }
      this._super.apply(this, arguments);
    },

    extractFindHasMany: function extractFindHasMany() {
      return this._super.apply(this, arguments);
    },

    extractRelationships: function extractRelationships(resource) {
      _['default'].each(resource, function (value, key) {
        if (value && value.id && value.resource_type) {
          resource[key] = {
            id: value.id,
            type: value.resource_type
          };
        } else if (_['default'].isArray(value)) {
          resource[key] = value.map(function (v) {
            if (v.id && v.resource_type) {
              return {
                id: v.id,
                type: v.resource_type
              };
            } else {
              return v;
            }
          });
        }
      });
    },

    keyForAttribute: function keyForAttribute(key /*, method*/) {
      return Ember['default'].String.underscore(key);
    },

    keyForRelationship: function keyForRelationship(key, relationship, method) {
      if (!method || method === 'serialize') {
        return Ember['default'].String.underscore(key) + (relationship === 'belongsTo' ? '_id' : '');
      } else {
        return Ember['default'].String.underscore(key);
      }
    },

    serializeIntoHash: function serializeIntoHash(hash, type, snapshot, options) {
      merge(hash, this.serialize(snapshot, options));
    }
  });

});
define('frontend-cp/serializers/avatar', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      base64Data: { key: 'data' },
      avatarType: { key: 'type' },
      url: { serialize: false },
      createdAt: { serialize: false },
      updatedAt: { serialize: false }
    }
  });

});
define('frontend-cp/serializers/case-assignee', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      teamFragment: { key: 'team' },
      agentFragment: { key: 'agent' }
    }
  });

});
define('frontend-cp/serializers/case-field-type', ['exports', 'ember-data'], function (exports, DS) {

	'use strict';

	exports['default'] = DS['default'].JSONSerializer.extend({});

});
define('frontend-cp/serializers/case-field-value', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      fieldFragment: { key: 'field' }
    }
  });

});
define('frontend-cp/serializers/case-field', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({

    attrs: {
      fieldType: { key: 'type' }
    }
  });

});
define('frontend-cp/serializers/case-form', ['exports', 'ember', 'frontend-cp/serializers/application'], function (exports, Ember, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    keyForRelationship: function keyForRelationship(key, relationship, method) {
      if (!method || method === 'serialize') {
        if (relationship === 'belongsTo') {
          return Ember['default'].String.underscore(key) + '_id';
        }
        if (relationship === 'hasMany' && key === 'fields') {
          //TODO: make generic and move back into application serializers
          return 'case_field_ids';
        }
      }

      return Ember['default'].String.underscore(key);
    },

    serialize: function serialize() {
      var serializedForm = this._super.apply(this, arguments);

      // We need a comma separated list of values, not a JSON array
      serializedForm.case_field_ids = serializedForm.case_field_ids.toString(); //eslint-disable-line camelcase
      return serializedForm;
    }
  });

});
define('frontend-cp/serializers/case-reply', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      channelType: { key: 'channel' },
      caseType: { key: 'type_id' },
      'case': { serialize: false },
      post: { serialize: false }
    },

    serialize: function serialize(snapshot, options) {
      var json = this._super(snapshot, options);
      json.field_values = {}; // eslint-disable-line camelcase

      snapshot.attr('fieldValues').forEach(function (fieldValue) {
        json.field_values[fieldValue.get('field.key')] = fieldValue.get('value');
      });

      return json;
    }
  });

});
define('frontend-cp/serializers/case-status', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      statusType: { key: 'type' }
    }
  });

});
define('frontend-cp/serializers/case', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      caseType: { key: 'type' }
    },

    serialize: function serialize(snapshot, options) {
      var json = this._super(snapshot, options);
      json.field_values = {}; // eslint-disable-line camelcase

      snapshot.attr('fieldValues').forEach(function (fieldValue) {
        json.field_values[fieldValue.get('field.key')] = fieldValue.get('value');
      });

      var assignee = snapshot.attr('assignee');
      json.assignee_agent_id = assignee.get('agentFragment.relationshipId'); // eslint-disable-line camelcase
      json.assignee_team_id = assignee.get('teamFragment.relationshipId'); // eslint-disable-line camelcase

      // create comma separated list of tag names
      json.tags = snapshot.hasMany('tags').map(function (tag) {
        return tag.get('name');
      }).join(',');
      return json;
    }
  });

});
define('frontend-cp/serializers/channel', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    primaryKey: 'uuid',
    attrs: {
      channelType: { key: 'type' }
    }
  });

});
define('frontend-cp/serializers/column', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    primaryKey: 'name'
  });

});
define('frontend-cp/serializers/definition', ['exports', 'frontend-cp/serializers/application', 'npm:lodash'], function (exports, ApplicationSerializer, _) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    primaryKey: 'field',
    attrs: {
      definitionType: { key: 'type' }
    },

    // Turning an object of type {key => value} into array [{id: key, value: value}]
    extractItem: function extractItem(data) {
      data = this._super.apply(this, arguments);
      data.value = _['default'].map(data.value, function (val, id) {
        return {
          value: id,
          string: val
        };
      });

      return data;
    }
  });

});
define('frontend-cp/serializers/facebook-account', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      accountId: { serialize: false },
      title: { serialize: false },
      createdAt: { serialize: false },
      updatedAt: { serialize: false }
    }
  });

});
define('frontend-cp/serializers/locale', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    primaryKey: 'locale'
  });

});
define('frontend-cp/serializers/macro-assignee', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      teamFragment: { key: 'team' },
      agentFragment: { key: 'agent' }
    }
  });

});
define('frontend-cp/serializers/macro-properties', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      typeFragment: { key: 'type' },
      statusFragment: { key: 'status' },
      priorityFragment: { key: 'priority' }
    }
  });

});
define('frontend-cp/serializers/note', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      uuid: { serialize: false },
      subject: { serialize: false },
      creator: { serialize: false },
      identity: { serialize: false },
      createdAt: { serialize: false },
      updatedAt: { serialize: false },
      'case': { serialize: false }
    }
  });

});
define('frontend-cp/serializers/organization-field', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      fieldType: { key: 'type' }
    }
  });

});
define('frontend-cp/serializers/organization', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      emails: { serialize: false },
      phones: { serialize: false },
      twitter: { serialize: false },
      facebook: { serialize: false },
      addresses: { serialize: false },
      websites: { serialize: false },
      notes: { serialize: false },
      tags: { serialize: false },
      customFields: { serialize: false },
      createdAt: { serialize: false },
      updatedAt: { serialize: false }
      // TODO fieldValues
    }
  });

});
define('frontend-cp/serializers/predicate-collection', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    primaryKey: 'uuid'
  });

});
define('frontend-cp/serializers/relationship-fragment', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      relationshipId: { key: 'id' },
      relationshipType: { key: 'resource_type' }
    }
  });

});
define('frontend-cp/serializers/search-result-group', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({

    primaryKey: 'resource',

    normalizePayload: function normalizePayload(resource) {
      if (resource.resource === 'object') {
        resource.resource = 'search-result-group';
      }

      return this._super(resource);
    }
  });

});
define('frontend-cp/serializers/search-result', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      objectId: { key: 'id' }
    }
  });

});
define('frontend-cp/serializers/tag', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      name: { serialize: false }
    }
  });

});
define('frontend-cp/serializers/thumbnail', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      thumbnailType: { key: 'type' }
    }
  });

});
define('frontend-cp/serializers/twitter-account', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      twitterId: { serialize: false },
      screenName: { serialize: false },
      createdAt: { serialize: false },
      updatedAt: { serialize: false }
    }
  });

});
define('frontend-cp/serializers/user-field', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      fieldType: { key: 'type' }
    }
  });

});
define('frontend-cp/serializers/user-note', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      createdAt: { serialize: false },
      updatedAt: { serialize: false }
    }
  });

});
define('frontend-cp/serializers/user', ['exports', 'frontend-cp/serializers/application'], function (exports, ApplicationSerializer) {

  'use strict';

  exports['default'] = ApplicationSerializer['default'].extend({
    attrs: {
      avatar: { serialize: false },
      emails: { serialize: false },
      phones: { serialize: false },
      twitter: { serialize: false },
      facebook: { serialize: false },
      addresses: { serialize: false },
      website: { serialize: false },
      customFields: { serialize: false },
      tags: { serialize: false },
      notes: { serialize: false },
      passwordUpdateAt: { serialize: false },
      avatarUpdateAt: { serialize: false },
      activityAt: { serialize: false },
      visitedAt: { serialize: false },
      createdAt: { serialize: false },
      updatedAt: { serialize: false }
    }
  });

});
define('frontend-cp/services/context-modal', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Service.extend({
    visible: false,
    event: null,
    title: '',
    activeContextModalId: null,
    index: null,
    inline: false,

    urlService: Ember['default'].inject.service('url'),

    open: function open(contextModalId, event, options) {
      this.setProperties({
        'inline': !!(options && options.inline),
        'visible': true,
        'event': event,
        'index': 0,
        'activeContextModalId': contextModalId
      });
    },

    close: function close() {
      this.setProperties({
        'visible': false,
        'event': null,
        'index': null,
        'title': '',
        'activeContextModalId': null
      });
    },

    next: function next() {
      this.incrementProperty('index');
    },

    prev: function prev() {
      this.decrementProperty('index');
    },

    /**
     * TODO remove once ember fixed
     * This is a hack to fix a bug in ember
     * It appears that you cannot observe the properties of an injected
     * service without first manually using 'get' on it somewhere or using
     * it as a property in a template
     */
    initializeService: (function () {
      this.get('urlService.currentUrl');
    }).on('init'),

    update: (function () {
      this.close();
    }).observes('urlService.currentUrl')

  });

});
define('frontend-cp/services/intl', ['exports', 'ember-intl/services/intl'], function (exports, IntlService) {

	'use strict';

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */

	exports['default'] = IntlService['default'];

});
define('frontend-cp/services/local-store', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Service.extend({
    /**
     * Retrieve an item from the store by key
     *
     * Items are stored as JSON strings
     *
     * @param  {string} key - @todo add this doc
     * @param {Boolean} options.persist Use local storage instead of session storage
     * @return {*} Stored object
     */
    getItem: function getItem(key) {
      var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var _ref$persist = _ref.persist;
      var persist = _ref$persist === undefined ? false : _ref$persist;

      var store = persist ? localStorage : sessionStorage;
      var item = store.getItem(key);

      // Note: stringified undefined will return 'undefined'
      if (item !== null && item !== 'undefined') {
        return JSON.parse(item);
      } else {
        return null;
      }
    },

    /**
     * Place item in the store as a JSON string.
     *
     * Note: only plain objects can be stored.
     *
     * @param {[type]}  key       [description]
     * @param {[type]}  item      [description]
     * @param {Boolean} options.persist Use local storage instead of session storage
     */
    setItem: function setItem(key, item) {
      var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

      var _ref2$persist = _ref2.persist;
      var persist = _ref2$persist === undefined ? false : _ref2$persist;

      // using typeof for strict undefined check
      if (typeof item !== 'undefined') {
        var store = persist ? localStorage : sessionStorage;
        store.setItem(key, JSON.stringify(item));
      }
    },

    /**
     * Remove item from the store.
     *
     * @param {[type]}  key       key of item to be removed
     * @param {Boolean} options.persist Use local storage instead of session storage
     */
    removeItem: function removeItem(key) {
      var _ref3 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var _ref3$persist = _ref3.persist;
      var persist = _ref3$persist === undefined ? false : _ref3$persist;

      var store = persist ? localStorage : sessionStorage;
      store.removeItem(key);
    },

    /**
     * Clear everything in the store
     */
    clearAll: function clearAll() {
      localStorage.clear();
      sessionStorage.clear();
    }
  });

});
define('frontend-cp/services/pusher', ['exports', 'ember', 'frontend-cp/config/environment'], function (exports, Ember, ENV) {

  'use strict';

  /* global Pusher */

  exports['default'] = Ember['default'].Service.extend({
    channelBindings: Ember['default'].Object.create({}),
    options: ENV['default'].APP.PUSHER_OPTIONS,

    initialize: function initialize() {
      if (this.options.logEvents) {
        Pusher.log = function (message) {
          if (window.console && window.console.log) {
            window.console.log(message); // eslint-disable-line
          }
        };
      }
      this.set('pusher', new Pusher(this.options.key));
    },

    subscribeTo: function subscribeTo(channelName, event, context, func) {
      var channel = this.subscribeToChannel(channelName);
      var handler = function handler(data) {
        func.apply(context, [data]);
      };

      this.get('channelBindings')[channelName][func] = handler;
      channel.bind(event, handler);
    },

    unsubscribeTo: function unsubscribeTo(channelName, eventName, func) {
      var channelBindings = this.get('channelBindings');
      var channel = channelBindings.get(channelName);
      if (channel) {
        var handler = channel.get(func);
        channel.unbind(eventName, handler);
      }
    },

    subscribeToChannel: function subscribeToChannel(channelName) {
      var channelBindings = this.get('channelBindings');

      var channelInfo = channelBindings.get(channelName);
      if (!channelInfo) {
        var channel = this.get('pusher').subscribe(channelName);
        channelBindings.set(channelName, { channel: channel });
        return channel;
      }

      return channelInfo.channel;
    }

  });

});
define('frontend-cp/services/route-state', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Service.extend({

    _state: null,

    /**
     * Get the current history state object
     * @return {Object} Key/value object containing state properties
     */
    getState: function getState() {
      var location = this.container.lookup('router:main').get('location');
      return typeof location.getState === 'function' ? location.getState() : null;
    },

    /**
     * Update the current history state, extending any existing state
     * @param {Object} updates Key/value object containing state properties to be updated
     */
    updateState: function updateState(updates) {
      var currentState = this.getState();

      // Extend the existing state with the updates
      var state = Object.assign({}, currentState, updates);

      // Update the history state
      var location = this.container.lookup('router:main').get('location');
      var history = location.get('history');
      if (history) {
        history.replaceState(state, null);
      }
    },

    /**
     * Transition to a path with a corresponding history state object
     * @param {string} url URL path for the target route
     * @param {object} state History state properties to be added after transition with `history.replaceState(state)`
     * @returns {Promise<Transition>} Promise fulfilled with the transition object
     */
    transitionToState: function transitionToState(url, state) {
      var _this = this;

      var router = this.container.lookup('router:main');

      // Ember's router doesn't allow us to hook into the `pushState`
      // call, so we have to apply the state updates once the
      // transition is complete.
      //
      // We have to use an event listener rather than promises because
      // the promise will only resolve AFTER all other `didTransition`
      // event handlers have fired throughout the app (i.e. too late).
      //
      // In Ember, the most recently added listener will fire first,
      // so this will run before all other `didTransition` listeners
      // (unless others were added after `transitionTo()` was called).

      var self = this;
      var didReceiveTransitionEvent = false;
      router.on('didTransition', onTransitionSucceeded);

      // Let Ember's router take care of the transition
      return router.transitionTo(url).then(function () {
        // If we were already at this path, we won't have received a
        // `didTransition` event, so we still need to set the state
        if (!didReceiveTransitionEvent) {
          _this.updateState(state);
        }
      })['finally'](function () {
        router.off('didTransition', onTransitionSucceeded);
      });

      function onTransitionSucceeded() {
        didReceiveTransitionEvent = true;
        self.updateState(state);
      }
    }
  });

});
define('frontend-cp/services/session', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Service.extend({

    /**
     * Property for use in computed properties and observers
     * Ember automatically converts this to an ember array.
     * @type {Array}
     */
    session: null,
    sessionId: null,
    user: null,
    localStoreService: Ember['default'].inject.service('localStore'),
    store: Ember['default'].inject.service(),

    init: function init() {
      this._super.apply(this, arguments);

      this.getSession();
    },

    getSession: function getSession() {
      var _this = this;

      return new Ember['default'].RSVP.Promise(function (resolve) {
        // Session exists
        var session = _this.get('session');
        if (session) {
          resolve(session);
        }

        var sessionId = _this.get('localStoreService').getItem('sessionId', { persist: true });
        // sessionId saved in local storage
        if (sessionId) {
          _this.set('sessionId', sessionId);
          _this._getSession().then(function (session) {
            resolve(session);
          })['catch'](function (e) {
            _this.get('localStoreService').removeItem('sessionId', { persist: true });
            _this.set('sessionId', null);
            _this.set('session', null);
            _this.set('user', null);
            throw e;
          });
          // No session information available
        } else {
            resolve(new Error('No session ID'));
          };
      });
    },

    _getSession: function _getSession() {
      var _this2 = this;

      return this.get('store').find('session', 'current').then(function (session) {
        // We have to explicitly delete a record with id=current.
        // Thank you, Ember Data, for this mess.
        var record = _this2.get('store').peekAll('session').find(function (record) {
          return record.id === 'current';
        });
        record.unloadRecord();
        _this2.set('session', session);
        _this2.set('user', session.get('user'));
      });
    },

    isLoggedIn: function isLoggedIn() {
      return !!this.get('session');
    },

    updateStorage: (function () {
      var sessionId = this.get('session.id');
      if (sessionId) {
        this.set('sessionId', sessionId);
        this.get('localStoreService').setItem('sessionId', sessionId, { persist: true });
      } else {
        this.set('sessionId', null);
        this.get('localStoreService').removeItem('sessionId', { persist: true });
      }
    }).observes('session.id'),

    /**
     * Removes sessionId from store and from local variable.
     * @return {Promise} Ember.RSVP.Promise resolving when logout is complete
     */
    logout: function logout() {
      var _this3 = this;

      var session = this.get('session');
      return session.destroyRecord().then(function () {
        _this3.set('session', null);
      });
    },

    /**
     * Sends email and password to backend for authentication.
     * @param  {string} email - email
     * @param  {string} password - password
     * @return {Promise} Ember.RSVP.Promise containing session
     */
    requestSession: function requestSession(email, password) {
      var _this4 = this;

      var unset = function unset() {
        _this4.set('email', null);
        _this4.set('password', null);
      };

      this.set('email', email);
      this.set('password', password);
      return this._getSession().then(unset, function (e) {
        unset();
        throw e;
      });
    }
  });

});
define('frontend-cp/services/store-cache', ['exports', 'ember', 'npm:lodash'], function (exports, Ember, _) {

  'use strict';

  exports['default'] = Ember['default'].Service.extend({
    store: Ember['default'].inject.service(),

    allCache: null,
    queryCache: null,

    initCache: (function () {
      this.set('allCache', {});
      this.set('queryCache', {});
    }).on('init'),

    findAll: function findAll(type) {
      var _this = this;

      var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var _ref$reload = _ref.reload;
      var reload = _ref$reload === undefined ? false : _ref$reload;

      if (!reload && this.get('allCache.' + type)) {
        return new Ember['default'].RSVP.Promise(function (resolve) {
          resolve(_this.get('allCache.' + type));
        });
      } else {
        return this.get('store').findAll(type).then(function (data) {
          _this.set('allCache.' + type, data);
          return data;
        });
      }
    },

    query: function query(type, _query) {
      var _this2 = this;

      var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

      var _ref2$reload = _ref2.reload;
      var reload = _ref2$reload === undefined ? false : _ref2$reload;

      var serializedQuery = type + ':' + _['default'].map(_query, function (value, key) {
        return key + ':' + value;
      }).sort().join(':');

      if (!reload && this.get('allCache.' + serializedQuery)) {
        return new Ember['default'].RSVP.Promise(function (resolve) {
          resolve(_this2.get('allCache.' + serializedQuery));
        });
      } else {
        return this.get('store').query(type, _query).then(function (data) {
          _this2.set('allCache.' + serializedQuery, data);
          return data;
        });
      }
    }
  });

});
define('frontend-cp/services/tabs', ['exports', 'ember', 'frontend-cp/models/tab', 'npm:lodash'], function (exports, Ember, Tab, _) {

  'use strict';

  exports['default'] = Ember['default'].Service.extend({
    localStoreService: Ember['default'].inject.service('localStore'),

    /**
     * Create a new tab and add it to the store
     * @param {string} options.baseUrl URL path for the tab's main root
     * @param {string} options.targetUrl URL which is currently shown in the tab (could be nested inside the tab's main route)
     * @param {string} [options.label] Tab label
     * @return {Tab} Newly-created tab object
     */
    createTab: function createTab() {
      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      var _ref$url = _ref.url;
      var url = _ref$url === undefined ? null : _ref$url;
      var _ref$baseUrl = _ref.baseUrl;
      var baseUrl = _ref$baseUrl === undefined ? null : _ref$baseUrl;
      var _ref$label = _ref.label;
      var label = _ref$label === undefined ? null : _ref$label;

      return Tab['default'].create({
        url: url,
        baseUrl: baseUrl || url,
        label: label,
        selected: false,
        state: null
      });
    },

    /**
     * Save a set of tabs to local storage
     * @param {Tab[]} tabModels Tab models to save
     */
    saveTabsToStorage: function saveTabsToStorage(tabModels) {
      // Convert tab models into an array of simplified tab objects
      var tabInfos = tabModels.map(function (tabModel) {
        var tabInfo = _['default'].pick(tabModel, ['baseUrl', 'url', 'label']);
        return tabInfo;
      }).toArray();

      // Copy tabs array into store
      this.get('localStoreService').setItem('tabs', tabInfos, {
        persist: false
      });
    },

    /**
     * Load a set of tabs from local storage
     * @return {Tab[]} Saved tab models, or an empty array if there are no saved tabs
     */
    loadTabsFromStorage: function loadTabsFromStorage() {
      // Load tabs array from the store
      var tabInfos = this.get('localStoreService').getItem('tabs', {
        persist: false
      });
      if (!tabInfos) {
        return [];
      }

      // Convert simplified tab objects into an array of Tab models
      var tabModels = tabInfos.map(function (tabInfo) {
        return Tab['default'].create({
          baseUrl: tabInfo.baseUrl,
          url: tabInfo.url,
          label: tabInfo.label
        });
      });

      return tabModels;
    }
  });

});
define('frontend-cp/services/url', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Service.extend({
    currentUrl: null
  });

});
define('frontend-cp/services/validations', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  var set = Ember['default'].set;

  exports['default'] = Ember['default'].Object.extend({
    init: function init() {
      set(this, 'cache', {});
    }
  });

});
define('frontend-cp/session/admin/manage/case-fields/edit/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  /*eslint no-alert:0*/
  exports['default'] = Ember['default'].Route.extend({
    controllerName: 'session.admin.manage.case-fields.new',

    model: function model(params) {
      return this.store.find('case-field', params.case_field_id);
    },

    actions: {
      willTransition: function willTransition(transition) {
        if (this.controller.userHasChangedModel()) {
          //TODO: waiting on design
          var locales = this.get('intl.current');
          var translatedConfirmationMessage = this.get('intl.adapter').findTranslation(locales, 'generic.confirm.lose_changes');
          var shouldRollBackModel = confirm(translatedConfirmationMessage.translation);

          if (shouldRollBackModel) {
            this.controller.send('rollBackModel');
            return true;
          } else {
            transition.abort();
          }
        }
      }
    }
  });

});
define('frontend-cp/session/admin/manage/case-fields/edit/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/admin/manage/case-fields/edit/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-admin/page-header",[],["title",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.edit.heading"],[],["loc",[null,[1,45],[1,87]]]]],[],["loc",[null,[1,29],[1,88]]]],"cancelAction","transitionToIndexRoute","buttonText","Save","buttonAction","saveCaseField"],["loc",[null,[1,0],[1,175]]]],
        ["inline","ko-admin/case-fields/edit",[],["caseField",["subexpr","@mut",[["get","model",["loc",[null,[2,38],[2,43]]]]],[],[]],"onOptionAddition","addNewOption","onOptionRemoval","removeOption"],["loc",[null,[2,0],[2,108]]]],
        ["inline","ko-admin/page-footer",[],["cancelAction","transitionToIndexRoute","buttonText",["subexpr","format-message",[["subexpr","intl-get",["generic.save"],[],["loc",[null,[4,88],[4,113]]]]],[],["loc",[null,[4,72],[4,114]]]],"buttonAction","saveCaseField"],["loc",[null,[4,0],[4,145]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/admin/manage/case-fields/index/controller', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  /*eslint no-alert:0*/
  exports['default'] = Ember['default'].Controller.extend({

    systemfields: (function () {
      return this.get('model').filter(function (field) {
        return field.get('isSystem');
      });
    }).property('model.@each'),

    customfields: (function () {
      return this.get('model').filter(function (field) {
        return field.get('isEnabled') && !field.get('isSystem');
      }).sortBy('sortOrder');
    }).property('model.@each.isEnabled', 'model.@each.isEnabled', 'model.@each.sortOrder'),

    disabledfields: (function () {
      return this.get('model').filter(function (field) {
        return !field.get('isEnabled');
      });
    }).property('model.@each.isEnabled'),

    actions: {
      transitionToNewCaseFieldRoute: function transitionToNewCaseFieldRoute() {
        this.transitionToRoute('session.admin.manage.case-fields.new');
      },
      toggleEnabledStatus: function toggleEnabledStatus(casefield) {
        casefield.toggleProperty('isEnabled');
        casefield.save();
      },

      showDeleteConfirmation: function showDeleteConfirmation(field) {
        if (confirm('Are you sure you wish to delete this field?')) {
          this.send('deleteField', field);
        }
      },

      deleteField: function deleteField(field) {
        field.destroyRecord();
      },

      editField: function editField(field) {
        this.transitionToRoute('session.admin.manage.case-fields.edit', field);
      },

      reorderCustomFields: function reorderCustomFields(orderedCustomFields) {

        // API includes system fields in the ordering
        var order = this.get('systemfields.length') + 1;

        orderedCustomFields.forEach(function (field) {
          // only fire set if the order has changed - otherwise it makes a
          // put request for every custom field
          if (field.get('sortOrder') !== order) {
            field.set('sortOrder', order);
            field.save();
          }
          order++;
        });
      }
    }
  });

});
define('frontend-cp/session/admin/manage/case-fields/index/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({

    model: function model() {
      return this.store.find('case-field');
    }

  });

});
define('frontend-cp/session/admin/manage/case-fields/index/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 8,
                  "column": 4
                },
                "end": {
                  "line": 14,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1,"class","ko-simple-list_column");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode(" (System)");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1,"class","ko-simple-list_column");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1,"class","ko-simple-list_column ko-simple-list__actions");
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("a");
              dom.setAttribute(el2,"href","#");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n      ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element5 = dom.childAt(fragment, [5, 1]);
              var morphs = new Array(4);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
              morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);
              morphs[2] = dom.createElementMorph(element5);
              morphs[3] = dom.createMorphAt(element5,0,0);
              return morphs;
            },
            statements: [
              ["content","systemfield.title",["loc",[null,[9,41],[9,62]]]],
              ["inline","format-message",[["subexpr","intl-get",[["get","systemfield.fieldType.nameIntlKey",["loc",[null,[10,68],[10,101]]]]],[],["loc",[null,[10,58],[10,102]]]]],[],["loc",[null,[10,41],[10,104]]]],
              ["element","action",["editField",["get","systemfield",["loc",[null,[12,41],[12,52]]]]],[],["loc",[null,[12,20],[12,54]]]],
              ["inline","format-message",[["subexpr","intl-get",["generic.edit"],[],["loc",[null,[12,72],[12,97]]]]],[],["loc",[null,[12,55],[12,99]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 2
              },
              "end": {
                "line": 15,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","ko-simple-list/row",[],[],0,null,["loc",[null,[8,4],[14,27]]]]
          ],
          locals: ["systemfield"],
          templates: [child0]
        };
      }());
      var child1 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 18,
                  "column": 4
                },
                "end": {
                  "line": 26,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1,"class","ko-simple-list_column");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1,"class","ko-simple-list_column");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1,"class","ko-simple-list_column ko-simple-list__actions");
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("a");
              dom.setAttribute(el2,"href","#");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode(" |\n        ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("a");
              dom.setAttribute(el2,"href","#");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode(" |\n        ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("a");
              dom.setAttribute(el2,"href","#");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n      ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element1 = dom.childAt(fragment, [5]);
              var element2 = dom.childAt(element1, [1]);
              var element3 = dom.childAt(element1, [3]);
              var element4 = dom.childAt(element1, [5]);
              var morphs = new Array(8);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
              morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);
              morphs[2] = dom.createElementMorph(element2);
              morphs[3] = dom.createMorphAt(element2,0,0);
              morphs[4] = dom.createElementMorph(element3);
              morphs[5] = dom.createMorphAt(element3,0,0);
              morphs[6] = dom.createElementMorph(element4);
              morphs[7] = dom.createMorphAt(element4,0,0);
              return morphs;
            },
            statements: [
              ["content","customfield.title",["loc",[null,[19,41],[19,62]]]],
              ["inline","format-message",[["subexpr","intl-get",[["get","customfield.fieldType.nameIntlKey",["loc",[null,[20,68],[20,101]]]]],[],["loc",[null,[20,58],[20,102]]]]],[],["loc",[null,[20,41],[20,104]]]],
              ["element","action",["editField",["get","customfield",["loc",[null,[22,41],[22,52]]]]],[],["loc",[null,[22,20],[22,54]]]],
              ["inline","format-message",[["subexpr","intl-get",["generic.edit"],[],["loc",[null,[22,72],[22,97]]]]],[],["loc",[null,[22,55],[22,99]]]],
              ["element","action",["toggleEnabledStatus",["get","customfield",["loc",[null,[23,51],[23,62]]]]],[],["loc",[null,[23,20],[23,64]]]],
              ["inline","format-message",[["subexpr","intl-get",["generic.disable"],[],["loc",[null,[23,82],[23,110]]]]],[],["loc",[null,[23,65],[23,112]]]],
              ["element","action",["showDeleteConfirmation",["get","customfield",["loc",[null,[24,54],[24,65]]]]],[],["loc",[null,[24,20],[24,67]]]],
              ["inline","format-message",[["subexpr","intl-get",["generic.delete"],[],["loc",[null,[24,85],[24,112]]]]],[],["loc",[null,[24,68],[24,114]]]]
            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 2
              },
              "end": {
                "line": 27,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","ko-simple-list/row",[],[],0,null,["loc",[null,[18,4],[26,27]]]]
          ],
          locals: ["customfield"],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 28,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","each",[["get","systemfields",["loc",[null,[7,10],[7,22]]]]],[],0,null,["loc",[null,[7,2],[15,11]]]],
          ["block","ko-reorderable-list",[],["reorderedListAction","reorderCustomFields","items",["subexpr","@mut",[["get","customfields",["loc",[null,[17,73],[17,85]]]]],[],[]]],1,null,["loc",[null,[17,2],[27,26]]]]
        ],
        locals: [],
        templates: [child0, child1]
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 33,
                    "column": 6
                  },
                  "end": {
                    "line": 39,
                    "column": 6
                  }
                },
                "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("        ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1,"class","ko-simple-list_column");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n        ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1,"class","ko-simple-list_column");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n        ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1,"class","ko-simple-list_column ko-simple-list__actions");
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("a");
                dom.setAttribute(el2,"href","#");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n        ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [5, 1]);
                var morphs = new Array(4);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
                morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);
                morphs[2] = dom.createElementMorph(element0);
                morphs[3] = dom.createMorphAt(element0,0,0);
                return morphs;
              },
              statements: [
                ["content","disabledfield.title",["loc",[null,[34,43],[34,66]]]],
                ["inline","format-message",[["subexpr","intl-get",[["get","disabledfield.fieldType.nameIntlKey",["loc",[null,[35,70],[35,105]]]]],[],["loc",[null,[35,60],[35,106]]]]],[],["loc",[null,[35,43],[35,108]]]],
                ["element","action",["toggleEnabledStatus",["get","disabledfield",["loc",[null,[37,53],[37,66]]]]],[],["loc",[null,[37,22],[37,68]]]],
                ["inline","format-message",[["subexpr","intl-get",["generic.enable"],[],["loc",[null,[37,86],[37,113]]]]],[],["loc",[null,[37,69],[37,115]]]]
              ],
              locals: [],
              templates: []
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 32,
                  "column": 4
                },
                "end": {
                  "line": 40,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
            },
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [
              ["block","ko-simple-list/row",[],[],0,null,["loc",[null,[33,6],[39,29]]]]
            ],
            locals: ["disabledfield"],
            templates: [child0]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 31,
                "column": 2
              },
              "end": {
                "line": 41,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","each",[["get","disabledfields",["loc",[null,[32,12],[32,26]]]]],[],0,null,["loc",[null,[32,4],[40,13]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 30,
              "column": 0
            },
            "end": {
              "line": 42,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-simple-list",[],["title",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.headings.disabled_fields"],[],["loc",[null,[31,42],[31,96]]]]],[],["loc",[null,[31,26],[31,97]]]]],0,null,["loc",[null,[31,2],[41,21]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/admin/manage/case-fields/index/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);
        morphs[3] = dom.createMorphAt(fragment,6,6,contextualElement);
        morphs[4] = dom.createMorphAt(fragment,8,8,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-admin/page-header",[],["title","Case Fields","buttonText",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.buttons.add_new_casefield"],[],["loc",[null,[1,70],[1,125]]]]],[],["loc",[null,[1,54],[1,126]]]],"buttonAction","transitionToNewCaseFieldRoute"],["loc",[null,[1,0],[1,173]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.description"],[],["loc",[null,[4,17],[4,58]]]]],[],["loc",[null,[4,0],[4,60]]]],
        ["block","ko-simple-list",[],["title",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.headings.enabled_fields"],[],["loc",[null,[6,40],[6,93]]]]],[],["loc",[null,[6,24],[6,94]]]]],0,null,["loc",[null,[6,0],[28,19]]]],
        ["block","if",[["get","disabledfields.length",["loc",[null,[30,6],[30,27]]]]],[],1,null,["loc",[null,[30,0],[42,7]]]],
        ["inline","ko-admin/page-footer",[],["buttonText",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.buttons.add_new_casefield"],[],["loc",[null,[45,50],[45,105]]]]],[],["loc",[null,[45,34],[45,106]]]],"buttonAction","transitionToNewCaseFieldRoute"],["loc",[null,[45,0],[45,153]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/session/admin/manage/case-fields/new/controller', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend({
    queryParams: ['caseFieldTypeId'],
    caseFieldTypeId: null,

    optionsToBeDeleted: [],
    customFieldTypes: [],

    updateModelCaseFieldType: (function () {
      var _this = this;

      // this can be called before the model is set if
      // 1st page load has caseFieldType set
      if (this.get('model') !== null && this.get('caseFieldTypeId') !== null) {
        this.store.find('caseFieldType', this.get('caseFieldTypeId')).then(function (caseFieldType) {
          _this.set('model.fieldType', caseFieldType);
        });
      }
    }).observes('caseFieldTypeId'),

    userHasChangedModel: function userHasChangedModel() {
      return this.get('model').hasDirtyChanges();
    },

    actions: {
      rollBackModel: function rollBackModel() {
        this.get('model').rollback();

        if (this.get('model.options.length')) {
          this.get('model.options').forEach(function (option) {
            option.rollback();
          });
        }
      },

      transitionToIndexRoute: function transitionToIndexRoute() {
        this.transitionToRoute('session.admin.manage.case-fields.index');
      },

      setCaseFieldType: function setCaseFieldType(caseFieldType) {
        this.transitionToRoute({ queryParams: { caseFieldTypeId: caseFieldType.id } });
      },

      addNewOption: function addNewOption() {
        var maxSortOrder = Math.max.apply(Math, this.get('model.options').map(function (option) {
          return option.sortOrder;
        }));

        var newOption = this.store.createRecord('field-option', {
          sortOrder: maxSortOrder + 1
        });
        this.get('model.options').pushObject(newOption);
      },

      removeOption: function removeOption(option) {
        this.get('model.options').removeObject(option);
        this.get('optionsToBeDeleted').pushObject(option);
      },

      saveCaseField: function saveCaseField() {
        var _this2 = this;

        var savePromiseArray = [];

        this.get('model').save().then(function () {
          var options = _this2.get('model.options');

          // saving the model will re-add all the options
          // we have marked for deletion - remove them again
          _this2.get('optionsToBeDeleted').forEach(function (option) {
            option.deleteRecord();
            savePromiseArray.push(option.save());
            options.removeObject(option);
          });

          // Save all other models
          options.forEach(function (option) {
            savePromiseArray.push(option.save());
          });

          Ember['default'].RSVP.all(savePromiseArray).then(function () {
            _this2.send('transitionToIndexRoute');
          });
        });
      }
    }

  });

});
define('frontend-cp/session/admin/manage/case-fields/new/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  /*eslint no-alert:0*/
  exports['default'] = Ember['default'].Route.extend({

    model: function model() {
      return this.store.createRecord('case-field');
    },

    resetController: function resetController(controller) {
      controller.set('caseFieldTypeId', null);
    },

    actions: {
      willTransition: function willTransition(transition) {
        if (this.controller.userHasChangedModel()) {
          var locales = this.get('intl.current');
          var translatedConfirmationMessage = this.get('intl.adapter').findTranslation(locales, 'generic.confirm.lose_changes');
          var shouldRollBackModel = confirm(translatedConfirmationMessage.translation);

          if (shouldRollBackModel) {
            this.controller.send('rollBackModel');
            return true;
          } else {
            transition.abort();
            return;
          }
        }
        // edge case - we created an empty model, so don't ask
        // a user to to confirm anything here; it's empty, so
        // just delete it
        if (!this.controller.get('model.id')) {
          this.controller.send('rollBackModel');
        }
      }
    },

    setupController: function setupController(controller, model) {
      if (controller.get('caseFieldTypeId')) {
        this.store.find('caseFieldType', controller.get('caseFieldTypeId')).then(function (caseFieldType) {
          model.set('type', caseFieldType);
        });
      }

      if (model.get('options.length') === 0) {
        // we always need an option for the user to start editing
        model.get('options').pushObject(this.store.createRecord('field-option', {
          sortOrder: 1
        }));
      }

      this.store.find('caseFieldType').then(function (caseFieldTypes) {
        var customFieldTypes = caseFieldTypes.filter(function (caseFieldType) {
          return !caseFieldType.isSystem;
        });
        controller.set('customFieldTypes', customFieldTypes);
      });

      controller.set('model', model);
    }
  });

});
define('frontend-cp/session/admin/manage/case-fields/new/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/session/admin/manage/case-fields/new/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-admin/page-header",[],["title",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.new.heading"],[],["loc",[null,[2,47],[2,88]]]]],[],["loc",[null,[2,31],[2,89]]]],"cancelAction","transitionToIndexRoute"],["loc",[null,[2,2],[2,129]]]],
          ["inline","ko-admin/case-fields/select-type",[],["caseFieldTypes",["subexpr","@mut",[["get","customFieldTypes",["loc",[null,[3,52],[3,68]]]]],[],[]]],["loc",[null,[3,2],[3,70]]]],
          ["inline","ko-admin/page-footer",[],["cancelAction","transitionToIndexRoute","buttonAction","saveCaseField"],["loc",[null,[4,2],[4,93]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/session/admin/manage/case-fields/new/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-admin/page-header",[],["title",["subexpr","format-message",[["subexpr","intl-get",["admin.casefields.new.heading"],[],["loc",[null,[7,28],[7,69]]]]],[],["loc",[null,[7,12],[7,70]]]],"cancelAction","transitionToIndexRoute","buttonText",["subexpr","format-message",[["subexpr","intl-get",["generic.save"],[],["loc",[null,[9,33],[9,58]]]]],[],["loc",[null,[9,17],[9,59]]]],"buttonAction","saveCaseField"],["loc",[null,[6,2],[11,4]]]],
          ["inline","ko-admin/case-fields/edit",[],["caseField",["subexpr","@mut",[["get","model",["loc",[null,[13,40],[13,45]]]]],[],[]],"onOptionAddition","addNewOption","onOptionRemoval","removeOption"],["loc",[null,[13,2],[13,110]]]],
          ["inline","ko-admin/page-footer",[],["cancelAction","transitionToIndexRoute","buttonText",["subexpr","format-message",[["subexpr","intl-get",["generic.save"],[],["loc",[null,[17,33],[17,58]]]]],[],["loc",[null,[17,17],[17,59]]]],"buttonAction","saveCaseField"],["loc",[null,[15,2],[19,4]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/admin/manage/case-fields/new/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["block","if",[["subexpr","not",[["get","caseFieldTypeId",["loc",[null,[1,11],[1,26]]]]],[],["loc",[null,[1,6],[1,27]]]]],[],0,1,["loc",[null,[1,0],[20,7]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/session/admin/manage/case-forms/edit/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  /*eslint no-alert:0*/
  exports['default'] = Ember['default'].Route.extend({
    controllerName: 'session.admin.manage.case-forms.new',

    model: function model(params) {
      return this.store.find('case-form', params.case_form_id);
    },

    actions: {
      willTransition: function willTransition(transition) {
        if (this.controller.userHasChangedModel()) {
          var locales = this.get('intl.current');
          var translatedConfirmationMessage = this.get('intl.adapter').findTranslation(locales, 'generic.confirm.lose_changes');
          var shouldRollBackModel = confirm(translatedConfirmationMessage.translation);

          if (!shouldRollBackModel) {
            transition.abort();
            return;
          }
          this.controller.send('rollBackModel');
        }
      }
    }
  });

});
define('frontend-cp/session/admin/manage/case-forms/edit/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/session/admin/manage/case-forms/edit/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-admin/page-header",[],["title",["subexpr","format-message",[["subexpr","intl-get",["admin.caseforms.edit.heading"],[],["loc",[null,[2,24],[2,65]]]]],[],["loc",[null,[2,8],[2,66]]]],"cancelAction","transitionToIndexRoute","buttonText",["subexpr","format-message",[["subexpr","intl-get",["generic.save"],[],["loc",[null,[4,29],[4,54]]]]],[],["loc",[null,[4,13],[4,55]]]],"buttonAction","saveCaseField"],["loc",[null,[1,0],[6,2]]]],
        ["inline","ko-admin/case-forms/edit",[],["caseForm",["subexpr","@mut",[["get","model",["loc",[null,[8,36],[8,41]]]]],[],[]]],["loc",[null,[8,0],[8,43]]]],
        ["inline","ko-admin/page-footer",[],["cancelAction","transitionToIndexRoute","buttonText",["subexpr","format-message",[["subexpr","intl-get",["generic.save"],[],["loc",[null,[12,29],[12,54]]]]],[],["loc",[null,[12,13],[12,55]]]],"buttonAction","saveCaseField"],["loc",[null,[10,0],[14,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/admin/manage/case-forms/index/controller', ['exports', 'ember', 'jquery'], function (exports, Ember, $) {

  'use strict';

  /*eslint no-alert:0*/
  exports['default'] = Ember['default'].Controller.extend({

    enabledForms: (function () {
      return this.get('model').filter(function (form) {
        return form.get('isEnabled');
      }).sortBy('sortOrder');
    }).property('model.@each.isEnabled', 'model.@each.sortOrder'),

    disabledForms: (function () {
      return this.get('model').filter(function (form) {
        return !form.get('isEnabled');
      });
    }).property('model.@each.isEnabled'),

    actions: {
      makeDefault: function makeDefault(caseform) {
        this.store.peekAll('case-form').forEach(function (caseform) {
          caseform.isDefault = false;
        });
        caseform.isDefault = true;

        $['default'].ajax({
          url: '/api/v1/cases/forms/' + caseform.get('id') + '/default.json',
          type: 'PUT'
        });
      },

      toggleEnabledStatus: function toggleEnabledStatus(caseform) {
        caseform.toggleProperty('isEnabled');
        caseform.save();
      },

      transitionToNewCaseFormRoute: function transitionToNewCaseFormRoute() {
        this.transitionToRoute('session.admin.manage.case-forms.new');
      },
      editForm: function editForm(form) {
        this.transitionToRoute('session.admin.manage.case-forms.edit', form);
      },

      showDeleteConfirmation: function showDeleteConfirmation(form) {
        var locales = this.get('intl.current');
        var deleteConfirmationMessage = this.get('intl.adapter').findTranslation(locales, 'generic.confirm.delete');

        if (confirm(deleteConfirmationMessage.translation)) {
          this.send('deleteField', form);
        }
      },
      deleteField: function deleteField(form) {
        form.destroyRecord();
      }
    }
  });

});
define('frontend-cp/session/admin/manage/case-forms/index/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({
    model: function model() {
      return this.store.find('case-form');
    }
  });

});
define('frontend-cp/session/admin/manage/case-forms/index/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 12,
                    "column": 56
                  },
                  "end": {
                    "line": 12,
                    "column": 127
                  }
                },
                "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("(");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode(")");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
                return morphs;
              },
              statements: [
                ["inline","format-message",[["subexpr","intl-get",["generic.default"],[],["loc",[null,[12,96],[12,124]]]]],[],["loc",[null,[12,79],[12,126]]]]
              ],
              locals: [],
              templates: []
            };
          }());
          var child1 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 16,
                    "column": 8
                  },
                  "end": {
                    "line": 18,
                    "column": 8
                  }
                },
                "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("a");
                dom.setAttribute(el1,"href","#");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode(" |\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element1 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createElementMorph(element1);
                morphs[1] = dom.createMorphAt(element1,0,0);
                return morphs;
              },
              statements: [
                ["element","action",["makeDefault",["get","form",["loc",[null,[17,47],[17,51]]]]],[],["loc",[null,[17,24],[17,53]]]],
                ["inline","format-message",[["subexpr","intl-get",["generic.make_default"],[],["loc",[null,[17,71],[17,104]]]]],[],["loc",[null,[17,54],[17,106]]]]
              ],
              locals: [],
              templates: []
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 11,
                  "column": 4
                },
                "end": {
                  "line": 21,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1,"class","ko-simple-list_column");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode(" ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1,"class","ko-simple-list_column ko-simple-list__actions");
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("a");
              dom.setAttribute(el2,"href","#");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode(" |\n        ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("a");
              dom.setAttribute(el2,"href","#");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode(" |\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("        ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("a");
              dom.setAttribute(el2,"href","#");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n      ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element2 = dom.childAt(fragment, [1]);
              var element3 = dom.childAt(fragment, [3]);
              var element4 = dom.childAt(element3, [1]);
              var element5 = dom.childAt(element3, [3]);
              var element6 = dom.childAt(element3, [7]);
              var morphs = new Array(9);
              morphs[0] = dom.createMorphAt(element2,0,0);
              morphs[1] = dom.createMorphAt(element2,2,2);
              morphs[2] = dom.createElementMorph(element4);
              morphs[3] = dom.createMorphAt(element4,0,0);
              morphs[4] = dom.createElementMorph(element5);
              morphs[5] = dom.createMorphAt(element5,0,0);
              morphs[6] = dom.createMorphAt(element3,5,5);
              morphs[7] = dom.createElementMorph(element6);
              morphs[8] = dom.createMorphAt(element6,0,0);
              return morphs;
            },
            statements: [
              ["content","form.title",["loc",[null,[12,41],[12,55]]]],
              ["block","if",[["get","form.isDefault",["loc",[null,[12,62],[12,76]]]]],[],0,null,["loc",[null,[12,56],[12,134]]]],
              ["element","action",["editForm",["get","form",["loc",[null,[14,40],[14,44]]]]],[],["loc",[null,[14,20],[14,46]]]],
              ["inline","format-message",[["subexpr","intl-get",["generic.edit"],[],["loc",[null,[14,64],[14,89]]]]],[],["loc",[null,[14,47],[14,91]]]],
              ["element","action",["toggleEnabledStatus",["get","form",["loc",[null,[15,51],[15,55]]]]],[],["loc",[null,[15,20],[15,57]]]],
              ["inline","format-message",[["subexpr","intl-get",["generic.disable"],[],["loc",[null,[15,75],[15,103]]]]],[],["loc",[null,[15,58],[15,105]]]],
              ["block","if",[["subexpr","not",[["get","form.isDefault",["loc",[null,[16,19],[16,33]]]]],[],["loc",[null,[16,14],[16,34]]]]],[],1,null,["loc",[null,[16,8],[18,15]]]],
              ["element","action",["showDeleteConfirmation",["get","form",["loc",[null,[19,54],[19,58]]]]],[],["loc",[null,[19,20],[19,60]]]],
              ["inline","format-message",[["subexpr","intl-get",["generic.delete"],[],["loc",[null,[19,78],[19,105]]]]],[],["loc",[null,[19,61],[19,107]]]]
            ],
            locals: [],
            templates: [child0, child1]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 10,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
          },
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","ko-simple-list/row",[],[],0,null,["loc",[null,[11,4],[21,27]]]]
          ],
          locals: ["form"],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 0
            },
            "end": {
              "line": 23,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","each",[["get","enabledForms",["loc",[null,[10,10],[10,22]]]]],[],0,null,["loc",[null,[10,2],[22,11]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 28,
                    "column": 6
                  },
                  "end": {
                    "line": 33,
                    "column": 6
                  }
                },
                "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("        ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1,"class","ko-simple-list_column");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n        ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1,"class","ko-simple-list_column ko-simple-list__actions");
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("a");
                dom.setAttribute(el2,"href","#");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n        ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [3, 1]);
                var morphs = new Array(3);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
                morphs[1] = dom.createElementMorph(element0);
                morphs[2] = dom.createMorphAt(element0,0,0);
                return morphs;
              },
              statements: [
                ["content","form.title",["loc",[null,[29,43],[29,57]]]],
                ["element","action",["toggleEnabledStatus",["get","form",["loc",[null,[31,53],[31,57]]]]],[],["loc",[null,[31,22],[31,59]]]],
                ["inline","format-message",[["subexpr","intl-get",["generic.enable"],[],["loc",[null,[31,77],[31,104]]]]],[],["loc",[null,[31,60],[31,106]]]]
              ],
              locals: [],
              templates: []
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 27,
                  "column": 4
                },
                "end": {
                  "line": 34,
                  "column": 4
                }
              },
              "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
            },
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [
              ["block","ko-simple-list/row",[],[],0,null,["loc",[null,[28,6],[33,29]]]]
            ],
            locals: ["form"],
            templates: [child0]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 26,
                "column": 2
              },
              "end": {
                "line": 35,
                "column": 2
              }
            },
            "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","each",[["get","disabledForms",["loc",[null,[27,12],[27,25]]]]],[],0,null,["loc",[null,[27,4],[34,13]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-simple-list",[],["title",["subexpr","format-message",[["subexpr","intl-get",["generic.disabled"],[],["loc",[null,[26,42],[26,71]]]]],[],["loc",[null,[26,26],[26,72]]]]],0,null,["loc",[null,[26,2],[35,21]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 42,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/session/admin/manage/case-forms/index/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);
        morphs[3] = dom.createMorphAt(fragment,6,6,contextualElement);
        morphs[4] = dom.createMorphAt(fragment,8,8,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-admin/page-header",[],["title",["subexpr","format-message",[["subexpr","intl-get",["admin.caseforms"],[],["loc",[null,[2,24],[2,52]]]]],[],["loc",[null,[2,8],[2,53]]]],"buttonText",["subexpr","format-message",[["subexpr","intl-get",["admin.caseforms.buttons.add_new_caseform"],[],["loc",[null,[3,29],[3,82]]]]],[],["loc",[null,[3,13],[3,83]]]],"buttonAction","transitionToNewCaseFormRoute"],["loc",[null,[1,0],[5,2]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.casefields.description"],[],["loc",[null,[7,17],[7,58]]]]],[],["loc",[null,[7,0],[7,60]]]],
        ["block","ko-simple-list",[],["title",["subexpr","format-message",[["subexpr","intl-get",["generic.enabled"],[],["loc",[null,[9,40],[9,68]]]]],[],["loc",[null,[9,24],[9,69]]]]],0,null,["loc",[null,[9,0],[23,19]]]],
        ["block","if",[["get","disabledForms",["loc",[null,[25,6],[25,19]]]]],[],1,null,["loc",[null,[25,0],[36,7]]]],
        ["inline","ko-admin/page-footer",[],["buttonText",["subexpr","format-message",[["subexpr","intl-get",["admin.caseforms.buttons.add_new_caseform"],[],["loc",[null,[40,29],[40,82]]]]],[],["loc",[null,[40,13],[40,83]]]],"buttonAction","transitionToNewCaseFormRoute"],["loc",[null,[39,0],[42,2]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/session/admin/manage/case-forms/new/controller', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend({

    actions: {
      transitionToIndexRoute: function transitionToIndexRoute() {
        this.transitionToRoute('session.admin.manage.case-forms.index');
      },
      rollBackModel: function rollBackModel() {
        this.get('model').rollback();
      },
      saveCaseField: function saveCaseField() {
        var _this = this;

        this.get('model').save().then(function () {
          _this.send('transitionToIndexRoute');
        });
      }
    },

    userHasChangedModel: function userHasChangedModel() {
      return this.get('model').hasDirtyChanges();
    }
  });

});
define('frontend-cp/session/admin/manage/case-forms/new/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  /*eslint no-alert:0*/
  exports['default'] = Ember['default'].Route.extend({

    model: function model() {
      var caseForm = undefined;

      caseForm = this.store.createRecord('case-form');

      this.store.find('case-field').then(function (caseFields) {
        caseFields.forEach(function (field) {
          if (field.get('isSystem')) {
            caseForm.get('fields').pushObject(field);
          }
        });
        // rebuild relationship cache
        // because these changes are made by default
        caseForm.cacheRelationships();
      });

      return caseForm;
    },

    actions: {
      willTransition: function willTransition(transition) {
        if (this.controller.userHasChangedModel()) {
          var locales = this.get('intl.current');
          var translatedConfirmationMessage = this.get('intl.adapter').findTranslation(locales, 'generic.confirm.lose_changes');
          var shouldRollBackModel = confirm(translatedConfirmationMessage.translation);

          if (!shouldRollBackModel) {
            transition.abort();
            return;
          }
        }
        this.controller.send('rollBackModel');
      }
    }
  });

});
define('frontend-cp/session/admin/manage/case-forms/new/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 2
          }
        },
        "moduleName": "frontend-cp/session/admin/manage/case-forms/new/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["inline","ko-admin/page-header",[],["title",["subexpr","format-message",[["subexpr","intl-get",["admin.caseforms.new.heading"],[],["loc",[null,[2,26],[2,66]]]]],[],["loc",[null,[2,10],[2,67]]]],"cancelAction","transitionToIndexRoute","buttonText",["subexpr","format-message",[["subexpr","intl-get",["generic.save"],[],["loc",[null,[4,31],[4,56]]]]],[],["loc",[null,[4,15],[4,57]]]],"buttonAction","saveCaseField"],["loc",[null,[1,0],[6,2]]]],
        ["inline","ko-admin/case-forms/edit",[],["caseForm",["subexpr","@mut",[["get","model",["loc",[null,[8,36],[8,41]]]]],[],[]]],["loc",[null,[8,0],[8,43]]]],
        ["inline","ko-admin/page-footer",[],["cancelAction","transitionToIndexRoute","buttonText",["subexpr","format-message",[["subexpr","intl-get",["generic.save"],[],["loc",[null,[12,29],[12,54]]]]],[],["loc",[null,[12,13],[12,55]]]],"buttonAction","saveCaseField"],["loc",[null,[10,0],[14,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/admin/showcase/controller', ['exports', 'ember', 'frontend-cp/mixins/pusher-binding'], function (exports, Ember, PusherBinding) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend(PusherBinding['default'], {
    view: null,

    // Pusher is off because we're still using my expired personal key
    //PUSHER_SUBSCRIPTIONS: {
    //  testChannel: {
    //    testEvent() { console.log('this is fired'); } //eslint-disable-line
    //  }
    //},

    canDeleteCollection: (function () {
      return this.get('view.collections.length') > 1;
    }).property('view.collections.length'),

    actions: {
      addCollection: function addCollection() {
        var newProposition = this.store.createFragment('predicate-proposition', {});
        var newCollection = this.store.createFragment('predicate-collection', { propositions: [newProposition] });

        this.get('view.collections').pushObject(newCollection);
      },
      removeCollection: function removeCollection(collection) {
        this.get('view.collections').removeObject(collection);
      },
      createRuleForCollectionAfter: function createRuleForCollectionAfter(collection, rule) {
        var newProposition = this.store.createFragment('predicate-proposition', {});

        var propositions = collection.get('propositions');

        var newPropositionPosition = propositions.indexOf(rule);
        if (newPropositionPosition !== -1) {
          propositions.insertAt(newPropositionPosition + 1, newProposition);
        } else {
          propositions.pushObject(newProposition);
        }
      },

      removeRuleFromCollection: function removeRuleFromCollection(collection, rule) {
        collection.get('propositions').removeObject(rule);
      }
    },

    listStyle: function listStyle() {
      return 'background-color: #00ccff; padding: 10px;'.htmlSafe();
    },

    people: new Ember['default'].A([{
      avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }, {
      avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }, {
      avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }]),

    items: [{ text: 'hithere' }, { text: 'hello world' }, { text: 'its gooood' }]

  });

});
define('frontend-cp/session/admin/showcase/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({
    setupController: function setupController(controller, model) {
      controller.set('model', model);

      var userModel = this.store.createRecord('user', {
        fullName: 'James Brown'
      });
      var email = this.store.createRecord('identity-email', { email: 'james.brown@the.sole.train.com' });
      userModel.get('emails').pushObject(email);
      userModel.set('avatar', 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg');

      controller.set('userModel', userModel);
      controller.set('predicateDefinitions', this.store.peekAll('definition'));

      this.store.find('view', 4).then(function (view) {
        controller.set('view', view);
      });
    },

    model: function model() {
      return Ember['default'].RSVP.Promise.all([this.store.find('definition'), this.store.find('view')]);
    }
  });

});
define('frontend-cp/session/admin/showcase/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 4
            },
            "end": {
              "line": 17,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/session/admin/showcase/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'style');
          morphs[1] = dom.createMorphAt(element0,0,0);
          return morphs;
        },
        statements: [
          ["attribute","style",["get","listStyle",["loc",[null,[16,19],[16,28]]]]],
          ["content","item.text",["loc",[null,[16,31],[16,44]]]]
        ],
        locals: ["item"],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/session/admin/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      Some demo content!\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 32,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/session/admin/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      Some demo content!\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 298,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/session/admin/showcase/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","showcase-container");
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Predicate builder");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("dragable list");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-admin-selectable-card");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{#ko-admin-selectable-card onComponentWasSelectedAction=\"selectedModel\" selectableModelId=model.id }}\n      Some demo content!\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{\\ko-admin-selectable-card}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{#ko-admin-selectable-card active=false }}\n      Some demo content!\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{\\ko-admin-selectable-card}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-admin-card-user");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-admin-card-user user=user}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-admin-card-team");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-admin-card-user user=user}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-checkbox");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my preferences'\n      large=true\n      disabled=false\n      tabindex=0\n      checked=false\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my preferences'\n      large=true\n      disabled=false\n      tabindex=0\n      checked=true\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my diet'\n      large=true\n      disabled=true\n      tabindex=0\n      checked=false\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my color'\n      large=false\n      disabled=true\n      tabindex=0\n      checked=false\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my name'\n      large=false\n      disabled=false\n      tabindex=0\n      checked=false\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-toggle");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-toggle\n      activated=false\n      label='Nuclear bomb switch'\n      micro=false\n      tabindex=0\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-toggle\n      activated=true\n      label='Nuclear bomb switch'\n      micro=false\n      tabindex=0\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-toggle\n      activated=false\n      label='Nuclear bomb switch'\n      micro=true\n      tabindex=0\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-toggle\n      activated=true\n      label='Nuclear bomb switch'\n      micro=true\n      tabindex=0\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-radio");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='You can choose this'\n      large=true\n      disabled=false\n      tabindex=0\n      checked=selection\n      value='one'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='or this'\n      large=true\n      disabled=false\n      tabindex=0\n      checked=selection\n      value='two'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='but not this'\n      large=true\n      disabled=true\n      tabindex=0\n      checked=selection\n      value='three'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='nor this'\n      large=false\n      disabled=true\n      tabindex=0\n      checked=selection\n      value='four'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='This is fine however'\n      large=false\n      disabled=false\n      tabindex=0\n      checked=selection\n      value='five'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0]);
        var morphs = new Array(20);
        morphs[0] = dom.createMorphAt(element1,3,3);
        morphs[1] = dom.createMorphAt(element1,7,7);
        morphs[2] = dom.createMorphAt(element1,11,11);
        morphs[3] = dom.createMorphAt(element1,15,15);
        morphs[4] = dom.createMorphAt(element1,23,23);
        morphs[5] = dom.createMorphAt(element1,31,31);
        morphs[6] = dom.createMorphAt(element1,39,39);
        morphs[7] = dom.createMorphAt(element1,41,41);
        morphs[8] = dom.createMorphAt(element1,43,43);
        morphs[9] = dom.createMorphAt(element1,45,45);
        morphs[10] = dom.createMorphAt(element1,47,47);
        morphs[11] = dom.createMorphAt(element1,55,55);
        morphs[12] = dom.createMorphAt(element1,59,59);
        morphs[13] = dom.createMorphAt(element1,63,63);
        morphs[14] = dom.createMorphAt(element1,67,67);
        morphs[15] = dom.createMorphAt(element1,77,77);
        morphs[16] = dom.createMorphAt(element1,81,81);
        morphs[17] = dom.createMorphAt(element1,85,85);
        morphs[18] = dom.createMorphAt(element1,89,89);
        morphs[19] = dom.createMorphAt(element1,93,93);
        return morphs;
      },
      statements: [
        ["inline","ko-predicate-builder",[],["definitions",["subexpr","@mut",[["get","predicateDefinitions",["loc",[null,[5,18],[5,38]]]]],[],[]],"collections",["subexpr","@mut",[["get","view.collections",["loc",[null,[6,18],[6,34]]]]],[],[]],"onCollectionAddition","addCollection","onCollectionRemoval","removeCollection","onAdditionOfRuleToCollection","createRuleForCollectionAfter","onRuleDeletion","removeRuleFromCollection","canDeleteCollection",["subexpr","@mut",[["get","canDeleteCollection",["loc",[null,[11,26],[11,45]]]]],[],[]]],["loc",[null,[4,2],[11,47]]]],
        ["block","ko-reorderable-list",[],["items",["subexpr","@mut",[["get","items",["loc",[null,[15,33],[15,38]]]]],[],[]]],0,null,["loc",[null,[15,4],[17,28]]]],
        ["block","ko-admin-selectable-card",[],[],1,null,["loc",[null,[20,2],[22,31]]]],
        ["block","ko-admin-selectable-card",[],["isActive",false],2,null,["loc",[null,[30,2],[32,31]]]],
        ["inline","ko-admin-card-user",[],["user",["subexpr","@mut",[["get","userModel",["loc",[null,[42,28],[42,37]]]]],[],[]]],["loc",[null,[42,2],[42,39]]]],
        ["inline","ko-admin-card-team",[],["teamName","marketing","members",["subexpr","@mut",[["get","people",["loc",[null,[50,52],[50,58]]]]],[],[]]],["loc",[null,[50,2],[50,60]]]],
        ["inline","ko-checkbox",[],["label","Remember my preferences","large",true,"disabled",false,"tabindex",0,"checked",false],["loc",[null,[59,2],[65,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my preferences","large",true,"disabled",false,"tabindex",0,"checked",true],["loc",[null,[67,2],[73,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my diet","large",true,"disabled",true,"tabindex",0,"checked",false],["loc",[null,[75,2],[81,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my color","large",false,"disabled",true,"tabindex",0,"checked",false],["loc",[null,[83,2],[89,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my name","large",false,"disabled",false,"tabindex",0,"checked",false],["loc",[null,[91,2],[97,4]]]],
        ["inline","ko-toggle",[],["activated",false,"label","Nuclear bomb switch","micro",false,"tabindex",0],["loc",[null,[146,2],[151,4]]]],
        ["inline","ko-toggle",[],["activated",true,"label","Nuclear bomb switch","micro",false,"tabindex",0],["loc",[null,[153,2],[158,4]]]],
        ["inline","ko-toggle",[],["activated",false,"label","Nuclear bomb switch","micro",true,"tabindex",0],["loc",[null,[160,2],[165,4]]]],
        ["inline","ko-toggle",[],["activated",true,"label","Nuclear bomb switch","micro",true,"tabindex",0],["loc",[null,[167,2],[172,4]]]],
        ["inline","ko-radio",[],["label","You can choose this","large",true,"disabled",false,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[212,12],[212,21]]]]],[],[]],"value","one"],["loc",[null,[207,2],[214,4]]]],
        ["inline","ko-radio",[],["label","or this","large",true,"disabled",false,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[221,12],[221,21]]]]],[],[]],"value","two"],["loc",[null,[216,2],[223,4]]]],
        ["inline","ko-radio",[],["label","but not this","large",true,"disabled",true,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[230,12],[230,21]]]]],[],[]],"value","three"],["loc",[null,[225,2],[232,4]]]],
        ["inline","ko-radio",[],["label","nor this","large",false,"disabled",true,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[239,12],[239,21]]]]],[],[]],"value","four"],["loc",[null,[234,2],[241,4]]]],
        ["inline","ko-radio",[],["label","This is fine however","large",false,"disabled",false,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[248,12],[248,21]]]]],[],[]],"value","five"],["loc",[null,[243,2],[250,4]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/session/admin/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 14
            },
            "end": {
              "line": 25,
              "column": 14
            }
          },
          "moduleName": "frontend-cp/session/admin/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("                ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","format-message",[["subexpr","intl-get",["admin.casefields"],[],["loc",[null,[24,33],[24,62]]]]],[],["loc",[null,[24,16],[24,64]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 28,
              "column": 14
            },
            "end": {
              "line": 30,
              "column": 14
            }
          },
          "moduleName": "frontend-cp/session/admin/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("                ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","format-message",[["subexpr","intl-get",["admin.caseforms"],[],["loc",[null,[29,33],[29,61]]]]],[],["loc",[null,[29,16],[29,63]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/session/admin/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","session-admin");
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","session-admin--page-title");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","session-admin--page-container");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","session-admin-navigation");
        var el4 = dom.createTextNode("\n\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n        ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","session-admin-navigation__heading");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n        ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("ul");
        dom.setAttribute(el4,"class","session-admin-navigation__list-group");
        var el5 = dom.createTextNode("\n            ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n            ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n        ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","session-admin-navigation__heading");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n        ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("ul");
        dom.setAttribute(el4,"class","session-admin-navigation__list-group");
        var el5 = dom.createTextNode("\n            ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("            ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n            ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("            ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n            ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","content");
        var el4 = dom.createTextNode("\n        ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [1]);
        var element1 = dom.childAt(element0, [3]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element2, [4]);
        var element4 = dom.childAt(element2, [8]);
        var morphs = new Array(9);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);
        morphs[1] = dom.createMorphAt(dom.childAt(element2, [2]),0,0);
        morphs[2] = dom.createMorphAt(dom.childAt(element3, [1]),0,0);
        morphs[3] = dom.createMorphAt(dom.childAt(element3, [3]),0,0);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [6]),0,0);
        morphs[5] = dom.createMorphAt(dom.childAt(element4, [1]),1,1);
        morphs[6] = dom.createMorphAt(dom.childAt(element4, [3]),1,1);
        morphs[7] = dom.createMorphAt(dom.childAt(element4, [5]),0,0);
        morphs[8] = dom.createMorphAt(dom.childAt(element1, [3]),1,1);
        return morphs;
      },
      statements: [
        ["inline","format-message",[["subexpr","intl-get",["admin.administration"],[],["loc",[null,[5,21],[5,54]]]]],[],["loc",[null,[5,4],[5,56]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.navigation.apps"],[],["loc",[null,[14,72],[14,106]]]]],[],["loc",[null,[14,55],[14,108]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.apps"],[],["loc",[null,[16,33],[16,56]]]]],[],["loc",[null,[16,16],[16,58]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.endpoints"],[],["loc",[null,[17,33],[17,61]]]]],[],["loc",[null,[17,16],[17,63]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.navigation.manage"],[],["loc",[null,[20,72],[20,108]]]]],[],["loc",[null,[20,55],[20,110]]]],
        ["block","link-to",["session.admin.manage.case-fields"],[],0,null,["loc",[null,[23,14],[25,26]]]],
        ["block","link-to",["session.admin.manage.case-forms"],[],1,null,["loc",[null,[28,14],[30,26]]]],
        ["inline","format-message",[["subexpr","intl-get",["admin.endpoints"],[],["loc",[null,[32,33],[32,61]]]]],[],["loc",[null,[32,16],[32,63]]]],
        ["content","outlet",["loc",[null,[38,8],[38,20]]]]
      ],
      locals: [],
      templates: [child0, child1]
    };
  }()));

});
define('frontend-cp/session/cases/case/controller', ['exports', 'ember', 'frontend-cp/mixins/breadcrumbable'], function (exports, Ember, Breadcrumbable) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend(Breadcrumbable['default'], {

    /**
     * Returns a breadcrumb hash depending on what
     * data is available. Should hierarchical:
     * Organisation>User>Case
     * @return {Object} Breadcrumb data hash
     */
    breadcrumbs: (function () {

      var hasOrganisation = this.get('model.creator.organization.id');
      var hasUser = this.get('model.creator.id');
      var caseCrumb = {
        id: 'case',
        name: 'Case',
        route: 'session.cases.case.index'
      };
      var userCrumb = {
        id: 'user',
        name: 'User',
        route: 'session.cases.case.user'
      };
      var organisationCrumb = {
        id: 'organisation',
        name: 'Organisation',
        route: 'session.cases.case.organisation'
      };

      var crumbs = [];

      if (hasOrganisation) {
        crumbs.push(organisationCrumb);
      }

      if (hasUser) {
        crumbs.push(userCrumb);
      }

      crumbs.push(caseCrumb);

      return crumbs;
    }).property('model.creator.organization.id', 'model.creator.id')
  });

});
define('frontend-cp/session/cases/case/index/controller', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Controller.extend({});

});
define('frontend-cp/session/cases/case/index/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({
    storeCache: Ember['default'].inject.service('store-cache'),

    model: function model() {
      return Ember['default'].RSVP.hash({
        'case': this.modelFor('session.cases.case'),
        priorities: this.get('storeCache').findAll('case-priority'),
        types: this.get('storeCache').findAll('case-type'),
        statuses: this.get('storeCache').findAll('case-status'),
        caseFields: this.get('storeCache').findAll('case-field')
      }).then(function (model) {
        model.replyChannel = model['case'].get('replyChannels');
        return Ember['default'].RSVP.hash(model);
      });
    },

    setupController: function setupController(controller, model) {
      this.validateCaseStatus(model['case']);

      controller.set('case', model['case']);
      controller.set('priorities', model.priorities);
      controller.set('types', model.types);
      controller.set('statuses', model.statuses);
      controller.set('caseFields', model.caseFields);

      //ignore anything we've added/changed during setup
      //model.case.cacheRelationships();
    },

    validateCaseStatus: function validateCaseStatus(editingCase) {
      var caseStatus = editingCase.get('status');
      if (caseStatus.get('statusType') === 'NEW') {
        this.store.find('case-status', 3).then(function (pendingStatus) {
          //assuming that status ID 3 will always be pending
          editingCase.set('status', pendingStatus);
        });
      }
    }
  });

});
define('frontend-cp/session/cases/case/index/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/cases/case/index/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-case-content",[],["case",["subexpr","@mut",[["get","case",["loc",[null,[1,23],[1,27]]]]],[],[]],"priorities",["subexpr","@mut",[["get","priorities",["loc",[null,[1,39],[1,49]]]]],[],[]],"types",["subexpr","@mut",[["get","types",["loc",[null,[1,56],[1,61]]]]],[],[]],"caseFields",["subexpr","@mut",[["get","caseFields",["loc",[null,[1,73],[1,83]]]]],[],[]]],["loc",[null,[1,0],[1,85]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/cases/case/loading/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 1,
              "column": 38
            }
          },
          "moduleName": "frontend-cp/session/cases/case/loading/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["inline","ko-loader",[],["large",true],["loc",[null,[1,14],[1,38]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 52
          }
        },
        "moduleName": "frontend-cp/session/cases/case/loading/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-center",[],[],0,null,["loc",[null,[1,0],[1,52]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/session/cases/case/organisation/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({

    model: function model() {
      var parentModel = this.modelFor('case');
      return parentModel ? parentModel.get('organization') : {};
    }

  });

});
define('frontend-cp/session/cases/case/organisation/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/cases/case/organisation/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-organisation-content",[],["model",["subexpr","@mut",[["get","model",["loc",[null,[1,32],[1,37]]]]],[],[]]],["loc",[null,[1,0],[1,39]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/cases/case/route', ['exports', 'frontend-cp/routes/abstract/tabbed-route'], function (exports, TabbedRoute) {

  'use strict';

  exports['default'] = TabbedRoute['default'].extend({

    model: function model(params) {
      return this.store.find('case', +params.case_id);
    },

    setupController: function setupController(controller, model) {
      this._super(controller, model);
      this.get('tab').set('label', model.get('subject'));
    }

  });

});
define('frontend-cp/session/cases/case/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 6
          }
        },
        "moduleName": "frontend-cp/session/cases/case/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","content layout--flush");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout__item u-1/1");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);
        morphs[1] = dom.createMorphAt(element0,3,3);
        return morphs;
      },
      statements: [
        ["inline","ko-breadcrumbs",[],["breadcrumbs",["subexpr","@mut",[["get","breadcrumbs",["loc",[null,[3,33],[3,44]]]]],[],[]],"activeBreadcrumb",["subexpr","@mut",[["get","activeBreadcrumb",["loc",[null,[3,62],[3,78]]]]],[],[]],"action","breadcrumbChange"],["loc",[null,[3,4],[3,106]]]],
        ["content","outlet",["loc",[null,[5,2],[5,12]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/cases/case/user/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({

    // model() {
    //   return this.modelFor('case').get('organization').then((org) => {
    //     Ember.RSVP.hash({
    //       metrics: this.find('metric', { organization_id: org.id }),
    //       organization: org
    //     });
    //   });
    // let parentModel = this.modelFor('case');
    // return parentModel ? parentModel.get('organization') : {};
    // }

  });

});
define('frontend-cp/session/cases/case/user/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/cases/case/user/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-user-content",[],["model",["subexpr","@mut",[["get","model",["loc",[null,[1,24],[1,29]]]]],[],[]]],["loc",[null,[1,0],[1,31]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/cases/index/controller', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend({
    queryParams: {
      page: {
        refreshModel: true
      },
      view: {
        refreshModel: true
      }
    },

    // Indicates whether route is loading (to show loading spinner instead
    // of a list)
    loading: true,

    // Page number being loaded, used by the ko-pagination to correctly
    // turn links into spinners
    loadingPage: null
  });

});
define('frontend-cp/session/cases/index/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  var parseIntOrDefault = function parseIntOrDefault(string, defaultValue) {
    return isNaN(string) ? defaultValue : Math.floor(Math.abs(string));
  };

  exports['default'] = Ember['default'].Route.extend({
    page: 1,
    limit: 5,
    offset: 0,
    firstLoad: true,

    storeCache: Ember['default'].inject.service('store-cache'),

    queryParams: {
      page: {
        refreshModel: true
      },
      view: {
        refreshModel: true
      }
    },

    model: function model(params) {
      var _this = this;

      if (params.page) {
        var page = params.page;
        this.set('page', parseIntOrDefault(page, 1));
      }
      this.set('offset', (this.get('page') - 1) * this.get('limit'));

      return this.get('storeCache').findAll('view').then(function (views) {
        var view = _this.store.peekRecord('view', params.view);
        if (!view) {
          view = views.filterBy('isDefault')[0];
          _this.transitionTo({ queryParams: { view: view.id } });
          return;
        }
        return Ember['default'].RSVP.hash({
          views: views,
          activeView: view,
          cases: _this.get('storeCache').query('case', {
            offset: _this.get('offset'),
            limit: _this.get('limit'),
            parent: view
          })
        });
      });
    },

    setupController: function setupController(controller, model) {
      controller.set('cases', model.cases);
      controller.set('views', model.views);
      controller.set('activeView', model.activeView);
      controller.setProperties({
        page: this.get('page'),
        totalPages: Math.ceil(model.cases.get('meta.total') / this.get('limit'))
      });

      // Resetting loading state
      controller.set('loading', false);
      controller.set('loadingPage', null);
    },

    resetController: function resetController(controller, isExiting) {
      // As routes are persisted across the entire app lifecycle,
      // we have to reset things manually
      if (isExiting) {
        this.set('firstLoad', true);
      }
    },

    actions: {
      // Called whenever a transition to this route is performed.
      // Not implementing this event or returning "true" causes Ember
      // to enter loading substate.
      loading: function loading(transition) {
        // Enter loading substate, but only if we are coming from another route
        if (this.get('firstLoad')) {
          this.set('firstLoad', false);
          return true;
        }

        // Switching between pages on this route won't remove the paginator
        var controller = this.controllerFor('session.cases.index');
        controller.set('loadingPage', parseIntOrDefault(transition.queryParams.page, null));
        controller.set('loading', true);
      },

      caseListSorted: function caseListSorted() /*column, order*/{}
    }
  });

});
define('frontend-cp/session/cases/index/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 10,
                "column": 12
              },
              "end": {
                "line": 10,
                "column": 50
              }
            },
            "moduleName": "frontend-cp/session/cases/index/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["inline","ko-loader",[],["large",true],["loc",[null,[10,26],[10,50]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 10
            },
            "end": {
              "line": 11,
              "column": 10
            }
          },
          "moduleName": "frontend-cp/session/cases/index/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("            ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["block","ko-center",[],[],0,null,["loc",[null,[10,12],[10,64]]]]
        ],
        locals: [],
        templates: [child0]
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 10
            },
            "end": {
              "line": 13,
              "column": 10
            }
          },
          "moduleName": "frontend-cp/session/cases/index/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("            ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-cases-list",[],["cases",["subexpr","@mut",[["get","cases",["loc",[null,[12,34],[12,39]]]]],[],[]],"onCaseListSort","caseListSorted","columns",["subexpr","@mut",[["get","activeView.columns",["loc",[null,[12,80],[12,98]]]]],[],[]]],["loc",[null,[12,12],[12,100]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 18,
                "column": 10
              },
              "end": {
                "line": 18,
                "column": 65
              }
            },
            "moduleName": "frontend-cp/session/cases/index/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() { return []; },
          statements: [

          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 8
            },
            "end": {
              "line": 19,
              "column": 8
            }
          },
          "moduleName": "frontend-cp/session/cases/index/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["block","link-to",["session.cases",["subexpr","query-params",[],["page",["get","number",["loc",[null,[18,56],[18,62]]]]],["loc",[null,[18,37],[18,63]]]]],[],0,null,["loc",[null,[18,10],[18,77]]]]
        ],
        locals: ["number"],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/cases/index/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ko-session-cases-index");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","container");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","content layout layout--flush");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","layout__item u-1/5");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("\n   ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","layout__item u-4/5");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","content__main content__main--has-sidebar");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","ko-session-cases-index__pagination");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0, 1, 1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3, 1]),1,1);
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [5]),1,1);
        return morphs;
      },
      statements: [
        ["inline","ko-sidebar",[],["views",["subexpr","@mut",[["get","views",["loc",[null,[5,27],[5,32]]]]],[],[]],"activeView",["subexpr","@mut",[["get","activeView",["loc",[null,[5,44],[5,54]]]]],[],[]]],["loc",[null,[5,8],[5,56]]]],
        ["block","if",[["get","loading",["loc",[null,[9,16],[9,23]]]]],[],0,1,["loc",[null,[9,10],[13,17]]]],
        ["block","ko-pagination",[],["currentPage",["subexpr","@mut",[["get","page",["loc",[null,[17,37],[17,41]]]]],[],[]],"loadingPage",["subexpr","@mut",[["get","loadingPage",["loc",[null,[17,54],[17,65]]]]],[],[]],"pageCount",["subexpr","@mut",[["get","totalPages",["loc",[null,[17,76],[17,86]]]]],[],[]]],2,null,["loc",[null,[17,8],[19,26]]]]
      ],
      locals: [],
      templates: [child0, child1, child2]
    };
  }()));

});
define('frontend-cp/session/cases/loading/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 1,
              "column": 38
            }
          },
          "moduleName": "frontend-cp/session/cases/loading/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["inline","ko-loader",[],["large",true],["loc",[null,[1,14],[1,38]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 52
          }
        },
        "moduleName": "frontend-cp/session/cases/loading/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-center",[],[],0,null,["loc",[null,[1,0],[1,52]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/session/cases/new/controller', ['exports', 'ember', 'frontend-cp/mixins/breadcrumbable'], function (exports, Ember, Breadcrumbable) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend(Breadcrumbable['default'], {

    breadcrumbs: (function () {

      var hasOrganisation = this.get('model.creator.organization.id');
      var hasUser = this.get('model.creator.id');
      var caseCrumb = {
        id: 'case',
        name: 'Case',
        route: 'session.cases.case.index'
      };
      var userCrumb = {
        id: 'user',
        name: 'User',
        route: 'session.cases.case.user'
      };
      var organisationCrumb = {
        id: 'organisation',
        name: 'Organisation',
        route: 'session.cases.case.organisation'
      };

      var crumbs = [caseCrumb];

      if (hasOrganisation) {
        crumbs.push(organisationCrumb);
      }

      if (hasUser) {
        crumbs.push(userCrumb);
      }

      return crumbs;
    }).property('model.creator.organization.id', 'model.creator.id')
  });

});
define('frontend-cp/session/cases/new/route', ['exports', 'frontend-cp/routes/abstract/tabbed-route'], function (exports, TabbedRoute) {

  'use strict';

  exports['default'] = TabbedRoute['default'].extend({

    model: function model() {
      return this.store.createRecord('case', {
        subject: 'New Case'
      });
    },

    setupController: function setupController(controller, model) {
      this._super(controller, model);
      this.get('tab').set('label', model.get('subject'));
    }

  });

});
define('frontend-cp/session/cases/new/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/cases/new/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","content layout--flush");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout__item u-1/1");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);
        morphs[1] = dom.createMorphAt(element0,3,3);
        return morphs;
      },
      statements: [
        ["inline","ko-breadcrumbs",[],["breadcrumbs",["subexpr","@mut",[["get","breadcrumbs",["loc",[null,[3,33],[3,44]]]]],[],[]],"activeBreadcrumb",["subexpr","@mut",[["get","activeBreadcrumb",["loc",[null,[3,62],[3,78]]]]],[],[]],"action","breadcrumbChange"],["loc",[null,[3,4],[3,106]]]],
        ["inline","ko-case-content",[],["case",["subexpr","@mut",[["get","case",["loc",[null,[5,25],[5,29]]]]],[],[]],"priorities",["subexpr","@mut",[["get","priorities",["loc",[null,[5,41],[5,51]]]]],[],[]],"types",["subexpr","@mut",[["get","types",["loc",[null,[5,58],[5,63]]]]],[],[]],"statuses",["subexpr","@mut",[["get","statuses",["loc",[null,[5,73],[5,81]]]]],[],[]]],["loc",[null,[5,2],[5,83]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/controller', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend({
    urlService: Ember['default'].inject.service('url'),
    tabsService: Ember['default'].inject.service('tabs'),
    routeStateService: Ember['default'].inject.service('routeState'),
    searchResults: null,
    isSearching: false,

    /**
     * Page scroll position, in pixels
     * @type {Number}
     */
    scroll: 0,

    /**
     * Main invisible "tab" that holds all non-tabbed pages
     * @type {Tab}
     */
    mainTab: null,

    /**
     * Currently active tabs, containing all tabbed pages
     * @type {Tab[]}
     */
    tabs: null,

    /**
     * Currently selected tab
     * @type {Tab}
     */
    selectedTab: null,

    init: function init() {
      this._super();
      this.set('tabs', this.get('tabs') || []);
    },

    /**
     * Update local storage whenever the tabs array changes
     */
    tabsUpdated: Ember['default'].observer('mainTab', 'mainTab.url', 'tabs.@each', 'tabs.@each.url', 'tabs.@each.label', function () {
      var tabsService = this.get('tabsService');
      var mainTab = this.get('mainTab');
      var tabs = this.get('tabs');
      var savedTabs = [mainTab].concat(tabs);
      tabsService.saveTabsToStorage(savedTabs);
    }),

    /**
     * Transition to the tab's active page when a tab is selected
     */
    tabSelected: Ember['default'].observer('selectedTab', function () {
      var selectedTab = this.get('selectedTab');
      if (!selectedTab) {
        this.set('selectedTab', this.get('mainTab'));
        return;
      }
      var targetUrl = selectedTab.get('url') || '/';
      var targetState = selectedTab.get('state') || null;
      var routeStateService = this.get('routeStateService');
      routeStateService.transitionToState(targetUrl, targetState);
    }),

    /**
     * Save the scroll position to the history state whenever the user scrolls
     */
    scrollChanged: Ember['default'].observer('scroll', function () {
      var scrollPosition = this.get('scroll');
      var currentPath = this.get('urlService.currentPath');
      var isInLoadingState = currentPath.split('.').pop() === 'loading';
      if (isInLoadingState) {
        return;
      }
      this.updateTabState({
        'scroll': scrollPosition
      });
    }),

    /**
     * Update the scroll position whenever the router transitions to a new page
     */
    updateScrollPosition: Ember['default'].on('init', function () {
      var _this = this;

      var router = this.container.lookup('router:main');
      this.addDisposableListener(router, 'didTransition', function () {
        var routeStateService = _this.get('routeStateService');
        var tabState = routeStateService.getState();

        // Update the scroll position
        var scrollPosition = tabState && tabState.scroll || 0;
        if (_this.get('scroll') === scrollPosition) {
          return;
        }
        Ember['default'].run.scheduleOnce('afterRender', function () {
          _this.set('scroll', scrollPosition);
        });
      });
    }),

    /**
     * Add an event listener which will be automatically removed once this controller is destroyed
     * @param {Evented} subject Event emitter
     * @param {string} event Event name to listen to
     * @param {function} handler Listener handler function
     */
    addDisposableListener: function addDisposableListener(subject, event, handler) {
      // Add the listener
      subject.on(event, handler);
      this.get('disposableListeners').push({ subject: subject, event: event, handler: handler });
    },

    /**
     * Array of listeners which will be automatically removed once this controller is destroyed
     * @type {Object[]}
     */
    disposableListeners: null,

    /**
     * Initialise the array of disposable listeners
     */
    initDisposableListeners: Ember['default'].on('init', function () {
      this.set('disposableListeners', []);
    }),

    /**
     * Remove the disposable listeners once the controller is destroyed
     */
    willDestroy: function willDestroy() {
      this._super();
      this.get('disposableListeners').forEach(function (listener) {
        var subject = listener.subject;
        var event = listener.event;
        var handler = listener.handler;

        subject.off(event, handler);
      });
    },

    /**
     * Save UI state changes for the currently selected tab
     * @param {Object} updates Key/value object containing state values
     */
    updateTabState: function updateTabState(updates) {
      var routeStateService = this.get('routeStateService');
      var selectedTab = this.get('selectedTab');
      if (!selectedTab) {
        return;
      }
      routeStateService.updateState(updates);
      var updatedState = Object.assign({}, selectedTab.get('state'), updates);
      selectedTab.set('state', updatedState);
    },

    /**
     * Returns a tab that matches the specified URL path (or one of its ancestors)
     * @param {boolean} isTabbedPage Whether the page should be opened in its own tab
     * @param {string} url URL to match against
     * @param {string} baseUrl Tab base URL to use if creating a new tab
     * @return {Tab} Tab that corresponds to the URL, or `null` if no match was found
     */
    getTabForUrl: function getTabForUrl(isTabbedPage, url, baseUrl) {
      var tabs = this.get('tabs');

      var existingTab = tabs.find(function (tab) {
        return url.startsWith(tab.get('baseUrl'));
      });
      if (!existingTab && !isTabbedPage) {
        existingTab = this.get('mainTab');
      }
      if (existingTab) {
        if (existingTab.get('url') !== url) {
          existingTab.set('url', url);
          existingTab.set('state', {});
        }
        return existingTab;
      }

      var tabsService = this.get('tabsService');
      var tab = tabsService.createTab({
        url: url,
        baseUrl: baseUrl
      });
      this.get('tabs').pushObject(tab);
      return tab;
    },

    actions: {
      onSearchingChanged: function onSearchingChanged(isSearching) {
        this.set('hideSessionWidgets', isSearching);
      },

      performUniversalSearch: function performUniversalSearch(query) {
        var _this2 = this;

        if (!query) {
          this.set('isSearching', false);
          this.set('searchResults', new Ember['default'].A([]));
          return;
        }

        /*
         * 404s are expected - it means we don't have any results
         * just catch the error and empty the searchResults array
         */
        this.store.query('search-result-group', { query: query, fields: 'snippet,resource' }).then(function (results) {
          _this2.set('searchResults', results);
        }, function () {
          _this2.set('searchResults', new Ember['default'].A([]));
        }).then(function () {
          //we always want to set isSearching to true (so we get the no results message)
          _this2.set('isSearching', true);
        });
      },

      hideSessionWidgets: false,

      loadSearchRoute: function loadSearchRoute(baseURL, targetObjectId) {
        /* this has to be built as a URL - we have a searchResult object, not a user/case object */
        this.transitionToRoute(baseURL + targetObjectId);
      }
    }
  });

});
define('frontend-cp/session/loading/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 1,
              "column": 38
            }
          },
          "moduleName": "frontend-cp/session/loading/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["inline","ko-loader",[],["large",true],["loc",[null,[1,14],[1,38]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 52
          }
        },
        "moduleName": "frontend-cp/session/loading/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [
        ["block","ko-center",[],[],0,null,["loc",[null,[1,0],[1,52]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/session/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  /**
   * SessionRoute
   *
   * This route is resposible for checking the session exists for all its
   * child routes. Since a parent route loads before all its children, no
   * child route will load if the session id is not available.
   *
   * Note that the application route is not a child of this one so the
   * application route needs to check for the session independently.
   *
   * This route also loads all data shared by all its children,
   * including stored tabs from local storage and menus from the API.
   */

  exports['default'] = Ember['default'].Route.extend({

    sessionService: Ember['default'].inject.service('session'),
    tabsService: Ember['default'].inject.service('tabs'),

    beforeModel: function beforeModel(transition) {
      // Redirect to login if not validated
      if (!this.get('sessionService').isLoggedIn()) {
        this.controllerFor('login').set('transitionOnLogin', transition);
        this.transitionTo('login');
      }
    },

    setupController: function setupController(controller, model) {
      // Retrieve tabs from storage if available
      var tabsService = this.get('tabsService');
      var savedTabs = tabsService.loadTabsFromStorage();

      // The first item is the "main" tab, all others are tabbed pages
      var mainTab = savedTabs.objectAt(0) || tabsService.createTab();
      var tabs = savedTabs.slice(1);

      controller.set('model', model);
      controller.set('mainTab', mainTab);
      controller.set('tabs', tabs);
    }
  });

});
define('frontend-cp/session/showcase/controller', ['exports', 'ember', 'ember-validations', 'npm:lodash', 'frontend-cp/config/environment'], function (exports, Ember, EmberValidations, _, config) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend(EmberValidations['default'], {

    assetRoot: config['default'].assetRoot,

    contextModalService: Ember['default'].inject.service('context-modal'),

    /**
     * Need to SafeString all bound style attributes
     */

    boxContainerStyle: function boxContainerStyle() {
      return 'width: auto; display: inline-block;'.htmlSafe();
    },

    infoBarStyle: function infoBarStyle() {
      return 'width: 275px; min-height: 0 !important;'.htmlSafe();
    },

    actions: {
      sayyeah: function sayyeah() {
        // alert("yeah");
      },

      sayboo: function sayboo() {
        // boo
      },

      //logIt(value) {
      //console.log(value);
      //},

      closeContextModal: function closeContextModal() {
        this.get('contextModalService').close();
      },

      drillDownInline: function drillDownInline(event) {
        this.get('contextModalService').open('drillDownInline', event, { inline: true });
      },

      addParticipant: function addParticipant(event) {
        this.get('contextModalService').open('addParticipants', event);
      },

      addParticipantInline: function addParticipantInline(event) {
        this.get('contextModalService').open('addParticipantsInline', event, { inline: true });
      },

      tabChange: function tabChange(tab) {
        this.set('activeTab', tab);
      },

      toggleCaseFieldError: function toggleCaseFieldError() {
        this.toggleProperty('caseFieldError');
      },

      caseFieldSelected: function caseFieldSelected(field) {
        this.set('selectedField', field);
      },

      dateFieldChanged: function dateFieldChanged(date) {
        this.set('selectedDate', date);
        this.set('isDateEdited', true);
      },

      clearChanges: function clearChanges() {
        this.set('selectFieldsChanged', false);
        this.set('isDrillDownEdited', false);
        this.set('isDateEdited', false);
        this.set('isTextFieldEdited', false);
        this.set('isTextAreaFieldEdited', false);
      },

      dateChange: function dateChange(date) {
        this.set('date', date);
      },

      addTimeBilling: function addTimeBilling(event) {
        this.get('contextModalService').open('addTimeBilling', event);
      },

      onDurationChanged: function onDurationChanged(timeBillingDuration) {
        this.set('timeBillingDuration', timeBillingDuration);
      },

      tableSorted: function tableSorted(column, order) {
        this.set('tableDataSorting', [column + ':' + order]);
      },

      removeCaseLink: function removeCaseLink(caseObj) {
        this.linkedCases.removeObject(caseObj);
      },

      addCaseLink: function addCaseLink(caseObj) {
        this.linkedCases.pushObject(caseObj);
      },

      checkboxValueChanged: function checkboxValueChanged(value) {
        this.set('checkboxFieldValue', value);
      },

      drillDownSelected: function drillDownSelected() {},

      // if you want to see it work uncomment below
      //drillDownSelected(value) {
      //let macros = this.get('macros');
      //let selectedObject = macros.filter(i => i.id === value);
      //console.log('drilldown value selected ', selectedObject[0].value.split(',').join(' / '));
      //},

      drillDownValueChanged: function drillDownValueChanged(value) {
        var teamsAndPeople = this.get('teamsAndPeople');
        var selectedObject = teamsAndPeople.filter(function (i) {
          return i.id === value;
        });
        this.set('isDrillDownEdited', true);
        this.set('drillDownFieldValue', selectedObject[0].value.split(',').join(' / '));
      },

      textFieldValueChanged: function textFieldValueChanged(value) {
        this.set('isTextFieldEdited', true);
        this.set('textFieldValue', value);
      },

      textAreaFieldValueChanged: function textAreaFieldValueChanged(value) {
        this.set('isTextAreaFieldEdited', true);
        this.set('textAreaFieldValue', value);
      }
    },

    tableData: [{
      name: 'Grey', status: 'online', avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }, {
      name: 'Robb', status: 'online', avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }, {
      name: 'Arya', status: 'online', avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }],

    tableDataSorting: [],
    sortedTableData: Ember['default'].computed.sort('tableData', 'tableDataSorting'),

    timeBillingDuration: 1.5,

    editableTextVal: 'I am a hunky munky',
    editableTextValB: 'I am a chunky munky',

    tabs: [{
      id: 1,
      name: 'Cicso Systems Inc.'
    }, {
      id: 2,
      name: 'Audrey Raines'
    }, {
      id: 3,
      name: 'Create Case 987-0989'
    }],

    activeTab: 3,

    contactTitle: 'CONTACT INFORMATION',
    facebook: ['facebook.com/jessebc'],
    twitter: ['@jessebc', '@31three unverified'],
    email: ['jesse@31three.com', 'jessebc@gmail.com'],
    linkedin: ['jessebc'],
    phone: ['904-987-0987'],

    feedbackTitle: 'RECENT FEEDBACK',

    feedback: [{
      'yesterday': 1,
      'lastWeek': 1,
      'lastMonth': 1,
      'lastThreeMonths': 1,
      'lastSixMonths': 1,
      'lastYear': -1,
      'all': 1
    }],

    casesTitle: 'RECENT CASES',

    cases: [{ subject: 'I cant connect to the internet!', createdAt: '2015-05-06T08:27:13Z' }, { subject: 'My printers wont work. Is it my issue or yours? Please help!', createdAt: '2015-05-04T13:19:31Z' }, { subject: 'My printers wont work. Is it my issue or yours? Please help!', createdAt: '2015-05-04T13:19:31Z' }],

    addressTitle: 'ADDRESS',

    address: [{
      'address1': '10 Main Street East',
      'address2': 'Grimsby Ontario',
      'postalCode': 'L3M1M8',
      'country': 'Canada'
    }],

    src: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg',

    avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg',

    membersTitle: 'RECENTLY ACTIVE MEMBERS',

    people: [{
      avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }, {
      avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }, {
      avatar: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }],

    metricTitle: 'CASES',

    metrics: [{ value: 9, total: 120 }],

    selection: 'one',

    events: [{
      'uuid': 'f4fa0cf1-d4d9-420d-87d9-d357ea2c47df',
      'subject': 'Windows 7 64 bit Upgrade Project',
      'contents': 'Installed windows 7 in to new workstation with the image disk . Workstation contains all the generic software but missing drivers for network and chipset.',
      'isPinned': false,
      'creator': {
        'id': 19,
        'fullName': 'John Doe',
        'resourceType': 'user',
        'resourceURL': 'http://lorempixel.com/42/42/people/'
      },
      'identity': {
        'id': 19,
        'isPrimary': true,
        'email': 'johndoe2891067559@gmail.com',
        'isNotificationEnabled': false,
        'isValidated': true,
        'createdAt': '2015-05-06T08:27:13Z',
        'updatedAt': '2015-05-06T08:27:13Z',
        'resourceType': 'identityEmail',
        'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/users/19/identities/emails/19'
      },
      'attachments': [{
        'id': 1,
        'name': 'winter-tiger-wild-cat-images.jpg',
        'size': 197625,
        'width': 1920,
        'height': 1080,
        'type': 'image/jpeg',
        'url': 'http://regmedia.co.uk/2013/03/18/nigellaLawsonPhotoHugoBurnand.jpg',
        'urlDownload': 'http://k5.kayako.com:8888/api/index.php?/v1/cases/1/messages/1/attachments/1/download',
        'thumbnails': [{
          'name': 'winter-tiger-wild-cat-images64.jpg',
          'size': 4151,
          'width': 64,
          'height': 36,
          'type': 'image/jpeg',
          'url': 'http://k5.kayako.com:8888/api/index.php?/v1/cases/1/messages/1/attachments/1/url&size=64',
          'createdAt': '2015-05-19T06:48:38Z'
        }, {
          'name': 'winter-tiger-wild-cat-images80.jpg',
          'size': 5615,
          'width': 80,
          'height': 45,
          'type': 'image/jpeg',
          'url': 'http://k5.kayako.com:8888/api/index.php?/v1/cases/1/messages/1/attachments/1/url&size=80',
          'createdAt': '2015-05-19T06:48:38Z'
        }, {
          'name': 'winter-tiger-wild-cat-images100.jpg',
          'size': 8244,
          'width': 100,
          'height': 56,
          'type': 'image/jpeg',
          'url': 'http://k5.kayako.com:8888/api/index.php?/v1/cases/1/messages/1/attachments/1/url&size=100',
          'createdAt': '2015-05-19T06:48:38Z'
        }, {
          'name': 'winter-tiger-wild-cat-images160.jpg',
          'size': 18189,
          'width': 160,
          'height': 90,
          'type': 'image/jpeg',
          'url': 'http://k5.kayako.com:8888/api/index.php?/v1/cases/1/messages/1/attachments/1/url&size=160',
          'createdAt': '2015-05-19T06:48:38Z'
        }, {
          'name': 'winter-tiger-wild-cat-images200.jpg',
          'size': 25677,
          'width': 200,
          'height': 112,
          'type': 'image/jpeg',
          'url': 'http://k5.kayako.com:8888/api/index.php?/v1/cases/1/messages/1/attachments/1/url&size=200',
          'createdAt': '2015-05-19T06:48:38Z'
        }, {
          'name': 'winter-tiger-wild-cat-images360.jpg',
          'size': 72257,
          'width': 360,
          'height': 202,
          'type': 'image/jpeg',
          'url': 'http://k5.kayako.com:8888/api/index.php?/v1/cases/1/messages/1/attachments/1/url&size=360',
          'createdAt': '2015-05-19T06:48:38Z'
        }],
        'createdAt': '2015-05-19T06:48:38Z',
        'resourceType': 'attachment',
        'resourceURL': 'http://k5.kayako.com:8888/api/index.php?/v1/cases/1/messages/1/attachments/1'
      }],
      'original': {
        'id': 6,
        'uuid': 'f4fa0cf1-d4d9-420d-87d9-d357ea2c47df',
        'subject': 'Windows 7 64 bit Upgrade Project',
        'contents': 'Installed windows 7 in to new workstation with the image disk . Workstation contains all the generic software but missing drivers for network and chipset.',
        'fullname': null,
        'email': null,
        'creator': {
          'id': 19,
          'fullName': 'John Doe',
          'resourceType': 'user',
          'resourceURL': 'http://lorempixel.com/42/42/people/'
        },
        'identity': {
          'id': 19,
          'isPrimary': true,
          'email': 'johndoe2891067559@gmail.com',
          'isNotificationEnabled': false,
          'isValidated': true,
          'createdAt': '2015-05-06T08:27:13Z',
          'updatedAt': '2015-05-06T08:27:13Z',
          'resourceType': 'identityEmail',
          'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/users/19/identities/emails/19'
        },
        'attachments': [],
        'location': null,
        'metadata': {
          'custom': null,
          'system': {
            'ipaddress': '',
            'useragent': ''
          }
        },
        'creationMode': 'SYSTEM',
        'locale': null,
        'responseTime': 0,
        'createdAt': '2015-05-06T08:27:13Z',
        'resourceType': 'caseMessage',
        'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/cases/2/messages/6'
      },
      'createdAt': '2015-05-06T08:27:13Z',
      'updatedAt': '2015-05-06T08:27:13Z',
      'resourceType': 'post'
    }, {
      'uuid': '55b49d92-9a71-42a5-8955-ee952017a1c6',
      'subject': 'Windows 7 64 bit Upgrade Project',
      'contents': 'Started compiling a list of workstations used by development and system test.',
      'isPinned': false,
      'creator': {
        'id': 8,
        'fullName': 'John Doe',
        'resourceType': 'user',
        'resourceURL': 'http://lorempixel.com/42/42/people/'
      },
      'identity': {
        'id': 8,
        'isPrimary': true,
        'email': 'johndoe6902018771@gmail.com',
        'isNotificationEnabled': false,
        'isValidated': false,
        'createdAt': '2015-05-06T08:27:13Z',
        'updatedAt': '2015-05-06T08:27:13Z',
        'resourceType': 'identityEmail',
        'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/users/8/identities/emails/8'
      },
      'attachments': [],
      'original': {
        'id': 4,
        'uuid': '55b49d92-9a71-42a5-8955-ee952017a1c6',
        'subject': 'Windows 7 64 bit Upgrade Project',
        'contents': 'Started compiling a list of workstations used by development and system test.',
        'fullname': null,
        'email': null,
        'creator': {
          'id': 8,
          'fullName': 'John Doe',
          'resourceType': 'user',
          'resourceURL': 'http://lorempixel.com/42/42/people/'
        },
        'identity': {
          'id': 8,
          'isPrimary': true,
          'email': 'johndoe6902018771@gmail.com',
          'isNotificationEnabled': false,
          'isValidated': false,
          'createdAt': '2015-05-06T08:27:13Z',
          'updatedAt': '2015-05-06T08:27:13Z',
          'resourceType': 'identityEmail',
          'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/users/8/identities/emails/8'
        },
        'attachments': [],
        'location': null,
        'metadata': {
          'custom': null,
          'system': {
            'ipaddress': '',
            'useragent': ''
          }
        },
        'creationMode': 'SYSTEM',
        'locale': null,
        'responseTime': 0,
        'createdAt': '2015-05-06T08:27:13Z',
        'resourceType': 'caseMessage',
        'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/cases/2/messages/4'
      },
      'createdAt': '2015-05-06T08:27:13Z',
      'updatedAt': '2015-05-06T08:27:13Z',
      'resourceType': 'post'
    }, {
      'uuid': '267c965e-5b8a-4a58-89f6-5735578bd0d7',
      'subject': 'Windows 7 64 bit Upgrade Project',
      'contents': 'completed the deployment to the first 3 development workstations ready for the setup of the user specific software. ',
      'isPinned': false,
      'creator': {
        'id': 9,
        'fullName': 'John Doe',
        'resourceType': 'user',
        'resourceURL': 'http://lorempixel.com/42/42/people/'
      },
      'identity': {
        'id': 9,
        'isPrimary': true,
        'email': 'johndoe2946456483@gmail.com',
        'isNotificationEnabled': false,
        'isValidated': true,
        'createdAt': '2015-05-06T08:27:13Z',
        'updatedAt': '2015-05-06T08:27:13Z',
        'resourceType': 'identityEmail',
        'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/users/9/identities/emails/9'
      },
      'attachments': [],
      'original': {
        'id': 5,
        'uuid': '267c965e-5b8a-4a58-89f6-5735578bd0d7',
        'subject': 'Windows 7 64 bit Upgrade Project',
        'contents': 'completed the deployment to the first 3 development workstations ready for the setup of the user specific software. ',
        'fullname': null,
        'email': null,
        'creator': {
          'id': 9,
          'fullName': 'John Doe',
          'resourceType': 'user',
          'resourceURL': 'http://lorempixel.com/42/42/people/'
        },
        'identity': {
          'id': 9,
          'isPrimary': true,
          'email': 'johndoe2946456483@gmail.com',
          'isNotificationEnabled': false,
          'isValidated': true,
          'createdAt': '2015-05-06T08:27:13Z',
          'updatedAt': '2015-05-06T08:27:13Z',
          'resourceType': 'identityEmail',
          'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/users/9/identities/emails/9'
        },
        'attachments': [],
        'location': null,
        'metadata': {
          'custom': null,
          'system': {
            'ipaddress': '',
            'useragent': ''
          }
        },
        'creationMode': 'SYSTEM',
        'locale': null,
        'responseTime': 0,
        'createdAt': '2015-05-06T08:27:13Z',
        'resourceType': 'caseMessage',
        'resourceURL': 'http://k5.kayako.com/api/index.php?/v1/cases/2/messages/5'
      },
      'createdAt': '2015-05-06T08:27:13Z',
      'updatedAt': '2015-05-06T08:27:13Z',
      'resourceType': 'post'
    }],

    macros: [{ id: 1, value: 'Navigate A1,Navigate B1,Item B1' }, { id: 2, value: 'Navigate A1,Navigate B2,Item B2' }, { id: 3, value: 'Navigate A1,Item B3' }, { id: 4, value: 'Navigate A1,Item B4' }, { id: 5, value: 'Navigate A2,Item A2' }, { id: 6, value: 'Navigate A3,Item A3' }, { id: 7, value: 'Item A4' }, { id: 8, value: 'Item A5' }],

    copyInParticipants: [{ image: 'http://lorempixel.com/48/48/people/', name: 'Jessica Myers', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Nina Jessicon', company: 'Stelco Steel Inc.', email: 'nina@stelco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Rebecca Sesam', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Jessica Myers', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'John Doe', company: 'Cisco Systems Inc.', email: 'johndoe@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Janine Smith', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'John Smith', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Kebab Soup', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Peter Myers', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }],

    participants: [{ image: 'http://cdn2.thegloss.com/wp-content/uploads/2013/06/Nigella-Lawson.jpg', alt: 'Lord' }, { image: 'http://images.tvnz.co.nz/tvnzImages/entertainmentNews/2014/03/nigellaLawsonMaster.jpg', alt: 'Have Mercy' }, { image: 'http://regmedia.co.uk/2013/03/18/nigellaLawsonPhotoHugoBurnand.jpg', alt: 'On My' }, { image: 'http://i.dailymail.co.uk/i/pix/2012/11/18/article-2234773-0B6AFF92000005DC-297634x722.jpg', alt: 'Deadlifts' }],

    viewers: [{
      isTyping: true,
      wasTyping: false,
      hidden: false,
      inactive: false,
      profile: {
        avatar: 'http://i.imgur.com/C9QgICy.jpg',
        name: 'John Smith',
        position: 'Systems engineer',
        company: 'Cisco systems',
        place: 'Leeds, United Kingdom',
        time: '9:45am, Wednesday',
        openCases: '5'
      }
    }, {
      isTyping: false,
      wasTyping: true,
      hidden: false,
      inactive: false,
      profile: {
        avatar: 'http://i.imgur.com/C9QgICy.jpg',
        name: 'Audrey Raines',
        position: 'Systems engineer',
        company: 'Cisco systems',
        place: 'Leeds, United Kingdom',
        time: '9:45am, Wednesday',
        openCases: '5'
      }
    }, {
      isTyping: false,
      wasTyping: false,
      hidden: true,
      inactive: true,
      profile: {
        avatar: 'http://i.imgur.com/C9QgICy.jpg',
        name: 'Jane Smith',
        position: 'Systems engineer',
        company: 'Cisco systems',
        place: 'Leeds, United Kingdom',
        time: '9:45am, Wednesday',
        openCases: '5'
      }
    }],

    linkedCases: [{ id: 1, type: 'Relates to', title: 'What does bandwidth average oven...' }, { id: 2, type: 'Clones', title: 'Is Tomato ok to install on your...' }, { id: 3, type: 'Clones', title: 'My internet doesnt seem to be...' }, { id: 4, type: 'Clones', title: 'What does bandwidth overage even...' }, { id: 5, type: 'Belongs to', title: 'What does bandwidth average oven...' }],

    linkedCasesTitle: 'LINKED CASES',

    linkedCaseTypes: [{ id: 1, type: 'Relates to' }, { id: 2, type: 'Belongs to' }, { id: 3, type: 'Clones' }],

    selectedType: 'Relates to',

    selectFields: [{ id: 1, label: 'Open' }, { id: 2, label: 'Pending' }, { id: 3, label: 'Closed' }],

    isDrillDownEdited: false,

    isTextFieldEdited: false,

    checkboxField: [{ id: 1, value: 'Red' }, { id: 2, value: 'Blue' }, { id: 3, value: 'Green' }],

    checkboxFieldInitiaValue: ['1'],
    checkboxFieldValue: ['1'],

    isCheckboxEdited: (function () {
      return !_['default'].isEqual(this.get('checkboxFieldValue'), this.get('checkboxFieldInitiaValue'));
    }).property('checkboxFieldValue', 'checkboxFieldInitiaValue'),

    selectFieldsChanged: false,
    isDateEdited: false,

    selectedTags: ['DSL', 'ABCD', 'DEFASD'],

    allTags: ['ballpark', 'bandwidth', 'close the loop', 'deep dive', 'low hanging fruit', 'quick-win', 'synergy'],

    teamsAndPeople: [{ id: 1, value: 'Team A,Group' }, { id: 2, value: 'Team A,Jesse Bennett-Chamberlain' }, { id: 3, value: 'Team A,Jamie Edwards' }, { id: 4, value: 'Team A,Drew Warkentin' }, { id: 5, value: 'Team B,Group' }, { id: 6, value: 'Team B,Jesse Bennett-Chamberlain' }, { id: 7, value: 'Team C,Group' }, { id: 8, value: 'Team C,This,Is,A,Very,Deep,Hole,Indeed' }, { id: 9, value: 'Team D,Group' }, { id: 10, value: 'Team D,Each,Level,Is,one,less,than,the,last' }, { id: 11, value: 'Team D,Each,Level,Is,one,less,than,the' }, { id: 12, value: 'Team D,Each,Level,Is,one,less,than' }, { id: 13, value: 'Team D,Each,Level,Is,one,less' }, { id: 14, value: 'Team D,Each,Level,Is,one' }, { id: 15, value: 'Team D,Each,Level,Is' }, { id: 16, value: 'Team D,Each' }]

  });

});
define('frontend-cp/session/showcase/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({
    setupController: function setupController(controller, model) {
      controller.set('model', model);
    }
  });

});
define('frontend-cp/session/showcase/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/session/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1,"class","plus");
          var el2 = dom.createTextNode("+");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 76,
                "column": 4
              },
              "end": {
                "line": 76,
                "column": 66
              }
            },
            "moduleName": "frontend-cp/session/showcase/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("styleguide");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() { return []; },
          statements: [

          ],
          locals: [],
          templates: []
        };
      }());
      var child1 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 77,
                "column": 4
              },
              "end": {
                "line": 77,
                "column": 35
              }
            },
            "moduleName": "frontend-cp/session/showcase/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("blank");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() { return []; },
          statements: [

          ],
          locals: [],
          templates: []
        };
      }());
      var child2 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 78,
                "column": 4
              },
              "end": {
                "line": 78,
                "column": 55
              }
            },
            "moduleName": "frontend-cp/session/showcase/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("Say yeah");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() { return []; },
          statements: [

          ],
          locals: [],
          templates: []
        };
      }());
      var child3 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 79,
                "column": 4
              },
              "end": {
                "line": 79,
                "column": 35
              }
            },
            "moduleName": "frontend-cp/session/showcase/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("blank");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() { return []; },
          statements: [

          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/session/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);
          morphs[3] = dom.createMorphAt(fragment,7,7,contextualElement);
          return morphs;
        },
        statements: [
          ["block","ko-dropdown/list/item",[],["link","session.styleguide"],0,null,["loc",[null,[76,4],[76,92]]]],
          ["block","ko-dropdown/list/item",[],[],1,null,["loc",[null,[77,4],[77,61]]]],
          ["block","ko-dropdown/list/item",[],["action","sayyeah"],2,null,["loc",[null,[78,4],[78,81]]]],
          ["block","ko-dropdown/list/item",[],[],3,null,["loc",[null,[79,4],[79,61]]]]
        ],
        locals: [],
        templates: [child0, child1, child2, child3]
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 453,
              "column": 2
            },
            "end": {
              "line": 458,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/session/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);
          morphs[3] = dom.createMorphAt(fragment,7,7,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-contact-info",[],["title",["subexpr","@mut",[["get","contactTitle",["loc",[null,[454,28],[454,40]]]]],[],[]],"facebook",["subexpr","@mut",[["get","facebook",["loc",[null,[454,50],[454,58]]]]],[],[]],"twitter",["subexpr","@mut",[["get","twitter",["loc",[null,[454,67],[454,74]]]]],[],[]],"linkedin",["subexpr","@mut",[["get","linkedin",["loc",[null,[454,84],[454,92]]]]],[],[]],"emails",["subexpr","@mut",[["get","email",["loc",[null,[454,100],[454,105]]]]],[],[]],"phones",["subexpr","@mut",[["get","phone",["loc",[null,[454,113],[454,118]]]]],[],[]]],["loc",[null,[454,4],[454,120]]]],
          ["inline","ko-feedback",[],["title",["subexpr","@mut",[["get","feedbackTitle",["loc",[null,[455,24],[455,37]]]]],[],[]],"feedback",["subexpr","@mut",[["get","feedback",["loc",[null,[455,47],[455,55]]]]],[],[]]],["loc",[null,[455,4],[455,57]]]],
          ["inline","ko-recent-cases",[],["title",["subexpr","@mut",[["get","casesTitle",["loc",[null,[456,28],[456,38]]]]],[],[]],"cases",["subexpr","@mut",[["get","cases",["loc",[null,[456,45],[456,50]]]]],[],[]]],["loc",[null,[456,4],[456,52]]]],
          ["inline","ko-address",[],["title",["subexpr","@mut",[["get","addressTitle",["loc",[null,[457,23],[457,35]]]]],[],[]],"address",["subexpr","@mut",[["get","address",["loc",[null,[457,44],[457,51]]]]],[],[]]],["loc",[null,[457,4],[457,53]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 465,
              "column": 2
            },
            "end": {
              "line": 472,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/session/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(6);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);
          morphs[3] = dom.createMorphAt(fragment,7,7,contextualElement);
          morphs[4] = dom.createMorphAt(fragment,9,9,contextualElement);
          morphs[5] = dom.createMorphAt(fragment,11,11,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-case-metric",[],["title",["subexpr","@mut",[["get","metricTitle",["loc",[null,[466,27],[466,38]]]]],[],[]],"metrics",["subexpr","@mut",[["get","metrics",["loc",[null,[466,47],[466,54]]]]],[],[]]],["loc",[null,[466,4],[466,56]]]],
          ["inline","ko-recent-members",[],["title",["subexpr","@mut",[["get","membersTitle",["loc",[null,[467,30],[467,42]]]]],[],[]],"members",["subexpr","@mut",[["get","members",["loc",[null,[467,51],[467,58]]]]],[],[]]],["loc",[null,[467,4],[467,60]]]],
          ["inline","ko-contact-info",[],["title",["subexpr","@mut",[["get","contactTitle",["loc",[null,[468,28],[468,40]]]]],[],[]],"facebook",["subexpr","@mut",[["get","facebook",["loc",[null,[468,50],[468,58]]]]],[],[]],"twitter",["subexpr","@mut",[["get","twitter",["loc",[null,[468,67],[468,74]]]]],[],[]],"linkedin",["subexpr","@mut",[["get","linkedin",["loc",[null,[468,84],[468,92]]]]],[],[]],"emails",["subexpr","@mut",[["get","email",["loc",[null,[468,100],[468,105]]]]],[],[]],"phones",["subexpr","@mut",[["get","phone",["loc",[null,[468,113],[468,118]]]]],[],[]]],["loc",[null,[468,4],[468,120]]]],
          ["inline","ko-feedback",[],["title",["subexpr","@mut",[["get","feedbackTitle",["loc",[null,[469,24],[469,37]]]]],[],[]],"feedback",["subexpr","@mut",[["get","feedback",["loc",[null,[469,47],[469,55]]]]],[],[]]],["loc",[null,[469,4],[469,57]]]],
          ["inline","ko-recent-cases",[],["title",["subexpr","@mut",[["get","casesTitle",["loc",[null,[470,28],[470,38]]]]],[],[]],"cases",["subexpr","@mut",[["get","cases",["loc",[null,[470,45],[470,50]]]]],[],[]]],["loc",[null,[470,4],[470,52]]]],
          ["inline","ko-address",[],["title",["subexpr","@mut",[["get","addressTitle",["loc",[null,[471,23],[471,35]]]]],[],[]],"address",["subexpr","@mut",[["get","address",["loc",[null,[471,44],[471,51]]]]],[],[]]],["loc",[null,[471,4],[471,53]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child4 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 478,
              "column": 2
            },
            "end": {
              "line": 487,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/session/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-linked-cases",[],["title",["subexpr","@mut",[["get","linkedCasesTitle",["loc",[null,[480,12],[480,28]]]]],[],[]],"types",["subexpr","@mut",[["get","linkedCaseTypes",["loc",[null,[481,12],[481,27]]]]],[],[]],"removeCaseLink","removeCaseLink","addCaseLink","addCaseLink","cases",["subexpr","@mut",[["get","linkedCases",["loc",[null,[484,12],[484,23]]]]],[],[]],"selectedType",["subexpr","@mut",[["get","selectedType",["loc",[null,[485,19],[485,31]]]]],[],[]]],["loc",[null,[479,4],[486,6]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child5 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 852,
              "column": 4
            },
            "end": {
              "line": 900,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/session/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(8);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
          morphs[2] = dom.createMorphAt(fragment,5,5,contextualElement);
          morphs[3] = dom.createMorphAt(fragment,7,7,contextualElement);
          morphs[4] = dom.createMorphAt(fragment,9,9,contextualElement);
          morphs[5] = dom.createMorphAt(fragment,11,11,contextualElement);
          morphs[6] = dom.createMorphAt(fragment,13,13,contextualElement);
          morphs[7] = dom.createMorphAt(fragment,15,15,contextualElement);
          return morphs;
        },
        statements: [
          ["inline","ko-field/select",[],["options",["subexpr","@mut",[["get","selectFields",["loc",[null,[854,16],[854,28]]]]],[],[]],"title","Status","isErrored",["subexpr","@mut",[["get","caseFieldError",["loc",[null,[856,18],[856,32]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","selectFieldsChanged",["loc",[null,[857,17],[857,36]]]]],[],[]],"action","caseFieldSelected","value",["subexpr","@mut",[["get","selectedField",["loc",[null,[859,14],[859,27]]]]],[],[]],"idPath","id","labelPath","label"],["loc",[null,[853,6],[862,8]]]],
          ["inline","ko-field/date",[],["title","Date","value",["subexpr","@mut",[["get","selectedDate",["loc",[null,[865,14],[865,26]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isDateEdited",["loc",[null,[866,17],[866,29]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","caseFieldError",["loc",[null,[867,18],[867,32]]]]],[],[]],"onValueChange","dateFieldChanged"],["loc",[null,[863,6],[869,8]]]],
          ["inline","ko-field/drill-down",[],["title","Assignee","options",["subexpr","@mut",[["get","teamsAndPeople",["loc",[null,[872,16],[872,30]]]]],[],[]],"value",["subexpr","@mut",[["get","drillDownFieldValue",["loc",[null,[873,14],[873,33]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isDrillDownEdited",["loc",[null,[874,17],[874,34]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","caseFieldError",["loc",[null,[875,18],[875,32]]]]],[],[]],"onValueChange","drillDownValueChanged"],["loc",[null,[870,6],[877,8]]]],
          ["inline","ko-field/tags",[],["selectedTags",["subexpr","@mut",[["get","selectedTags",["loc",[null,[879,21],[879,33]]]]],[],[]],"tags",["subexpr","@mut",[["get","allTags",["loc",[null,[880,13],[880,20]]]]],[],[]],"onTagSelectionChange",["subexpr","@mut",[["get","tagSelectionChanged",["loc",[null,[881,29],[881,48]]]]],[],[]],"onTagAddition",["subexpr","@mut",[["get","tagAdded",["loc",[null,[882,22],[882,30]]]]],[],[]]],["loc",[null,[878,6],[883,8]]]],
          ["inline","ko-field/checkbox",[],["title","Color","options",["subexpr","@mut",[["get","checkboxField",["loc",[null,[884,48],[884,61]]]]],[],[]],"value",["subexpr","@mut",[["get","checkboxFieldValue",["loc",[null,[884,68],[884,86]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isCheckboxEdited",["loc",[null,[884,96],[884,112]]]]],[],[]],"onValueChange","checkboxValueChanged"],["loc",[null,[884,6],[884,151]]]],
          ["inline","ko-field/text",[],["title","Some other field","value",["subexpr","@mut",[["get","textFieldValue",["loc",[null,[887,16],[887,30]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isTextFieldEdited",["loc",[null,[888,19],[888,36]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","caseFieldError",["loc",[null,[889,20],[889,34]]]]],[],[]],"onValueChange","textFieldValueChanged"],["loc",[null,[885,6],[891,8]]]],
          ["inline","ko-field/text-area",[],["title","Some other field","value",["subexpr","@mut",[["get","textAreaFieldValue",["loc",[null,[894,16],[894,34]]]]],[],[]],"isEdited",["subexpr","@mut",[["get","isTextAreaFieldEdited",["loc",[null,[895,19],[895,40]]]]],[],[]],"isErrored",["subexpr","@mut",[["get","caseFieldError",["loc",[null,[896,20],[896,34]]]]],[],[]],"onValueChange","textAreaFieldValueChanged"],["loc",[null,[892,6],[898,8]]]],
          ["inline","ko-viewers",[],["viewers",["subexpr","@mut",[["get","viewers",["loc",[null,[899,27],[899,34]]]]],[],[]]],["loc",[null,[899,6],[899,36]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child6 = (function() {
      var child0 = (function() {
        var child0 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 909,
                  "column": 8
                },
                "end": {
                  "line": 909,
                  "column": 69
                }
              },
              "moduleName": "frontend-cp/session/showcase/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("Name");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() { return []; },
            statements: [

            ],
            locals: [],
            templates: []
          };
        }());
        var child1 = (function() {
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 910,
                  "column": 8
                },
                "end": {
                  "line": 910,
                  "column": 73
                }
              },
              "moduleName": "frontend-cp/session/showcase/template.hbs"
            },
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("Status");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() { return []; },
            statements: [

            ],
            locals: [],
            templates: []
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 908,
                "column": 6
              },
              "end": {
                "line": 911,
                "column": 6
              }
            },
            "moduleName": "frontend-cp/session/showcase/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
            morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
            return morphs;
          },
          statements: [
            ["block","ko-table/column",[],["style","width: 150px","sortable","name"],0,null,["loc",[null,[909,8],[909,89]]]],
            ["block","ko-table/column",[],["style","width: 100px","sortable","status"],1,null,["loc",[null,[910,8],[910,93]]]]
          ],
          locals: [],
          templates: [child0, child1]
        };
      }());
      var child1 = (function() {
        var child0 = (function() {
          var child0 = (function() {
            var child0 = (function() {
              return {
                meta: {
                  "revision": "Ember@1.13.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 915,
                      "column": 12
                    },
                    "end": {
                      "line": 915,
                      "column": 74
                    }
                  },
                  "moduleName": "frontend-cp/session/showcase/template.hbs"
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode(" ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(2);
                  morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
                  morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [
                  ["inline","ko-avatar",[],["avatar",["subexpr","@mut",[["get","row.avatar",["loc",[null,[915,49],[915,59]]]]],[],[]]],["loc",[null,[915,30],[915,61]]]],
                  ["content","row.name",["loc",[null,[915,62],[915,74]]]]
                ],
                locals: [],
                templates: []
              };
            }());
            var child1 = (function() {
              return {
                meta: {
                  "revision": "Ember@1.13.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 916,
                      "column": 12
                    },
                    "end": {
                      "line": 916,
                      "column": 44
                    }
                  },
                  "moduleName": "frontend-cp/session/showcase/template.hbs"
                },
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [
                  ["content","row.status",["loc",[null,[916,30],[916,44]]]]
                ],
                locals: [],
                templates: []
              };
            }());
            return {
              meta: {
                "revision": "Ember@1.13.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 914,
                    "column": 10
                  },
                  "end": {
                    "line": 917,
                    "column": 10
                  }
                },
                "moduleName": "frontend-cp/session/showcase/template.hbs"
              },
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(2);
                morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
                morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);
                return morphs;
              },
              statements: [
                ["block","ko-table/cell",[],[],0,null,["loc",[null,[915,12],[915,92]]]],
                ["block","ko-table/cell",[],[],1,null,["loc",[null,[916,12],[916,62]]]]
              ],
              locals: [],
              templates: [child0, child1]
            };
          }());
          return {
            meta: {
              "revision": "Ember@1.13.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 913,
                  "column": 8
                },
                "end": {
                  "line": 918,
                  "column": 8
                }
              },
              "moduleName": "frontend-cp/session/showcase/template.hbs"
            },
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [
              ["block","ko-table/row",[],[],0,null,["loc",[null,[914,10],[917,27]]]]
            ],
            locals: ["row"],
            templates: [child0]
          };
        }());
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 912,
                "column": 6
              },
              "end": {
                "line": 919,
                "column": 6
              }
            },
            "moduleName": "frontend-cp/session/showcase/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["block","each",[["get","sortedTableData",["loc",[null,[913,16],[913,31]]]]],[],0,null,["loc",[null,[913,8],[918,17]]]]
          ],
          locals: [],
          templates: [child0]
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 907,
              "column": 4
            },
            "end": {
              "line": 920,
              "column": 4
            }
          },
          "moduleName": "frontend-cp/session/showcase/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
          morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [
          ["block","ko-table/header",[],["onSort","tableSorted"],0,null,["loc",[null,[908,6],[911,26]]]],
          ["block","ko-table/body",[],[],1,null,["loc",[null,[912,6],[919,24]]]]
        ],
        locals: [],
        templates: [child0, child1]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 995,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/showcase/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","showcase-container");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Add Participant floated");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-participants\n      participants=participants\n      addParticipant=\"addParticipant\"}}\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-add-participants-context-menu\n      copyInParticipants=copyInParticipants\n      contextModalId=\"addParticipants\"}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Add Participant inline");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-participants\n      participants=participants\n      addParticipant=\"addParticipantInline\"}}\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-add-participants-context-menu\n      copyInParticipants=copyInParticipants\n      contextModalId=\"addParticipantsInline\"}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Apply Macro inline");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{#ko-toggle-context-modal toggleModal=\"drillDownInline\"}} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n      anything goes here ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{/ko-toggle-context-modal}} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-drill-down-context-menu\n      title=(format-message (intl-get \"cases.applymacro\"))\n      placeholder=(format-message (intl-get \"cases.applymacroplaceholder\"))\n      options=macros\n      contextModalId=\"drillDownInline\"\n      onSelect=\"drillDownSelected\"}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-dropdown/select");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-dropdown/drill-down");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Icons");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","fs1");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-add-circle");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-add-circle");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-minus-circle");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-minus-circle");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-happy");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-happy");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-sad");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-sad");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-plus");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-plus");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-cross");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-cross");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-home");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-home");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-inbox");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-inbox");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-person");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-person");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-insights");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-insights");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-help");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-help");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-search");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-search");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","fs2");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-globe");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-globe");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-cross-bold");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-cross-bold");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-pause");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-pause");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-reply");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-reply");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-caution");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-caution");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-bold");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-bold");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-bullet-list");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-bullet-list");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-camera");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-camera");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-italic");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-italic");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-link");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-link");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-number-list");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-number-list");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-quote");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-quote");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-users");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-users");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-pencil");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-pencil");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-tick");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-tick");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-trash");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-trash");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-grid");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-grid");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-list");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-list");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-search-small");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-search-small");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-attachment");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-attachment");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-calendar");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-calendar");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-case");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-case");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-clock");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-clock");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-gear");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-gear");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-icon-help");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-icon-help");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-rocket");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-rocket");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-stopwatch");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-stopwatch");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-user");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-user");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-twitter");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-twitter");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-facebook");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-facebook");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-large-left");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-chevron-large-left");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-large-right");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-chevron-large-right");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-select");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-select");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-double-down");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-chevron-double-down");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-double-up");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-chevron-double-up");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-large-down");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-chevron-large-down");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-large-up");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-chevron-large-up");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-small-down");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-chevron-small-down");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-small-up");
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","mls");
        var el5 = dom.createTextNode(" i-chevron-small-up");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-time-billing");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  Duration: ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Loader");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-loader}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-loader large=true}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-feed");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Contact information");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-contact-info title=contactTitle facebook=facebook twitter=twitter linkedin=linkedin emails=email phones=phone}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Recent feedback");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-feedback title=feedbackTitle feedback=feedback}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Recent cases");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-recent-cases title=casesTitle cases=cases}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Recent metric");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-case-metric title=metricTitle metrics=metrics}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Avatar");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-avatar avatar=avatar}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Recent members");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-recent-members title=membersTitle members=people}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Address");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-address title=addressTitle address=address}}\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("KO-USER-CONTENT");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("KO-ORGANIZATION-CONTENT");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("KO-CASE-CONTENT");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-radio");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='You can choose this'\n      large=true\n      disabled=false\n      tabindex=0\n      checked=selection\n      value='one'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='or this'\n      large=true\n      disabled=false\n      tabindex=0\n      checked=selection\n      value='two'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='but not this'\n      large=true\n      disabled=true\n      tabindex=0\n      checked=selection\n      value='three'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='nor this'\n      large=false\n      disabled=true\n      tabindex=0\n      checked=selection\n      value='four'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-radio\n      label='This is fine however'\n      large=false\n      disabled=false\n      tabindex=0\n      checked=selection\n      value='five'\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-checkbox");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my preferences'\n      large=true\n      disabled=false\n      tabindex=0\n      checked=false\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my preferences'\n      large=true\n      disabled=false\n      tabindex=0\n      checked=true\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my diet'\n      large=true\n      disabled=true\n      tabindex=0\n      checked=false\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my color'\n      large=false\n      disabled=true\n      tabindex=0\n      checked=false\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-checkbox\n      label='Remember my name'\n      large=false\n      disabled=false\n      tabindex=0\n      checked=false\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-toggle");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("br");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-toggle\n      activated=false\n      label='Nuclear bomb switch'\n      micro=false\n      tabindex=0\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-toggle\n      activated=true\n      label='Nuclear bomb switch'\n      micro=false\n      tabindex=0\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-toggle\n      activated=false\n      label='Nuclear bomb switch'\n      micro=true\n      tabindex=0\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("{{ko-toggle\n      activated=true\n      label='Nuclear bomb switch'\n      micro=true\n      tabindex=0\n    }} ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("br");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("ko-breadcrumbs");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("{{ko-breadcrumbs breadcrumbs=tabs activeTab=activeTab action=\"tabChange\"}}");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Search");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createTextNode("{{ko-search placeholder=\"search\" onSearchTermChange=\"logIt\"}}");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Buttons");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--default");
        var el4 = dom.createTextNode("Button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--default");
        dom.setAttribute(el3,"disabled","disabled");
        var el4 = dom.createTextNode("Disabled button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--action i--chevrons");
        var el4 = dom.createTextNode("Actions");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--primary");
        var el4 = dom.createTextNode("Primary button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--highlight");
        var el4 = dom.createTextNode("Highlight button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--alert");
        var el4 = dom.createTextNode("Alert button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--twitter");
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-twitter u-pr-");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("Twitter button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--facebook");
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-facebook u-pr-");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("Facebook button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","button-group");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4,"class","button-group__item is-active");
        var el5 = dom.createTextNode("Button");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("\n   ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4,"class","button-group__item");
        var el5 = dom.createTextNode("Toggled button");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("\n   ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4,"class","button-group__item");
        var el5 = dom.createTextNode("Button");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","button-split");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--primary");
        var el4 = dom.createTextNode("Split button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("\n ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","button--primary button-split__action");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-large-down");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","button-split");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3,"class","button button--twitter");
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-twitter u-pr-");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("Twitter Split button");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("\n ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","button-split__action button--twitter");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("span");
        dom.setAttribute(el4,"class","i-chevron-large-down");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","flag--bottom");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","flag__img");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("img");
        dom.setAttribute(el4,"src","http://lorempixel.com/42/42/people/");
        dom.setAttribute(el4,"alt","");
        dom.setAttribute(el4,"class","header__image");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","flag__body");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("h4");
        dom.setAttribute(el4,"class","header__title");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("p");
        dom.setAttribute(el4,"class","header__subtitle");
        var el5 = dom.createTextNode("\n        January 22, 2015 - 12:14PM created via Twitter, ");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("{{ brand_name }}\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Case info-bar fields");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("button");
        var el3 = dom.createTextNode("Toggle Error");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("button");
        var el3 = dom.createTextNode("Clear Changes");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        dom.setAttribute(el2,"id","table");
        var el3 = dom.createTextNode("Table");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        dom.setAttribute(el2,"id","datepicker");
        var el3 = dom.createTextNode("Datepicker");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("code");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h2");
        var el3 = dom.createTextNode("Create button");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","box-container");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","box");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("ul");
        dom.setAttribute(el4,"class","list-inline");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("img");
        dom.setAttribute(el6,"alt","");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("p");
        dom.setAttribute(el6,"class","t-caption t-small t-center u-mt--");
        var el7 = dom.createTextNode("\n            Case\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        dom.setAttribute(el5,"class","u-mh--");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("img");
        dom.setAttribute(el6,"alt","");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("p");
        dom.setAttribute(el6,"class","t-caption t-small t-center u-mt--");
        var el7 = dom.createTextNode("\n            User\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("li");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("img");
        dom.setAttribute(el6,"alt","");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("p");
        dom.setAttribute(el6,"class","t-caption t-small t-center u-mt--");
        var el7 = dom.createTextNode("\n            Organisation\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","box");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("p");
        dom.setAttribute(el4,"class","t-caption t-small u-mb-");
        var el5 = dom.createTextNode("\n        Recently viewed:\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag flag--auto flag--small u-mb-");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__img");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("img");
        dom.setAttribute(el6,"class","avatar");
        dom.setAttribute(el6,"src","https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg");
        dom.setAttribute(el6,"alt","");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__body");
        var el6 = dom.createTextNode("\n          I can't open the internet.\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("p");
        dom.setAttribute(el6,"class","t-small t-caption");
        var el7 = dom.createTextNode("Samantha Jones");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag flag--auto flag--small u-mb-");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__img");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("img");
        dom.setAttribute(el6,"class","avatar");
        dom.setAttribute(el6,"src","https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg");
        dom.setAttribute(el6,"alt","");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__body");
        var el6 = dom.createTextNode("\n          I can't open the internet.\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("p");
        dom.setAttribute(el6,"class","t-small t-caption");
        var el7 = dom.createTextNode("Samantha Jones");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag flag--auto flag--small");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__img");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("img");
        dom.setAttribute(el6,"class","avatar");
        dom.setAttribute(el6,"src","https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg");
        dom.setAttribute(el6,"alt","");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","flag__body");
        var el6 = dom.createTextNode("\n          I can't open the internet.\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("p");
        dom.setAttribute(el6,"class","t-small t-caption");
        var el7 = dom.createTextNode("Samantha Jones");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","showcase-spacer");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [289]);
        var element2 = dom.childAt(element0, [291]);
        var element3 = dom.childAt(element0, [295]);
        var element4 = dom.childAt(element0, [315]);
        var element5 = dom.childAt(element4, [1, 1]);
        var element6 = dom.childAt(element5, [1, 1]);
        var element7 = dom.childAt(element5, [3, 1]);
        var element8 = dom.childAt(element5, [5, 1]);
        var morphs = new Array(62);
        morphs[0] = dom.createMorphAt(element0,5,5);
        morphs[1] = dom.createMorphAt(element0,7,7);
        morphs[2] = dom.createMorphAt(element0,15,15);
        morphs[3] = dom.createMorphAt(element0,17,17);
        morphs[4] = dom.createMorphAt(element0,25,25);
        morphs[5] = dom.createMorphAt(element0,27,27);
        morphs[6] = dom.createMorphAt(element0,35,35);
        morphs[7] = dom.createMorphAt(element0,41,41);
        morphs[8] = dom.createMorphAt(element0,55,55);
        morphs[9] = dom.createMorphAt(element0,57,57);
        morphs[10] = dom.createMorphAt(element0,59,59);
        morphs[11] = dom.createMorphAt(element0,65,65);
        morphs[12] = dom.createMorphAt(element0,71,71);
        morphs[13] = dom.createMorphAt(element0,79,79);
        morphs[14] = dom.createMorphAt(element0,85,85);
        morphs[15] = dom.createMorphAt(element0,93,93);
        morphs[16] = dom.createMorphAt(element0,101,101);
        morphs[17] = dom.createMorphAt(element0,109,109);
        morphs[18] = dom.createMorphAt(element0,117,117);
        morphs[19] = dom.createMorphAt(element0,125,125);
        morphs[20] = dom.createMorphAt(element0,133,133);
        morphs[21] = dom.createMorphAt(element0,141,141);
        morphs[22] = dom.createMorphAt(element0,147,147);
        morphs[23] = dom.createMorphAt(element0,153,153);
        morphs[24] = dom.createMorphAt(element0,159,159);
        morphs[25] = dom.createMorphAt(element0,163,163);
        morphs[26] = dom.createMorphAt(element0,167,167);
        morphs[27] = dom.createMorphAt(element0,171,171);
        morphs[28] = dom.createMorphAt(element0,175,175);
        morphs[29] = dom.createMorphAt(element0,185,185);
        morphs[30] = dom.createMorphAt(element0,187,187);
        morphs[31] = dom.createMorphAt(element0,189,189);
        morphs[32] = dom.createMorphAt(element0,191,191);
        morphs[33] = dom.createMorphAt(element0,193,193);
        morphs[34] = dom.createMorphAt(element0,201,201);
        morphs[35] = dom.createMorphAt(element0,205,205);
        morphs[36] = dom.createMorphAt(element0,209,209);
        morphs[37] = dom.createMorphAt(element0,213,213);
        morphs[38] = dom.createMorphAt(dom.childAt(element0, [223]),0,0);
        morphs[39] = dom.createMorphAt(element0,231,231);
        morphs[40] = dom.createMorphAt(dom.childAt(element0, [241]),0,0);
        morphs[41] = dom.createMorphAt(dom.childAt(element0, [245]),0,0);
        morphs[42] = dom.createMorphAt(dom.childAt(element0, [249]),0,0);
        morphs[43] = dom.createMorphAt(dom.childAt(element0, [253]),0,0);
        morphs[44] = dom.createMorphAt(dom.childAt(element0, [257]),0,0);
        morphs[45] = dom.createMorphAt(dom.childAt(element0, [261]),0,0);
        morphs[46] = dom.createMorphAt(dom.childAt(element0, [265]),0,0);
        morphs[47] = dom.createMorphAt(dom.childAt(element0, [269]),0,0);
        morphs[48] = dom.createMorphAt(dom.childAt(element0, [273]),0,0);
        morphs[49] = dom.createMorphAt(dom.childAt(element0, [279]),0,0);
        morphs[50] = dom.createMorphAt(dom.childAt(element0, [283, 3, 1]),1,1);
        morphs[51] = dom.createElementMorph(element1);
        morphs[52] = dom.createElementMorph(element2);
        morphs[53] = dom.createAttrMorph(element3, 'style');
        morphs[54] = dom.createMorphAt(element3,1,1);
        morphs[55] = dom.createMorphAt(dom.childAt(element0, [301]),1,1);
        morphs[56] = dom.createMorphAt(dom.childAt(element0, [307]),1,1);
        morphs[57] = dom.createMorphAt(dom.childAt(element0, [309]),0,0);
        morphs[58] = dom.createAttrMorph(element4, 'style');
        morphs[59] = dom.createAttrMorph(element6, 'src');
        morphs[60] = dom.createAttrMorph(element7, 'src');
        morphs[61] = dom.createAttrMorph(element8, 'src');
        return morphs;
      },
      statements: [
        ["inline","ko-participants",[],["participants",["subexpr","@mut",[["get","participants",["loc",[null,[7,17],[7,29]]]]],[],[]],"addParticipant","addParticipant"],["loc",[null,[6,4],[8,37]]]],
        ["inline","ko-add-participants-context-menu",[],["copyInParticipants",["subexpr","@mut",[["get","copyInParticipants",["loc",[null,[11,23],[11,41]]]]],[],[]],"contextModalId","addParticipants"],["loc",[null,[10,4],[12,38]]]],
        ["inline","ko-participants",[],["participants",["subexpr","@mut",[["get","participants",["loc",[null,[28,17],[28,29]]]]],[],[]],"addParticipant","addParticipantInline"],["loc",[null,[27,2],[29,43]]]],
        ["inline","ko-add-participants-context-menu",[],["copyInParticipants",["subexpr","@mut",[["get","copyInParticipants",["loc",[null,[32,23],[32,41]]]]],[],[]],"contextModalId","addParticipantsInline"],["loc",[null,[31,2],[33,44]]]],
        ["block","ko-toggle-context-modal",[],["toggleModal","drillDownInline"],0,null,["loc",[null,[48,2],[50,30]]]],
        ["inline","ko-drill-down-context-menu",[],["title",["subexpr","format-message",[["subexpr","intl-get",["cases.applymacro"],[],["loc",[null,[53,26],[53,55]]]]],[],["loc",[null,[53,10],[53,56]]]],"placeholder",["subexpr","format-message",[["subexpr","intl-get",["cases.applymacroplaceholder"],[],["loc",[null,[54,32],[54,72]]]]],[],["loc",[null,[54,16],[54,73]]]],"options",["subexpr","@mut",[["get","macros",["loc",[null,[55,12],[55,18]]]]],[],[]],"contextModalId","drillDownInline","onSelect","drillDownSelected"],["loc",[null,[52,2],[57,34]]]],
        ["block","ko-dropdown/select",[],["label","Primary"],1,null,["loc",[null,[75,2],[80,25]]]],
        ["inline","ko-dropdown/drill-down",[],["label","Macro","title",["subexpr","format-message",[["subexpr","intl-get",["cases.applymacro"],[],["loc",[null,[88,26],[88,55]]]]],[],["loc",[null,[88,10],[88,56]]]],"placeholder",["subexpr","format-message",[["subexpr","intl-get",["cases.applymacroplaceholder"],[],["loc",[null,[89,32],[89,72]]]]],[],["loc",[null,[89,16],[89,73]]]],"options",["subexpr","@mut",[["get","macros",["loc",[null,[90,12],[90,18]]]]],[],[]],"contextModalId","drillDownInline","onSelect","drillDownSelected"],["loc",[null,[86,2],[92,34]]]],
        ["inline","ko-time-billing/ko-time-billing-demo-open",[],["addTimeBilling","addTimeBilling"],["loc",[null,[362,2],[362,79]]]],
        ["inline","ko-time-billing/ko-time-billing-context-modal",[],["contextModalId","addTimeBilling","timeBillingDuration",["subexpr","@mut",[["get","timeBillingDuration",["loc",[null,[363,102],[363,121]]]]],[],[]],"on-duration-change","onDurationChanged"],["loc",[null,[363,2],[363,162]]]],
        ["content","timeBillingDuration",["loc",[null,[365,12],[365,35]]]],
        ["content","ko-loader",["loc",[null,[369,2],[369,15]]]],
        ["inline","ko-loader",[],["large",true],["loc",[null,[376,2],[376,26]]]],
        ["inline","ko-feed",[],["events",["subexpr","@mut",[["get","events",["loc",[null,[384,19],[384,25]]]]],[],[]]],["loc",[null,[384,2],[384,27]]]],
        ["inline","ko-contact-info",[],["title",["subexpr","@mut",[["get","contactTitle",["loc",[null,[389,26],[389,38]]]]],[],[]],"facebook",["subexpr","@mut",[["get","facebook",["loc",[null,[389,48],[389,56]]]]],[],[]],"twitter",["subexpr","@mut",[["get","twitter",["loc",[null,[389,65],[389,72]]]]],[],[]],"linkedin",["subexpr","@mut",[["get","linkedin",["loc",[null,[389,82],[389,90]]]]],[],[]],"emails",["subexpr","@mut",[["get","email",["loc",[null,[389,98],[389,103]]]]],[],[]],"phones",["subexpr","@mut",[["get","phone",["loc",[null,[389,111],[389,116]]]]],[],[]]],["loc",[null,[389,2],[389,118]]]],
        ["inline","ko-feedback",[],["title",["subexpr","@mut",[["get","feedbackTitle",["loc",[null,[398,22],[398,35]]]]],[],[]],"feedback",["subexpr","@mut",[["get","feedback",["loc",[null,[398,45],[398,53]]]]],[],[]]],["loc",[null,[398,2],[398,55]]]],
        ["inline","ko-recent-cases",[],["title",["subexpr","@mut",[["get","casesTitle",["loc",[null,[407,26],[407,36]]]]],[],[]],"cases",["subexpr","@mut",[["get","cases",["loc",[null,[407,43],[407,48]]]]],[],[]]],["loc",[null,[407,2],[407,50]]]],
        ["inline","ko-case-metric",[],["title",["subexpr","@mut",[["get","metricTitle",["loc",[null,[416,25],[416,36]]]]],[],[]],"metrics",["subexpr","@mut",[["get","metrics",["loc",[null,[416,45],[416,52]]]]],[],[]]],["loc",[null,[416,2],[416,54]]]],
        ["inline","ko-avatar",[],["avatar",["subexpr","@mut",[["get","avatar",["loc",[null,[425,21],[425,27]]]]],[],[]]],["loc",[null,[425,2],[425,29]]]],
        ["inline","ko-recent-members",[],["title",["subexpr","@mut",[["get","membersTitle",["loc",[null,[434,28],[434,40]]]]],[],[]],"members",["subexpr","@mut",[["get","people",["loc",[null,[434,49],[434,55]]]]],[],[]]],["loc",[null,[434,2],[434,57]]]],
        ["inline","ko-address",[],["title",["subexpr","@mut",[["get","addressTitle",["loc",[null,[443,21],[443,33]]]]],[],[]],"address",["subexpr","@mut",[["get","address",["loc",[null,[443,42],[443,49]]]]],[],[]]],["loc",[null,[443,2],[443,51]]]],
        ["block","ko-info-bar",[],[],2,null,["loc",[null,[453,2],[458,18]]]],
        ["block","ko-info-bar",[],[],3,null,["loc",[null,[465,2],[472,18]]]],
        ["block","ko-info-bar",[],[],4,null,["loc",[null,[478,2],[487,18]]]],
        ["inline","ko-radio",[],["label","You can choose this","large",true,"disabled",false,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[497,12],[497,21]]]]],[],[]],"value","one"],["loc",[null,[492,2],[499,4]]]],
        ["inline","ko-radio",[],["label","or this","large",true,"disabled",false,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[506,12],[506,21]]]]],[],[]],"value","two"],["loc",[null,[501,2],[508,4]]]],
        ["inline","ko-radio",[],["label","but not this","large",true,"disabled",true,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[515,12],[515,21]]]]],[],[]],"value","three"],["loc",[null,[510,2],[517,4]]]],
        ["inline","ko-radio",[],["label","nor this","large",false,"disabled",true,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[524,12],[524,21]]]]],[],[]],"value","four"],["loc",[null,[519,2],[526,4]]]],
        ["inline","ko-radio",[],["label","This is fine however","large",false,"disabled",false,"tabindex",0,"checked",["subexpr","@mut",[["get","selection",["loc",[null,[533,12],[533,21]]]]],[],[]],"value","five"],["loc",[null,[528,2],[535,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my preferences","large",true,"disabled",false,"tabindex",0,"checked",false],["loc",[null,[590,2],[596,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my preferences","large",true,"disabled",false,"tabindex",0,"checked",true],["loc",[null,[598,2],[604,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my diet","large",true,"disabled",true,"tabindex",0,"checked",false],["loc",[null,[606,2],[612,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my color","large",false,"disabled",true,"tabindex",0,"checked",false],["loc",[null,[614,2],[620,4]]]],
        ["inline","ko-checkbox",[],["label","Remember my name","large",false,"disabled",false,"tabindex",0,"checked",false],["loc",[null,[622,2],[628,4]]]],
        ["inline","ko-toggle",[],["activated",false,"label","Nuclear bomb switch","micro",false,"tabindex",0],["loc",[null,[677,2],[682,4]]]],
        ["inline","ko-toggle",[],["activated",true,"label","Nuclear bomb switch","micro",false,"tabindex",0],["loc",[null,[684,2],[689,4]]]],
        ["inline","ko-toggle",[],["activated",false,"label","Nuclear bomb switch","micro",true,"tabindex",0],["loc",[null,[691,2],[696,4]]]],
        ["inline","ko-toggle",[],["activated",true,"label","Nuclear bomb switch","micro",true,"tabindex",0],["loc",[null,[698,2],[703,4]]]],
        ["inline","ko-breadcrumbs",[],["breadcrumbs",["subexpr","@mut",[["get","tabs",["loc",[null,[739,36],[739,40]]]]],[],[]],"activeTab",["subexpr","@mut",[["get","activeTab",["loc",[null,[739,51],[739,60]]]]],[],[]],"action","tabChange"],["loc",[null,[739,7],[739,81]]]],
        ["inline","ko-search",[],["placeholder","search","onSearchTermChange","logIt"],["loc",[null,[746,2],[748,32]]]],
        ["inline","escape-html",["<button class=\"button button--default\">Button</button>"],[],["loc",[null,[758,8],[758,80]]]],
        ["inline","escape-html",["<button class=\"button button--default\" disabled=\"disabled\">Disabled button</button>"],[],["loc",[null,[763,8],[763,109]]]],
        ["inline","escape-html",["<button class=\"button button--action i--chevrons\">Actions</button>"],[],["loc",[null,[768,8],[768,92]]]],
        ["inline","escape-html",["<button class=\"button button--primary\">Primary button</button>"],[],["loc",[null,[774,8],[774,88]]]],
        ["inline","escape-html",["<button class=\"button button--highlight\">Highlight button</button>"],[],["loc",[null,[780,8],[780,92]]]],
        ["inline","escape-html",["<button class=\"button button--alert\">Alert button</button>"],[],["loc",[null,[786,8],[786,84]]]],
        ["inline","escape-html",["<button class=\"button button--twitter\">Twitter button</button>"],[],["loc",[null,[791,8],[791,88]]]],
        ["inline","escape-html",["<button class=\"button button--facebook\">Facebook button</button>"],[],["loc",[null,[796,8],[796,90]]]],
        ["inline","escape-html",["<div class=\"button-group\">\n  \t<button class=\"button-group__item\">Button</button><button class=\"button-group__item toggled\">Toggled button</button><button class=\"button-group__item\">Button</button>\n  </div>"],[],["loc",[null,[806,8],[808,11]]]],
        ["inline","escape-html",["<button class=\"button button--primary button--dropdown\">Split button</button>"],[],["loc",[null,[824,8],[824,103]]]],
        ["inline","ko-editable-text",[],["value",["subexpr","@mut",[["get","editableTextVal",["loc",[null,[834,33],[834,48]]]]],[],[]]],["loc",[null,[834,8],[834,50]]]],
        ["element","action",["toggleCaseFieldError"],[],["loc",[null,[846,10],[846,43]]]],
        ["element","action",["clearChanges"],[],["loc",[null,[847,10],[847,35]]]],
        ["attribute","style",["get","infoBarStyle",["loc",[null,[851,15],[851,27]]]]],
        ["block","ko-info-bar",[],[],5,null,["loc",[null,[852,4],[900,20]]]],
        ["block","ko-table",[],["selectable",true],6,null,["loc",[null,[907,4],[920,17]]]],
        ["inline","ko-datepicker",[],["date",["subexpr","@mut",[["get","date",["loc",[null,[927,25],[927,29]]]]],[],[]],"on-date-change","dateChange"],["loc",[null,[927,4],[927,59]]]],
        ["inline","escape-html",["{{ko-datepicker date=date on-date-change=\"dateChange\"}}"],[],["loc",[null,[929,8],[929,81]]]],
        ["attribute","style",["get","boxContainerStyle",["loc",[null,[935,37],[935,54]]]]],
        ["attribute","src",["concat",[["get","assetRoot",["loc",[null,[939,22],[939,31]]]],"/images/icons/case.svg"]]],
        ["attribute","src",["concat",[["get","assetRoot",["loc",[null,[945,22],[945,31]]]],"/images/icons/user.svg"]]],
        ["attribute","src",["concat",[["get","assetRoot",["loc",[null,[951,22],[951,31]]]],"/images/icons/organization.svg"]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6]
    };
  }()));

});
define('frontend-cp/session/showcase/view', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].View.extend({
    classNames: ['showcase']
  });

});
define('frontend-cp/session/styleguide/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 204,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/styleguide/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","styleguide container");
        var el2 = dom.createTextNode("\n  Add style guide here!\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","styleguide__item");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("Headings");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h1");
        var el4 = dom.createTextNode("Heading 1");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("Heading 2");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h3");
        var el4 = dom.createTextNode("Heading 3");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h4");
        var el4 = dom.createTextNode("Heading 3");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h5");
        var el4 = dom.createTextNode("Heading 5");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h6");
        var el4 = dom.createTextNode("Heading 6");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","styleguide__item");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("Arrow");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","box u-pos-rel");
        var el4 = dom.createTextNode("\n      I have an arrow at the top! :)\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","arrow arrow--top");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","box u-pos-rel");
        var el4 = dom.createTextNode("\n      I have an arrow at the bottom! :(\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","arrow arrow--bottom");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","styleguide__item");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("Box");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","box");
        var el4 = dom.createTextNode("\n      I am a standard box!\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","box box--secondary");
        var el4 = dom.createTextNode("\n      i am a box with secondary styling!\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","box-container");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","box");
        var el5 = dom.createTextNode("I am a box with a container");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","box box--wide");
        var el5 = dom.createTextNode("\n        I am a wide box with a container ;)\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","box");
        var el5 = dom.createTextNode("I am a box container");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","styleguide__item");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("Flag");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","flag");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag__img");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("img");
        dom.setAttribute(el5,"width","48");
        dom.setAttribute(el5,"height","48");
        dom.setAttribute(el5,"src","http://i.imgur.com/C9QgICy.jpg");
        dom.setAttribute(el5,"alt","");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","flag__body");
        var el5 = dom.createTextNode("\n        I am the flag body!\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","styleguide__item");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("Typography Utilities");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h4");
        var el4 = dom.createTextNode("States");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-good");
        var el4 = dom.createTextNode("I am a good message! :)");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-bad");
        var el4 = dom.createTextNode("I am a bad message! >:)");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-warning");
        var el4 = dom.createTextNode("I am a warning message! :(");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h4");
        var el4 = dom.createTextNode("Position");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-center");
        var el4 = dom.createTextNode("I am center aligned");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-left");
        var el4 = dom.createTextNode("I am left aligned");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-right");
        var el4 = dom.createTextNode("I am right aligned");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h4");
        var el4 = dom.createTextNode("Style");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-caption");
        var el4 = dom.createTextNode("I am a caption!");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("p");
        dom.setAttribute(el3,"class","t-small");
        var el4 = dom.createTextNode("I am small!");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","styleguide__item");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h2");
        var el4 = dom.createTextNode("Variables");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h4");
        var el4 = dom.createTextNode("Brand");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n$brand-rounding | border-radius\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h4");
        var el4 = dom.createTextNode("Colors");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n$color-primary\n$color-secondary\n$color-tertiary\n$color-trim\n  $color-trim--dark\n\n$color-active\n\n\n$color-text-primary\n$color-text-secondary\n  $color-text-secondary--dark\n\n\n$color-good\n$color-bad\n$color-warning\n\n\n$color-twitter\n$color-facebook\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h4");
        var el4 = dom.createTextNode("Defaults");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("code");
        var el4 = dom.createTextNode("\n$base-spacing-unit\n$half-spacing-unit\n$quarter-spacing-unit\n$large-spacing-unit\n\n$base-font-size\n$base-line-height\n$base-text-color\n$base-background-color\n$base-font-family\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [3]);
        var element2 = dom.childAt(element0, [5]);
        var element3 = dom.childAt(element0, [9]);
        var morphs = new Array(9);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [5]),1,1);
        morphs[1] = dom.createMorphAt(dom.childAt(element1, [9]),1,1);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [5]),1,1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [9]),1,1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [13]),1,1);
        morphs[5] = dom.createMorphAt(dom.childAt(element0, [7, 5]),1,1);
        morphs[6] = dom.createMorphAt(dom.childAt(element3, [11]),1,1);
        morphs[7] = dom.createMorphAt(dom.childAt(element3, [21]),1,1);
        morphs[8] = dom.createMorphAt(dom.childAt(element3, [29]),1,1);
        return morphs;
      },
      statements: [
        ["inline","escape-html",["<div class=\"arrow arrow--top\"></div>"],[],["loc",[null,[23,0],[25,2]]]],
        ["inline","escape-html",["<div class=\"arrow arrow--bottom\"></div>"],[],["loc",[null,[33,0],[35,2]]]],
        ["inline","escape-html",["<div class=\"box\">\n  I am a box with secondary styling!\n</div>"],[],["loc",[null,[46,0],[50,2]]]],
        ["inline","escape-html",["<div class=\"box box--secondary\">\n  I am a box with secondary styling!\n</div>"],[],["loc",[null,[57,0],[61,2]]]],
        ["inline","escape-html",["<div class=\"box-container\">\n  <div class=\"box\">I am a box with a container</div>\n  <div class=\"box box--wide\">\n    I am a wide box with a container ;)\n  </div>\n  <div class=\"box\">I am a box container</div>\n</div>"],[],["loc",[null,[72,0],[80,2]]]],
        ["inline","escape-html",["<div class=\"flag\">\n  <div class=\"flag__img\">\n    <img class=\"avatar\" src=\"http://i.imgur.com/C9QgICy.jpg\" alt=\"\">\n  </div>\n  <div class=\"flag__body\">\n    I am the flag body!\n  </div>\n</div>"],[],["loc",[null,[96,0],[105,2]]]],
        ["inline","escape-html",["<p class=\"t-good\">I am a good message! :)</p>\n<p class=\"t-bad\">I am a bad message! >:)</p>\n<p class=\"t-warning\">I am a warning message! :(</p>"],[],["loc",[null,[119,0],[123,2]]]],
        ["inline","escape-html",["<p class=\"t-center\">I am center aligned</p>\n<p class=\"t-left\">I am left aligned</p>\n<p class=\"t-right\">I am right aligned</p>"],[],["loc",[null,[133,0],[137,2]]]],
        ["inline","escape-html",["<p class=\"t-caption\">I am a caption!</p>\n<p class=\"t-small\">I am small!</p>"],[],["loc",[null,[145,0],[148,2]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 10
            },
            "end": {
              "line": 7,
              "column": 68
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child1 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 10
            },
            "end": {
              "line": 8,
              "column": 69
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child2 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 10
            },
            "end": {
              "line": 9,
              "column": 70
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child3 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 10
            },
            "end": {
              "line": 10,
              "column": 68
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child4 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 10
            },
            "end": {
              "line": 11,
              "column": 72
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child5 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 28,
              "column": 8
            },
            "end": {
              "line": 30,
              "column": 8
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["content","ko-session-widgets",["loc",[null,[29,10],[29,32]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    var child6 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 37,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 62
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("Showcase");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child7 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 38,
              "column": 67
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("Style Guide");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() { return []; },
        statements: [

        ],
        locals: [],
        templates: []
      };
    }());
    var child8 = (function() {
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 2
            }
          },
          "moduleName": "frontend-cp/session/template.hbs"
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);
          return morphs;
        },
        statements: [
          ["content","outlet",["loc",[null,[42,4],[42,14]]]]
        ],
        locals: [],
        templates: []
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("header");
        dom.setAttribute(el1,"class","header");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","nav");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","container");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","nav__image");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","u-inline-block");
        dom.setAttribute(el4,"data-region","navigation-menu");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("nav");
        dom.setAttribute(el5,"class","nav-main");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","u-inline-block");
        dom.setAttribute(el4,"data-region","navigation-tabs");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("nav");
        dom.setAttribute(el5,"class","nav-tabs");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3,"class","nav-secondary");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4,"class","container");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","u-3/4 u-inline-block");
        dom.setAttribute(el5,"data-region","navigation-search");
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5,"class","u-1/4 u-inline-block");
        dom.setAttribute(el5,"data-region","navigation-profile");
        var el6 = dom.createTextNode("\n\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","session__content");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0, 1]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element1, [3, 1]);
        var element3 = dom.childAt(element0, [3, 1]);
        var morphs = new Array(12);
        morphs[0] = dom.createMorphAt(element2,1,1);
        morphs[1] = dom.createMorphAt(element2,3,3);
        morphs[2] = dom.createMorphAt(element2,5,5);
        morphs[3] = dom.createMorphAt(element2,7,7);
        morphs[4] = dom.createMorphAt(element2,9,9);
        morphs[5] = dom.createMorphAt(dom.childAt(element1, [5, 1]),1,1);
        morphs[6] = dom.createMorphAt(element1,7,7);
        morphs[7] = dom.createMorphAt(dom.childAt(element3, [1]),1,1);
        morphs[8] = dom.createMorphAt(dom.childAt(element3, [3]),1,1);
        morphs[9] = dom.createMorphAt(fragment,2,2,contextualElement);
        morphs[10] = dom.createMorphAt(fragment,4,4,contextualElement);
        morphs[11] = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);
        return morphs;
      },
      statements: [
        ["block","link-to",["session.cases"],["class","nav-main__item i-home"],0,null,["loc",[null,[7,10],[7,80]]]],
        ["block","link-to",["session.cases"],["class","nav-main__item i-inbox"],1,null,["loc",[null,[8,10],[8,81]]]],
        ["block","link-to",["session.cases"],["class","nav-main__item i-person"],2,null,["loc",[null,[9,10],[9,82]]]],
        ["block","link-to",["session.cases"],["class","nav-main__item i-help"],3,null,["loc",[null,[10,10],[10,80]]]],
        ["block","link-to",["session.cases"],["class","nav-main__item i-insights"],4,null,["loc",[null,[11,10],[11,84]]]],
        ["inline","ko-tabs",[],["tabs",["subexpr","@mut",[["get","tabs",["loc",[null,[16,25],[16,29]]]]],[],[]],"selectedTab",["subexpr","@mut",[["get","selectedTab",["loc",[null,[16,42],[16,53]]]]],[],[]]],["loc",[null,[16,10],[16,55]]]],
        ["content","ko-agent-dropdown",["loc",[null,[19,9],[19,30]]]],
        ["inline","ko-universal-search",[],["performSearch","performUniversalSearch","searchResults",["subexpr","@mut",[["get","searchResults",["loc",[null,[24,83],[24,96]]]]],[],[]],"searchingChanged","onSearchingChanged"],["loc",[null,[24,8],[24,136]]]],
        ["block","unless",[["get","hideSessionWidgets",["loc",[null,[28,18],[28,36]]]]],[],5,null,["loc",[null,[28,8],[30,19]]]],
        ["block","link-to",["session.showcase"],["class","nav-main__item"],6,null,["loc",[null,[37,0],[37,74]]]],
        ["block","link-to",["session.styleguide"],["class","nav-main__item"],7,null,["loc",[null,[38,0],[38,79]]]],
        ["block","ko-scroller",[],["scrollTop",["subexpr","@mut",[["get","scroll",["loc",[null,[41,27],[41,33]]]]],[],[]]],8,null,["loc",[null,[41,2],[43,18]]]]
      ],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8]
    };
  }()));

});
define('frontend-cp/session/users/index/route', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Route.extend({
    page: 1,
    limit: 5,
    offset: 0,

    queryParams: {
      page: {
        refreshModel: true
      }
    },

    model: function model(params) {
      if (params.page) {
        var page = params.page;
        this.set('page', isNaN(page) ? 1 : Math.floor(Math.abs(page)));
      }
      this.set('offset', (this.get('page') - 1) * this.get('limit'));

      return this.store.find('user', {
        offset: this.get('offset'),
        limit: this.get('limit')
      });
    },

    setupController: function setupController(controller, model) {
      controller.set('users', model);
      controller.setProperties({
        page: this.get('page'),
        totalPages: Math.ceil(model.get('meta.total') / this.get('limit'))
      });
    }
  });

});
define('frontend-cp/session/users/index/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    var child0 = (function() {
      var child0 = (function() {
        return {
          meta: {
            "revision": "Ember@1.13.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 5
              },
              "end": {
                "line": 4,
                "column": 60
              }
            },
            "moduleName": "frontend-cp/session/users/index/template.hbs"
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [
            ["content","user.fullName",["loc",[null,[4,43],[4,60]]]]
          ],
          locals: [],
          templates: []
        };
      }());
      return {
        meta: {
          "revision": "Ember@1.13.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "frontend-cp/session/users/index/template.hbs"
        },
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("	");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
          return morphs;
        },
        statements: [
          ["block","link-to",["session.users.user",["get","user",["loc",[null,[4,37],[4,41]]]]],[],0,null,["loc",[null,[4,5],[4,72]]]]
        ],
        locals: ["user"],
        templates: [child0]
      };
    }());
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 5
          }
        },
        "moduleName": "frontend-cp/session/users/index/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createTextNode("List of users\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);
        return morphs;
      },
      statements: [
        ["block","each",[["get","users",["loc",[null,[3,8],[3,13]]]]],[],0,null,["loc",[null,[3,0],[5,9]]]]
      ],
      locals: [],
      templates: [child0]
    };
  }()));

});
define('frontend-cp/session/users/user/controller', ['exports', 'ember', 'frontend-cp/mixins/breadcrumbable'], function (exports, Ember, Breadcrumbable) {

  'use strict';

  exports['default'] = Ember['default'].Controller.extend(Breadcrumbable['default'], {

    /**
     * Returns a breadcrumb hash depending on what
     * data is available. Should hierarchical:
     * Organisation>User
     * @return {Object} Breadcrumb data hash
     */
    breadcrumbs: (function () {

      var hasOrganisation = this.get('model.organization.id');

      var userCrumb = {
        id: 'user',
        name: 'User',
        route: 'session.users.user.index'
      };
      var organisationCrumb = {
        id: 'organisation',
        name: 'Organisation',
        route: 'session.users.user.organisation'
      };

      var crumbs = [];

      if (hasOrganisation) {
        crumbs.push(organisationCrumb);
      }

      crumbs.push(userCrumb);

      return crumbs;
    }).property('model.organization.id')

  });

});
define('frontend-cp/session/users/user/index/route', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Route.extend({});

});
define('frontend-cp/session/users/user/index/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/users/user/index/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-user-content",[],["model",["subexpr","@mut",[["get","model",["loc",[null,[1,24],[1,29]]]]],[],[]]],["loc",[null,[1,0],[1,31]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/users/user/organisation/route', ['exports', 'frontend-cp/routes/abstract/organisation-route'], function (exports, OrganisationRoute) {

  'use strict';

  exports['default'] = OrganisationRoute['default'].extend({

    model: function model() {
      var parentModel = this.modelFor('user');
      return parentModel ? parentModel.get('organization') : {};
    }

  });

});
define('frontend-cp/session/users/user/organisation/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/users/user/organisation/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [
        ["inline","ko-organisation-content",[],["model",["subexpr","@mut",[["get","model",["loc",[null,[1,32],[1,37]]]]],[],[]]],["loc",[null,[1,0],[1,39]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/session/users/user/route', ['exports', 'frontend-cp/routes/abstract/tabbed-route'], function (exports, TabbedRoute) {

  'use strict';

  exports['default'] = TabbedRoute['default'].extend({

    model: function model(params) {
      return this.store.find('user', +params.user_id);
    },

    setupController: function setupController(controller, model) {
      this._super(controller, model);
      this.get('tab').set('label', model.get('fullName'));
    }
  });

});
define('frontend-cp/session/users/user/template', ['exports'], function (exports) {

  'use strict';

  exports['default'] = Ember.HTMLBars.template((function() {
    return {
      meta: {
        "revision": "Ember@1.13.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "frontend-cp/session/users/user/template.hbs"
      },
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","content layout--flush");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","layout__item u-1/1");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);
        morphs[1] = dom.createMorphAt(element0,3,3);
        return morphs;
      },
      statements: [
        ["inline","ko-breadcrumbs",[],["breadcrumbs",["subexpr","@mut",[["get","breadcrumbs",["loc",[null,[3,33],[3,44]]]]],[],[]],"activeBreadcrumb",["subexpr","@mut",[["get","activeBreadcrumb",["loc",[null,[3,62],[3,78]]]]],[],[]],"action","breadcrumbChange"],["loc",[null,[3,4],[3,106]]]],
        ["content","outlet",["loc",[null,[5,2],[5,12]]]]
      ],
      locals: [],
      templates: []
    };
  }()));

});
define('frontend-cp/tests/acceptance/case/create-note-test', ['ember', 'qunit', 'frontend-cp/tests/helpers/start-app'], function (Ember, qunit, startApp) {

  'use strict';

  var application = undefined;

  qunit.module('Acceptance | Case | Create note', {
    beforeEach: function beforeEach() {
      application = startApp['default']();
      login();
    },

    afterEach: function afterEach() {
      logout();
      Ember['default'].run(application, 'destroy');
    }
  });

  qunit.test('create note', function (assert) {
    assert.expect(3);

    visit('/cases/1');

    andThen(function () {
      assert.equal(currentURL(), '/cases/1');
      click('.ko-text-editor--reply .ko-text-editor-header-group__item:nth-child(2) span');
    });

    andThen(function () {
      assert.equal(find('.ko-text-editor--note').length, 1);
      find('.ql-editor:first').text('Hello Note');
      click('.button--primary');
    });

    andThen(function () {
      // @TODO this test will need filled out when the notes are actually displayed
      // on screen
      assert.equal(true, true);
    });
  });

});
define('frontend-cp/tests/acceptance/case/create-test', ['ember', 'qunit', 'frontend-cp/tests/helpers/start-app'], function (Ember, qunit, startApp) {

  'use strict';

  var application = undefined;

  qunit.module('Acceptance | Case | Create case', {
    beforeEach: function beforeEach() {
      application = startApp['default']();
      login();
    },

    afterEach: function afterEach() {
      logout();
      Ember['default'].run(application, 'destroy');
    }
  });

  //test('creating a case by visiting /cases/new', function(assert) {
  //  assert.expect(1);
  //
  //  visit('/cases/new');
  //
  //  andThen(function() {
  //    assert.equal(currentURL(), '/cases/new');
  //  });
  //});

});
define('frontend-cp/tests/acceptance/case/list-test', ['ember', 'qunit', 'frontend-cp/tests/helpers/start-app'], function (Ember, qunit, startApp) {

  'use strict';

  var application = undefined;

  qunit.module('Acceptance | Case | List', {
    beforeEach: function beforeEach() {
      application = startApp['default']();
      login();
    },

    afterEach: function afterEach() {
      logout();
      Ember['default'].run(application, 'destroy');
    }
  });

  qunit.test('number of cases listed', function (assert) {
    assert.expect(2);

    visit('/cases');

    andThen(function () {
      assert.equal(currentURL(), '/cases?page=1&view=1');
      assert.equal(find('tbody tr').length, 5);
    });
  });

});
define('frontend-cp/tests/acceptance/case/reply-with-quote-test', ['ember', 'qunit', 'frontend-cp/tests/helpers/start-app'], function (Ember, qunit, startApp) {

  'use strict';

  var application = undefined;

  qunit.module('Acceptance | Case | Reply with quote', {
    beforeEach: function beforeEach() {
      application = startApp['default']();
      login();
    },

    afterEach: function afterEach() {
      logout();
      Ember['default'].run(application, 'destroy');
    }
  });

  qunit.test('reply with quote to an existing case', function (assert) {
    assert.expect(2);

    visit('/cases/1');

    andThen(function () {
      assert.equal(currentURL(), '/cases/1');
      click('.ko-feed-item_menu__item:first.i-quote');
    });

    andThen(function () {
      var lastFeedItemContent = find('.feed__item:first .feed__content').text().trim;
      var editorContent = find('.ql-editor:first').text().trim;
      assert.equal(lastFeedItemContent, editorContent);
    });
  });

});
define('frontend-cp/tests/acceptance/login/reset-password-test', ['ember', 'qunit', 'frontend-cp/tests/helpers/start-app'], function (Ember, qunit, startApp) {

  'use strict';

  var application = undefined;

  qunit.module('Acceptance | Login | Reset password', {
    beforeEach: function beforeEach() {
      application = startApp['default']();
    },

    afterEach: function afterEach() {
      Ember['default'].run(application, 'destroy');
    }
  });

  qunit.test('user can reset their password', function (assert) {
    assert.expect(1);

    visit('/login');

    andThen(function () {
      click('a:contains("Forgot password?")');
    });

    andThen(function () {
      fillIn('input[name=email]', 'test@kayako.com');
      click('button:contains("Reset your password")');
    });

    andThen(function () {
      var successMessage = $('h6:visible')[0].innerText;
      assert.equal(successMessage, 'An email with a reset link has been sent to your inbox');
    });
  });

});
define('frontend-cp/tests/acceptance/showcase/render-test', ['ember', 'qunit', 'frontend-cp/tests/helpers/start-app'], function (Ember, qunit, startApp) {

  'use strict';

  var application = undefined;

  qunit.module('Acceptance | Showcase| Render', {
    beforeEach: function beforeEach() {
      application = startApp['default']();
      login();
    },

    afterEach: function afterEach() {
      logout();
      Ember['default'].run(application, 'destroy');
    }
  });

  qunit.test('no errors occur', function (assert) {
    assert.expect(1);

    visit('/showcase');

    andThen(function () {
      assert.equal(currentURL(), '/showcase');
    });
  });

});
define('frontend-cp/tests/acceptance/tabs/tabs-test', ['ember', 'qunit', 'frontend-cp/tests/helpers/start-app', 'frontend-cp/tests/fixtures/location/mock-location'], function (Ember, qunit, startApp, MockLocation) {

  'use strict';

  var application = undefined;

  qunit.module('Acceptance | Tabs', {
    beforeEach: function beforeEach() {
      localStorage.clear();
      sessionStorage.clear();

      application = startApp['default']();

      application.__container__.lookup('router:main').set('location', MockLocation['default'].create());
    },

    afterEach: function afterEach() {
      Ember['default'].run(application, 'destroy');
    }
  });

  qunit.test('cases open in their own tabs', function (assert) {
    assert.expect(30);

    login();

    visit('/');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 0);
    });

    visit('/styleguide');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 0);
    });

    visit('/cases/1');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 1);
      var $firstTabElement = getTabElements().eq(0);
      assert.ok(getIsActiveTabElement($firstTabElement));
    });

    visit('/cases/1/user');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 1);
      var $firstTabElement = getTabElements().eq(0);
      assert.ok(getIsActiveTabElement($firstTabElement));
    });

    visit('/cases/1');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 1);
      var $firstTabElement = getTabElements().eq(0);
      assert.ok(getIsActiveTabElement($firstTabElement));
    });

    visit('/cases/2/user');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
      var $firstTabElement = getTabElements().eq(0);
      var $secondTabElement = getTabElements().eq(1);
      assert.ok(!getIsActiveTabElement($firstTabElement));
      assert.ok(getIsActiveTabElement($secondTabElement));
    });

    visit('/cases/2');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
      var $firstTabElement = getTabElements().eq(0);
      var $secondTabElement = getTabElements().eq(1);
      assert.ok(!getIsActiveTabElement($firstTabElement));
      assert.ok(getIsActiveTabElement($secondTabElement));
    });

    visit('/cases/2/user');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
      var $firstTabElement = getTabElements().eq(0);
      var $secondTabElement = getTabElements().eq(1);
      assert.ok(!getIsActiveTabElement($firstTabElement));
      assert.ok(getIsActiveTabElement($secondTabElement));
    });

    visit('/cases/1');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
      var $firstTabElement = getTabElements().eq(0);
      var $secondTabElement = getTabElements().eq(1);
      assert.ok(getIsActiveTabElement($firstTabElement));
      assert.ok(!getIsActiveTabElement($secondTabElement));
    });

    visit('/cases/2');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
      var $firstTabElement = getTabElements().eq(0);
      var $secondTabElement = getTabElements().eq(1);
      assert.ok(!getIsActiveTabElement($firstTabElement));
      assert.ok(getIsActiveTabElement($secondTabElement));
    });

    visit('/cases/1/user');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
      var $firstTabElement = getTabElements().eq(0);
      var $secondTabElement = getTabElements().eq(1);
      assert.ok(getIsActiveTabElement($firstTabElement));
      assert.ok(!getIsActiveTabElement($secondTabElement));
    });

    visit('/cases/2/user');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
      var $firstTabElement = getTabElements().eq(0);
      var $secondTabElement = getTabElements().eq(1);
      assert.ok(!getIsActiveTabElement($firstTabElement));
      assert.ok(getIsActiveTabElement($secondTabElement));
    });

    visit('/');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
    });
  });

  qunit.test('tab label is set to case name', function (assert) {
    assert.expect(2);

    login();

    visit('/cases/1');

    andThen(function () {
      var $tabElement = getTabElements();
      assert.equal($tabElement.text().trim(), 'ERS Audit 1');
    });

    visit('/cases/2');

    andThen(function () {
      var $tabElement = getTabElements().eq(1);
      assert.equal($tabElement.text().trim(), 'ERS Audit 2');
    });
  });

  qunit.test('tabs are loaded from session storage', function (assert) {
    assert.expect(3);

    sessionStorage.setItem('tabs', JSON.stringify([{
      baseUrl: null,
      url: null,
      label: null
    }, {
      baseUrl: '/cases/1',
      url: '/cases/1/user',
      label: 'Case 1'
    }, {
      baseUrl: '/cases/2',
      url: '/cases/2/user',
      label: 'Case 2'
    }]));

    login();

    visit('/');

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);

      var $firstTabElement = $tabElements.eq(0);
      var $secondTabElement = $tabElements.eq(1);
      assert.equal($firstTabElement.text().trim(), 'Case 1');
      assert.equal($secondTabElement.text().trim(), 'Case 2');
    });
  });

  qunit.test('tabs can be closed', function (assert) {
    assert.expect(9);

    login();

    visit('/');
    visit('/cases/1');
    visit('/cases/2');
    visit('/cases/3');

    andThen(function () {
      var $activeTabElement = getActiveTabElement();
      closeTab($activeTabElement);
    });

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 2);
      var $firstTabElement = $tabElements.eq(0);
      var $secondTabElement = $tabElements.eq(1);
      assert.equal(currentURL(), '/cases/2');
      assert.ok(!getIsActiveTabElement($firstTabElement));
      assert.ok(getIsActiveTabElement($secondTabElement));
    });

    andThen(function () {
      var $firstTabElement = getTabElements().eq(0);
      closeTab($firstTabElement);
    });

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 1);
      var $firstTabElement = $tabElements.eq(0);
      assert.equal(currentURL(), '/cases/2');
      assert.ok(getIsActiveTabElement($firstTabElement));
    });

    andThen(function () {
      var $firstTabElement = getTabElements().eq(0);
      closeTab($firstTabElement);
    });

    andThen(function () {
      var $tabElements = getTabElements();
      assert.equal($tabElements.length, 0);
      assert.equal(currentURL(), '/');
    });
  });

  qunit.test('tabs remember scroll position', function (assert) {
    assert.expect(5);

    login();

    visit('/styleguide');

    andThen(function () {
      var $scrollPaneElement = getScrollPaneElement();
      scrollElement($scrollPaneElement, 10);
    });

    visit('/cases/1');

    andThen(function () {
      var $scrollPaneElement = getScrollPaneElement();
      scrollElement($scrollPaneElement, 20);
    });

    visit('/cases/2');

    andThen(function () {
      var $scrollPaneElement = getScrollPaneElement();
      scrollElement($scrollPaneElement, 30);
    });

    andThen(function () {
      var $firstTabElement = getTabElements().eq(0);
      $firstTabElement.click();
    });

    andThen(function () {
      var $scrollPaneElement = getScrollPaneElement();
      var scrollPosition = getScrollPosition($scrollPaneElement);
      assert.equal(scrollPosition, 20);
    });

    andThen(function () {
      var $secondTabElement = getTabElements().eq(1);
      $secondTabElement.click();
    });

    andThen(function () {
      var $scrollPaneElement = getScrollPaneElement();
      var scrollPosition = getScrollPosition($scrollPaneElement);
      assert.equal(scrollPosition, 30);
    });

    visit('/cases/1');

    andThen(function () {
      var $scrollPaneElement = getScrollPaneElement();
      var scrollPosition = getScrollPosition($scrollPaneElement);
      assert.equal(scrollPosition, 20);
    });

    visit('/cases/2');

    andThen(function () {
      var $scrollPaneElement = getScrollPaneElement();
      var scrollPosition = getScrollPosition($scrollPaneElement);
      assert.equal(scrollPosition, 30);
    });

    closeAllTabs();

    andThen(function () {
      var $scrollPaneElement = getScrollPaneElement();
      var scrollPosition = getScrollPosition($scrollPaneElement);
      assert.equal(scrollPosition, 10);
    });
  });

  function getTabElements() {
    return find('.nav-tabs__item');
  }

  function getActiveTabElement() {
    return getTabElements().filter('.is-active');
  }

  function getIsActiveTabElement(element) {
    return $(element).hasClass('is-active');
  }

  function getScrollPaneElement() {
    return find('.session__content > .ko-scroller');
  }

  function scrollElement(element, scrollTop) {
    $(element).scrollTop(scrollTop).scroll();
  }

  function getScrollPosition(element) {
    return $(element).scrollTop();
  }

  function closeTab(tabElement) {
    andThen(function () {
      $(tabElement).find('.nav-tabs__close').click();
    });
  }

  function closeAllTabs() {
    andThen(function () {
      var $tabElements = getTabElements();
      $tabElements.each(function (index, tabElement) {
        closeTab(tabElement);
      });
    });
  }

});
define('frontend-cp/tests/assertions/properties-equal', ['exports', 'ember', 'qunit'], function (exports, Ember, QUnit) {

  'use strict';



  exports['default'] = propertiesEqual;

  function propertiesEqual(actual, expected, message) {
    var expectedProperties = expected instanceof Ember['default'].Object ? getEmberObjectProperties(expected) : expected;
    if (!actual) {
      this.push(false, actual, expectedProperties, message);
      return;
    }
    var actualProperties = getEmberObjectProperties(actual);
    var objectsAreEqual = QUnit['default'].equiv(actualProperties, expectedProperties);
    this.push(objectsAreEqual, actualProperties, expectedProperties, message);
  }

  function getEmberObjectProperties(object) {
    return object.getProperties(Object.keys(object));
  }

});
define('frontend-cp/tests/fixtures/browser/mock-browser', ['exports'], function (exports) {

  'use strict';

  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

  var Location = function Location() {
    var url = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];

    _classCallCheck(this, Location);

    var linkElement = document.createElement('a');
    linkElement.href = url;

    this.hash = linkElement.hash;
    this.host = linkElement.host;
    this.hostname = linkElement.hostname;
    this.href = linkElement.href;
    this.origin = linkElement.origin;
    this.pathname = linkElement.pathname;
    this.port = linkElement.port;
    this.protocol = linkElement.protocol;
    this.search = linkElement.search;
  };

  var History = (function () {
    function History() {
      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      var _ref$location = _ref.location;
      var location = _ref$location === undefined ? null : _ref$location;
      var _ref$state = _ref.state;
      var state = _ref$state === undefined ? null : _ref$state;
      var _ref$title = _ref.title;
      var title = _ref$title === undefined ? null : _ref$title;

      _classCallCheck(this, History);

      this._location = location || new Location();
      this._entries = [];
      this._currentIndex = -1;

      var path = this._location.href;
      this.pushState(state, title, path);
    }

    _createClass(History, [{
      key: 'back',
      value: function back() {
        if (this._currentIndex > 0) {
          this._currentIndex--;
        }
      }
    }, {
      key: 'forward',
      value: function forward() {
        if (this._currentIndex < this._entries.length - 1) {
          this._currentIndex++;
        }
      }
    }, {
      key: 'go',
      value: function go(delta) {
        var targetIndex = this._currentIndex + delta;
        if (targetIndex >= 0 && targetIndex < this._entries.length) {
          this._currentIndex = targetIndex;
        }
      }
    }, {
      key: 'pushState',
      value: function pushState(state, title, path) {
        this._entries.length = this._currentIndex + 1;
        this._entries.push({
          state: state,
          title: title,
          path: path
        });
        this._currentIndex = this._entries.length - 1;
        var newLocation = new Location(path);
        Object.assign(this._location, newLocation);
      }
    }, {
      key: 'replaceState',
      value: function replaceState(state, title, path) {
        if (arguments.length < 3) {
          var currentItem = this._entries[this._currentIndex] || {
            state: null,
            title: null,
            path: null
          };
          if (arguments.length < 2) {
            title = currentItem.title;
          }
          if (arguments.length < 3) {
            path = currentItem.path;
          }
        }
        this._currentIndex = Math.max(0, this._currentIndex);
        this._entries[this._currentIndex] = {
          state: state,
          title: title,
          path: path
        };
        var newLocation = this._entries[this._currentIndex];
        Object.assign(this._location, newLocation);
      }
    }, {
      key: 'length',
      get: function get() {
        return this._entries.length;
      }
    }, {
      key: 'state',
      get: function get() {
        if (this._currentIndex === -1) {
          return null;
        }
        return this._entries[this._currentIndex].state;
      }
    }]);

    return History;
  })();

  exports.Location = Location;
  exports.History = History;

});
define('frontend-cp/tests/fixtures/location/mock-location', ['exports', 'ember', 'frontend-cp/tests/fixtures/browser/mock-browser'], function (exports, Ember, mock_browser) {

  'use strict';

  exports['default'] = Ember['default'].HistoryLocation.extend({
    init: function init() {
      var location = new mock_browser.Location();
      var history = new mock_browser.History({
        location: location
      });
      this.set('location', location);
      this.set('history', history);
      this._super();
      this.initState();
      this.replaceState(this.formatURL('/'));
    }
  });

});
define('frontend-cp/tests/fixtures/router/mock-router', ['exports', 'ember', 'frontend-cp/tests/fixtures/location/mock-location'], function (exports, Ember, MockLocation) {

  'use strict';

  exports['default'] = Ember['default'].Object.extend(Ember['default'].Evented, {
    init: function init() {
      this._super();
      this.set('location', this.get('location') || MockLocation['default'].create());
    },
    location: null,
    transitionTo: function transitionTo(url) {
      var _this = this;

      var location = this.get('location');
      var path = location.formatURL(url);
      var state = {
        path: path
      };
      location.get('history').pushState(state, null, path);
      return Ember['default'].RSVP.resolve().then(function () {
        _this.trigger('didTransition');
      });
    }
  });

});
define('frontend-cp/tests/fixtures/services/mock-local-store', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Service.extend({
    _localStore: null,
    _sessionStore: null,

    init: function init() {
      this._super();
      this.set('_localStore', {});
      this.set('_sessionStore', {});
    },

    getItem: function getItem(key) {
      var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var _ref$persist = _ref.persist;
      var persist = _ref$persist === undefined ? false : _ref$persist;

      var store = this.get(persist ? '_localStore' : '_sessionStore');
      return store[key];
    },

    setItem: function setItem(key, value) {
      var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

      var _ref2$persist = _ref2.persist;
      var persist = _ref2$persist === undefined ? false : _ref2$persist;

      var store = this.get(persist ? '_localStore' : '_sessionStore');
      store[key] = value;
    },

    removeItem: function removeItem(key) {
      var _ref3 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var _ref3$persist = _ref3.persist;
      var persist = _ref3$persist === undefined ? false : _ref3$persist;

      var store = this.get(persist ? '_localStore' : '_sessionStore');
      delete store[key];
    },

    clearAll: function clearAll() {
      this.set('_localStore', {});
      this.set('_sessionStore', {});
    }
  });

});
define('frontend-cp/tests/helpers/format-date', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return 'DATE %' + value + '%';
  });

});
define('frontend-cp/tests/helpers/format-html-message', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return 'HTML MESSAGE %' + value + '%';
  });

});
define('frontend-cp/tests/helpers/format-message', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return 'MESSAGE %' + value + '%';
  });

});
define('frontend-cp/tests/helpers/format-number', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return 'NUMBER %' + value + '%';
  });

});
define('frontend-cp/tests/helpers/format-relative', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return 'RELATIVE %' + value + '%';
  });

});
define('frontend-cp/tests/helpers/format-time', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return 'TIME %' + value + '%';
  });

});
define('frontend-cp/tests/helpers/intl-get', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {
    return '%' + value + '%';
  });

});
define('frontend-cp/tests/helpers/login', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Test.registerAsyncHelper('login', function () {

    localStorage.removeItem('sessionId');

    visit('/login');

    andThen(function () {
      fillIn('input[name=email]', 'test@kayako.com');
      fillIn('input[name=password]', 'setup');
      click('button:last');
    });
  });

});
define('frontend-cp/tests/helpers/logout', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Test.registerAsyncHelper('logout', function () {

    localStorage.removeItem('sessionId');
    localStorage.removeItem('tabs');
  });

});
define('frontend-cp/tests/helpers/qunit', ['exports', 'ember', 'qunit', 'ember-qunit/qunit-module', 'ember-test-helpers', 'ember-qunit/test', 'frontend-cp/tests/helpers/format-date', 'frontend-cp/tests/helpers/format-time', 'frontend-cp/tests/helpers/format-relative', 'frontend-cp/tests/helpers/format-number', 'frontend-cp/tests/helpers/format-html-message', 'frontend-cp/tests/helpers/format-message', 'frontend-cp/tests/helpers/intl-get', 'ember-truth-helpers/helpers/and', 'ember-truth-helpers/helpers/equal', 'ember-truth-helpers/helpers/not', 'ember-truth-helpers/helpers/or', 'ember-truth-helpers/utils/register-helper', 'ember-get-helper/helpers/get-glimmer', 'ember-get-helper/utils/register-helper', 'frontend-cp/tests/assertions/properties-equal'], function (exports, Ember, QUnit, qunit_module, ember_test_helpers, test, FormatDate, FormatTime, FormatRelative, FormatNumber, FormatHtmlMessage, FormatMessage, IntlGet, and, equal, not, or, register_helper, getHelper, utils__register_helper, propertiesEqualAssertion) {

  'use strict';

  exports.createModule = createModule;
  exports.moduleForComponent = moduleForComponent;
  exports.moduleForModel = moduleForModel;
  exports.moduleFor = moduleFor;

  QUnit['default'].assert.propertiesEqual = propertiesEqualAssertion['default'];

  function createModule(Constructor, name, description, callbacks) {
    var actualCallbacks = callbacks || (typeof description === 'object' ? description : {});
    var beforeCallback = actualCallbacks.setup || actualCallbacks.beforeEach;
    actualCallbacks.setup = function () {
      Ember['default'].HTMLBars._registerHelper('format-date', FormatDate['default']);
      Ember['default'].HTMLBars._registerHelper('format-time', FormatTime['default']);
      Ember['default'].HTMLBars._registerHelper('format-relative', FormatRelative['default']);
      Ember['default'].HTMLBars._registerHelper('format-number', FormatNumber['default']);
      Ember['default'].HTMLBars._registerHelper('format-html-message', FormatHtmlMessage['default']);
      Ember['default'].HTMLBars._registerHelper('format-message', FormatMessage['default']);
      Ember['default'].HTMLBars._registerHelper('intl-get', IntlGet['default']);

      register_helper.registerHelper('and', and.andHelper);
      register_helper.registerHelper('eq', equal.equalHelper);
      register_helper.registerHelper('not', not.notHelper);
      register_helper.registerHelper('or', or.orHelper);

      utils__register_helper.registerHelper('get', getHelper['default']);

      if (beforeCallback) {
        beforeCallback.apply(this, arguments);
      }
    };

    if (typeof description !== 'object' && !!description) {
      return qunit_module.createModule(Constructor, name, description, actualCallbacks);
    } else {
      return qunit_module.createModule(Constructor, name, actualCallbacks);
    }
  }

  function moduleForComponent(name, description, callbacks) {
    createModule(ember_test_helpers.TestModuleForComponent, name, description, callbacks);
  }

  function moduleForModel(name, description, callbacks) {
    createModule(ember_test_helpers.TestModuleForModel, name, description, callbacks);
  }

  function moduleFor(name, description, callbacks) {
    createModule(ember_test_helpers.TestModule, name, description, callbacks);
  }

  exports.test = test['default'];
  exports.setResolver = ember_test_helpers.setResolver;

});
define('frontend-cp/tests/helpers/resolver', ['exports', 'ember/resolver', 'frontend-cp/config/environment'], function (exports, Resolver, config) {

  'use strict';

  var resolver = Resolver['default'].create();

  resolver.namespace = {
    modulePrefix: config['default'].modulePrefix,
    podModulePrefix: config['default'].podModulePrefix
  };

  exports['default'] = resolver;

});
define('frontend-cp/tests/helpers/setup-mirage-for-integration', ['exports', 'frontend-cp/initializers/ember-cli-mirage'], function (exports, mirageInitializer) {

  'use strict';



  exports['default'] = setupMirage; //Work around until this is real
  //https://github.com/samselikoff/ember-cli-mirage/issues/183
  function setupMirage(container) {
    mirageInitializer['default'].initialize(container);
  }

  ;

});
define('frontend-cp/tests/helpers/start-app', ['exports', 'ember', 'frontend-cp/app', 'frontend-cp/config/environment', 'frontend-cp/tests/helpers/login', 'frontend-cp/tests/helpers/logout'], function (exports, Ember, Application, config, login, logout) {

  'use strict';



  exports['default'] = startApp;
  function startApp(attrs) {
    var application = undefined;

    var attributes = Ember['default'].merge({}, config['default'].APP);
    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;

    Ember['default'].run(function () {
      application = Application['default'].create(attributes);
      application.setupForTesting();
      application.injectTestHelpers();
    });

    return application;
  }

});
define('frontend-cp/tests/integration/components/ko-agent-dropdown/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-agent-dropdown', 'Integration | Component | ko agent dropdown', {
    integration: true
  });

  qunit.test('it renders', function (assert) {
    assert.expect(0);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 3,
              'column': 2
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode('\n   ');
          dom.appendChild(el0, el1);
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode('\n  ');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [['content', 'ko-agent-dropdown', ['loc', [null, [2, 3], [2, 24]]]]],
        locals: [],
        templates: []
      };
    })()));
  });

  qunit.test('the dropdown can be expanded by mouse', function (assert) {
    assert.expect(1);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 3,
              'column': 2
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode('\n    ');
          dom.appendChild(el0, el1);
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode('\n  ');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [['content', 'ko-agent-dropdown', ['loc', [null, [2, 4], [2, 25]]]]],
        locals: [],
        templates: []
      };
    })()));

    this.$('.ko-agent-dropdown__nav-new').click();

    assert.equal(this.$('ul li:first:visible').text().trim(), 'Case', 'the first menu item');
  });

});
define('frontend-cp/tests/integration/components/ko-field/text-area/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  var title = 'span:first';
  var value = 'textarea';

  var textAreaFieldValue = 'Some other value';

  ember_qunit.moduleForComponent('ko-field/text-area', 'Integration | Component | ko field text area', {
    integration: true,
    setup: function setup() {
      this.set('textAreaFieldValue', textAreaFieldValue);
    }
  });

  ember_qunit.test('renders with title and value populated', function (assert) {
    assert.expect(2);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 4,
              'column': 4
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['inline', 'ko-field/textArea', [], ['title', 'Some other field', 'value', ['subexpr', '@mut', [['get', 'textAreaFieldValue', ['loc', [null, [3, 10], [3, 28]]]]], [], []]], ['loc', [null, [1, 0], [4, 4]]]]],
        locals: [],
        templates: []
      };
    })()));

    assert.equal(this.$(title).text(), 'Some other field');
    assert.equal(this.$(value).val(), 'Some other value');
  });

  ember_qunit.test('action is fired when focus is lost', function (assert) {
    assert.expect(1);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 4,
              'column': 4
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['inline', 'ko-field/textArea', [], ['title', 'Some other field', 'onValueChange', 'assertTextAreaFieldValueChanged'], ['loc', [null, [1, 0], [4, 4]]]]],
        locals: [],
        templates: []
      };
    })()));

    this.on('assertTextAreaFieldValueChanged', function (value) {
      assert.equal(value, 'Khaleesi');
    });

    var $textArea = this.$('textarea');

    $textArea.val('Khaleesi');

    $textArea.blur();
  });

});
define('frontend-cp/tests/integration/components/ko-field/text/component-test', ['frontend-cp/tests/helpers/qunit', 'frontend-cp/lib/keycodes'], function (qunit, KeyCodes) {

  'use strict';

  var title = 'span:first';
  var value = 'input';
  var textFieldValue = 'Some other value';

  qunit.moduleForComponent('ko-field/text', 'Integration | Component | ko field text', {
    integration: true,
    setup: function setup() {
      this.set('textFieldValue', textFieldValue);
    }
  });

  qunit.test('renders with title and value populated', function (assert) {
    assert.expect(2);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 6,
              'column': 2
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode('\n    ');
          dom.appendChild(el0, el1);
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode('\n  ');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [['inline', 'ko-field/text', [], ['title', 'Some other field', 'value', ['subexpr', '@mut', [['get', 'textFieldValue', ['loc', [null, [4, 12], [4, 26]]]]], [], []]], ['loc', [null, [2, 4], [5, 6]]]]],
        locals: [],
        templates: []
      };
    })()));

    assert.equal(this.$(title).text(), 'Some other field');
    assert.equal(this.$(value).val(), 'Some other value');
  });

  qunit.test('action is fired when enter is pressed', function (assert) {
    assert.expect(1);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 4,
              'column': 4
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['inline', 'ko-field/text', [], ['title', 'Some other field', 'onValueChange', 'assertTextFieldValueChanged'], ['loc', [null, [1, 0], [4, 4]]]]],
        locals: [],
        templates: []
      };
    })()));

    this.on('assertTextFieldValueChanged', function (value) {
      return assert.deepEqual(value, 'Khaleesi');
    });

    var $inputField = this.$(value);

    $inputField.val('Khaleesi');
    this.$('div:first').trigger(new $.Event('keypress', { keyCode: KeyCodes.enter }));
  });

});
define('frontend-cp/tests/integration/components/ko-profile/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  var avatar = '.ko-profile__avatar:first';
  var name = '.ko-profile__name';
  var position = '.ko-profile__position';
  var company = '.ko-profile__company';
  var place = '.ko-profile__place';
  var time = '.ko-profile__time';
  var openCases = '.ko-profile__open-cases';
  var followToggle = '.ko-profile__follow';
  var profileDetail = '.ko-profile__detail';

  var profile = {
    avatar: 'http://i.imgur.com/C9QgICy.jpg',
    name: 'Audrey Raines',
    position: 'Systems engineer',
    company: 'Cisco systems',
    place: 'Leeds, United Kingdom',
    time: '9:45am, Wednesday',
    openCases: '5'
  };

  qunit.moduleForComponent('ko-profile', 'Integration | Component | ko profile', {
    integration: true,
    setup: function setup() {
      this.set('profile', profile);
      this.render(Ember.HTMLBars.template((function () {
        return {
          meta: {
            'revision': 'Ember@1.13.6',
            'loc': {
              'source': null,
              'start': {
                'line': 1,
                'column': 0
              },
              'end': {
                'line': 6,
                'column': 4
              }
            }
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode('\n      ');
            dom.appendChild(el0, el1);
            var el1 = dom.createComment('');
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode('\n    ');
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [['inline', 'ko-profile', [], ['profile', ['subexpr', '@mut', [['get', 'profile', ['loc', [null, [3, 16], [3, 23]]]]], [], []], 'showProfile', 'showProfile', 'followToggle', 'followToggle'], ['loc', [null, [2, 6], [5, 8]]]]],
          locals: [],
          templates: []
        };
      })()));
    }
  });

  qunit.test('renders avatar and sets it according to model/parameters passed in', function (assert) {

    assert.expect(2);

    var $avatar = this.$(avatar);

    assert.equal($avatar.length, 1, 'avatar is rendered');

    assert.equal($avatar.attr('src'), profile.avatar, 'avatar src attribute is set');
  });

  qunit.test('renders name and sets it according to model/parameters passed in', function (assert) {
    assert.expect(2);

    var $name = this.$(name);

    assert.equal($name.length, 1, 'name is rendered');

    assert.equal($name.text(), 'Audrey Raines', 'name is set');
  });

  qunit.test('renders position and sets it according to model/parameters passed in', function (assert) {
    assert.expect(2);

    var $position = this.$(position);

    assert.equal($position.length, 1, 'position is rendered');

    assert.equal($position.text(), 'MESSAGE %%generic.profile.position%%', 'position is set');
  });

  qunit.test('renders company and sets it according to model/parameters passed in', function (assert) {
    assert.expect(2);

    var $company = this.$(company);

    assert.equal($company.length, 1, 'company is rendered');

    assert.equal($company.text(), 'Cisco systems', 'company is set');
  });

  qunit.test('renders place and sets it according to model/parameters passed in', function (assert) {
    assert.expect(2);

    var $place = this.$(place);

    assert.equal($place.length, 1, 'place is rendered');

    assert.equal($place.text(), 'MESSAGE %%generic.profile.place%%', 'place is set');
  });

  qunit.test('renders time and sets it according to model/parameters passed in', function (assert) {
    assert.expect(2);

    var $time = this.$(time);

    assert.equal($time.length, 1, 'time is rendered');

    assert.equal($time.text(), 'MESSAGE %%generic.profile.time%%', 'time is set');
  });

  qunit.test('renders openCases and sets it according to model/parameters passed in', function (assert) {
    assert.expect(2);

    var $openCases = this.$(openCases);

    assert.equal($openCases.length, 1, 'openCases is rendered');

    assert.equal($openCases.text(), 'MESSAGE %%generic.profile.openCases%%', 'openCases is set');
  });

  qunit.test('clicking on follow/unfollow triggers followToggle action', function (assert) {
    assert.expect(2);

    var $followToggle = this.$(followToggle);

    assert.equal($followToggle.length, 1, 'follow/unfollow button/link is rendered');

    this.set('followToggle', 'followToggle');

    this.on('followToggle', function (a) {
      assert.deepEqual(a, profile, 'clicking follow/unfollow fires action passing profile');
    });

    $followToggle.click();
  });

  qunit.test('clicking on profile detail button/link triggers profileDetail action', function (assert) {
    assert.expect(2);

    var $profileDetail = this.$(profileDetail);

    assert.equal($profileDetail.length, 1, 'profile detail button/link is rendered');

    this.set('showProfile', 'showProfile');

    this.on('showProfile', function (a) {
      assert.deepEqual(a, profile, 'clicking follow/unfollow fires action passing profile');
    });

    $profileDetail.click();
  });

});
define('frontend-cp/tests/integration/components/ko-scroller/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-scroller', 'Integration | Component | ko scroller', {
    integration: true
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Set any properties with this.set('myProperty', 'value');
    // Handle any actions with this.on('myAction', function(val) { ... });

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 1,
              'column': 15
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['content', 'ko-scroller', ['loc', [null, [1, 0], [1, 15]]]]],
        locals: [],
        templates: []
      };
    })()));

    assert.equal(this.$().text().trim(), '');

    // Template block usage:
    this.render(Ember.HTMLBars.template((function () {
      var child0 = (function () {
        return {
          meta: {
            'revision': 'Ember@1.13.6',
            'loc': {
              'source': null,
              'start': {
                'line': 2,
                'column': 4
              },
              'end': {
                'line': 4,
                'column': 4
              }
            }
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode('      template block text\n');
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();

      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 5,
              'column': 2
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode('\n');
          dom.appendChild(el0, el1);
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode('  ');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [['block', 'ko-scroller', [], [], 0, null, ['loc', [null, [2, 4], [4, 20]]]]],
        locals: [],
        templates: [child0]
      };
    })()));

    assert.equal(this.$().text().trim(), 'template block text');
  });

});
define('frontend-cp/tests/integration/components/ko-search/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  var aKeyPressEvent = new $.Event('keyup', { keyCode: 66 });

  ember_qunit.moduleForComponent('ko-search', 'Integration | Component | ko search', {
    integration: true
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(1);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 3,
              'column': 2
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode('\n    ');
          dom.appendChild(el0, el1);
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode('\n  ');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [['content', 'ko-search', ['loc', [null, [2, 4], [2, 17]]]]],
        locals: [],
        templates: []
      };
    })()));

    assert.equal(this.$().text().trim(), '');
  });

  ember_qunit.test('it fires the onSearchTermChange action with the content of the input field when keys are pressed', function (assert) {
    assert.expect(1);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 3,
              'column': 4
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['inline', 'ko-search', [], ['onSearchTermChange', 'assertActionFiredWithSearchTerm'], ['loc', [null, [1, 0], [3, 4]]]]],
        locals: [],
        templates: []
      };
    })()));

    this.on('assertActionFiredWithSearchTerm', function (value) {
      assert.equal(value, 'a');
    });

    var searchInput = this.$('input');
    searchInput.val('a');
    searchInput.trigger(aKeyPressEvent);
  });

  ember_qunit.test('it fires the onClick action when clicked', function (assert) {
    assert.expect(1);

    this.render(Ember.HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 3,
              'column': 4
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['inline', 'ko-search', [], ['onClick', 'assertActionFired'], ['loc', [null, [1, 0], [3, 4]]]]],
        locals: [],
        templates: []
      };
    })()));

    this.on('assertActionFired', function (value) {
      assert.ok(true, 'action fired');
    });

    this.$('input').click();
  });

});
define('frontend-cp/tests/integration/components/ko-session-widgets/component-test', ['frontend-cp/tests/helpers/qunit', 'frontend-cp/tests/helpers/setup-mirage-for-integration', 'ember'], function (qunit, mirage, Ember) {

  'use strict';

  qunit.moduleForComponent('ko-session-widgets', 'Integration | Component | ko session widgets', {
    integration: true,
    setup: function setup() {
      mirage['default'](this.containter);
      localStorage.setItem('sessionId', '"pPW6tnOyJG6TmWCVea175d1bfc5dbf073a89ffeb6a2a198c61aae941Aqc7ahmzw8a"');
    },
    teardown: function teardown() {
      localStorage.removeItem('sessionId');
    }
  });

  qunit.test('it renders', function (assert) {
    assert.expect(1);

    this.render(Ember['default'].HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 3,
              'column': 2
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode('\n    ');
          dom.appendChild(el0, el1);
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode('\n  ');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [['content', 'ko-session-widgets', ['loc', [null, [2, 4], [2, 26]]]]],
        locals: [],
        templates: []
      };
    })()));

    Ember['default'].run.later(this, function () {
      assert.equal(this.$('div.flag__body').text().trim(), 'John Doe');
    });
  });

});
define('frontend-cp/tests/integration/components/ko-tabs/component-test', ['ember-qunit', 'ember-truth-helpers/helpers/equal', 'ember-truth-helpers/utils/register-helper', 'ember'], function (ember_qunit, equal, register_helper, Ember) {

  'use strict';

  ember_qunit.moduleForComponent('/ko-tabs', 'Integration | Component | ko tabs', {
    integration: true,
    beforeEach: function beforeEach() {
      register_helper.registerHelper('eq', equal.equalHelper);
    }
  });

  ember_qunit.test('it renders an empty component for no items', function (assert) {
    assert.expect(1);

    this.render(Ember['default'].HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 1,
              'column': 11
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['content', 'ko-tabs', ['loc', [null, [1, 0], [1, 11]]]]],
        locals: [],
        templates: []
      };
    })()));

    assert.equal(this.$().text().trim(), '');
  });

  ember_qunit.test('it renders tabs for each item', function (assert) {
    var _this = this;

    assert.expect(9);

    var tabs = [{
      url: '/case/1',
      label: 'Case 1'
    }, {
      url: '/case/2',
      label: 'Case 2'
    }];
    this.set('tabs', tabs);

    this.render(Ember['default'].HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 1,
              'column': 21
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['inline', 'ko-tabs', [], ['tabs', ['subexpr', '@mut', [['get', 'tabs', ['loc', [null, [1, 15], [1, 19]]]]], [], []]], ['loc', [null, [1, 0], [1, 21]]]]],
        locals: [],
        templates: []
      };
    })()));

    var $tabElements = this.$('.nav-tabs__item');
    assert.equal($tabElements.length, 2);

    var $firstItem = $tabElements.eq(0);
    assert.equal($firstItem.find('.nav-tabs__label').text().trim(), 'Case 1');
    assert.ok(!$firstItem.hasClass('is-active'));

    var $secondItem = $tabElements.eq(1);
    assert.equal($secondItem.find('.nav-tabs__label').text().trim(), 'Case 2');
    assert.ok(!$secondItem.hasClass('is-active'));

    var extraTab = {
      url: '/case/3',
      label: 'Case 3'
    };

    Ember['default'].run(function () {
      _this.tabs.pushObject(extraTab);
    });

    $tabElements = this.$('.nav-tabs__item');
    assert.equal($tabElements.length, 3);

    var $thirdItem = $tabElements.eq(2);
    assert.equal($thirdItem.find('.nav-tabs__label').text().trim(), 'Case 3');
    assert.ok(!$thirdItem.hasClass('is-active'));

    Ember['default'].run(function () {
      _this.tabs.removeObject(extraTab);
    });

    $tabElements = this.$('.nav-tabs__item');
    assert.equal($tabElements.length, 2);
  });

  ember_qunit.test('tabs can be selected', function (assert) {
    assert.expect(6);

    var tabs = [{
      url: '/case/1',
      label: 'Case 1'
    }, {
      url: '/case/2',
      label: 'Case 2'
    }];
    this.set('tabs', tabs);
    this.set('selectedTab', tabs[0]);

    this.render(Ember['default'].HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 1,
              'column': 45
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['inline', 'ko-tabs', [], ['tabs', ['subexpr', '@mut', [['get', 'tabs', ['loc', [null, [1, 15], [1, 19]]]]], [], []], 'selectedTab', ['subexpr', '@mut', [['get', 'selectedTab', ['loc', [null, [1, 32], [1, 43]]]]], [], []]], ['loc', [null, [1, 0], [1, 45]]]]],
        locals: [],
        templates: []
      };
    })()));

    var $tabElements = this.$('.nav-tabs__item');
    var $firstItem = $tabElements.eq(0);
    var $secondItem = $tabElements.eq(1);

    assert.ok($firstItem.hasClass('is-active'));
    assert.ok(!$secondItem.hasClass('is-active'));

    this.set('selectedTab', tabs[1]);

    assert.ok(!$firstItem.hasClass('is-active'));
    assert.ok($secondItem.hasClass('is-active'));

    this.set('selectedTab', null);

    assert.ok(!$firstItem.hasClass('is-active'));
    assert.ok(!$secondItem.hasClass('is-active'));
  });

  ember_qunit.test('tabs can be closed', function (assert) {
    assert.expect(8);

    var firstTab = {
      url: '/case/1',
      label: 'Case 1'
    };
    var secondTab = {
      url: '/case/2',
      label: 'Case 2'
    };
    var thirdTab = {
      url: '/case/3',
      label: 'Case 3'
    };
    var fourthTab = {
      url: '/case/3',
      label: 'Case 4'
    };
    var tabs = [firstTab, secondTab, thirdTab, fourthTab];
    this.set('tabs', tabs);
    this.set('selectedTab', secondTab);

    this.render(Ember['default'].HTMLBars.template((function () {
      return {
        meta: {
          'revision': 'Ember@1.13.6',
          'loc': {
            'source': null,
            'start': {
              'line': 1,
              'column': 0
            },
            'end': {
              'line': 1,
              'column': 45
            }
          }
        },
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment('');
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [['inline', 'ko-tabs', [], ['tabs', ['subexpr', '@mut', [['get', 'tabs', ['loc', [null, [1, 15], [1, 19]]]]], [], []], 'selectedTab', ['subexpr', '@mut', [['get', 'selectedTab', ['loc', [null, [1, 32], [1, 43]]]]], [], []]], ['loc', [null, [1, 0], [1, 45]]]]],
        locals: [],
        templates: []
      };
    })()));

    var $tabElements = this.$('.nav-tabs__item');
    var $firstItem = $tabElements.eq(0);
    var $secondItem = $tabElements.eq(1);
    var $thirdItem = $tabElements.eq(2);
    var $fourthItem = $tabElements.eq(3);

    getTabCloseButton($fourthItem).click();

    assert.deepEqual(this.get('tabs'), [firstTab, secondTab, thirdTab]);
    assert.equal(this.get('selectedTab'), secondTab);

    getTabCloseButton($secondItem).click();

    assert.deepEqual(this.get('tabs'), [firstTab, thirdTab]);
    assert.equal(this.get('selectedTab'), thirdTab);

    getTabCloseButton($thirdItem).click();

    assert.deepEqual(this.get('tabs'), [firstTab]);
    assert.equal(this.get('selectedTab'), firstTab);

    getTabCloseButton($firstItem).click();
    assert.deepEqual(this.get('tabs'), []);
    assert.equal(this.get('selectedTab'), null);
  });

  function getTabCloseButton(tabElement) {
    return $(tabElement).find('.nav-tabs__close');
  }

});
define('frontend-cp/tests/integration/components/ko-viewers/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  var firstAvatar = 'img:first';
  var lastAvatar = 'img:last';
  var firstProfile = 'li li:first';
  var lastProfile = 'li li:last';

  var profileName = '.ko-profile__name';
  var profilePosition = '.ko-profile__position';
  var profileCompany = '.ko-profile__company';
  var profilePlace = '.ko-profile__place';
  var profileTime = '.ko-profile__time';
  var profileOpenCases = '.ko-profile__open-cases';
  var followToggle = '.ko-profile__follow';
  var profileDetail = '.ko-profile__detail';

  var viewers = [{
    isTyping: true,
    wasTyping: false,
    hidden: false,
    inactive: false,
    profile: {
      avatar: 'http://i.imgur.com/C9QgICy.jpg',
      name: 'John Smith',
      position: 'Systems engineer',
      company: 'Cisco systems',
      place: 'Leeds, United Kingdom',
      time: '9:45am, Wednesday',
      openCases: '5'
    }
  }, {
    isTyping: false,
    wasTyping: true,
    hidden: false,
    inactive: false,
    profile: {
      avatar: 'http://i.imgur.com/C9QgICy.jpg',
      name: 'Audrey Raines',
      position: 'Systems engineer',
      company: 'Cisco systems',
      place: 'Leeds, United Kingdom',
      time: '9:45am, Wednesday',
      openCases: '5'
    }
  }, {
    isTyping: false,
    wasTyping: false,
    hidden: true,
    inactive: true,
    profile: {
      avatar: 'http://i.imgur.com/C9QgICy.jpg',
      name: 'Jane Smith',
      position: 'Systems engineer',
      company: 'Cisco',
      place: 'Leeds, United Kingdom',
      time: '9:45am, Wednesday',
      openCases: '5'
    }
  }];

  qunit.moduleForComponent('ko-viewers', 'Integration | Component | ko viewers', {
    integration: true,
    setup: function setup() {

      this.set('viewers', viewers);

      this.render(Ember.HTMLBars.template((function () {
        return {
          meta: {
            'revision': 'Ember@1.13.6',
            'loc': {
              'source': null,
              'start': {
                'line': 1,
                'column': 0
              },
              'end': {
                'line': 4,
                'column': 4
              }
            }
          },
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode('\n      ');
            dom.appendChild(el0, el1);
            var el1 = dom.createComment('');
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode('\n      ');
            dom.appendChild(el0, el1);
            var el1 = dom.createComment('');
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode('\n    ');
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
            return morphs;
          },
          statements: [['inline', 'ko-context-modal', [], ['floating', true], ['loc', [null, [2, 6], [2, 40]]]], ['inline', 'ko-viewers', [], ['viewers', ['subexpr', '@mut', [['get', 'viewers', ['loc', [null, [3, 27], [3, 34]]]]], [], []]], ['loc', [null, [3, 6], [3, 36]]]]],
          locals: [],
          templates: []
        };
      })()));
    }
  });

  qunit.test('renders first avatar correctly', function (assert) {

    assert.expect(2);

    var $avatar = this.$(firstAvatar);

    assert.equal($avatar.length, 1, 'first avatar is rendered');

    assert.equal($avatar.attr('src'), viewers[0].profile.avatar, 'correct src attribute is set');
  });

  qunit.test('renders last avatar correctly', function (assert) {

    assert.expect(2);

    var $avatar = this.$(lastAvatar);

    assert.equal($avatar.length, 1, 'last avatar is rendered');

    assert.equal($avatar.attr('src'), viewers[2].profile.avatar, 'correct src attribute is set');
  });

  qunit.test('when clicked on first avatar, first/selected profile name appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $profileName = this.$(profileName);

    assert.equal($profileName.length, 1, 'profile name exists');

    assert.equal($profileName.text(), 'John Smith', 'profile name is visible in the popover');
  });

  qunit.test('when clicked on last avatar, last/selected profile name appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(lastProfile);

    assert.equal($profile.length, 1, 'last profile is rendered');

    $profile.click();

    var $profileName = this.$(profileName);

    assert.equal($profileName.length, 1, 'profile name exists');

    assert.equal($profileName.text(), 'Jane Smith', 'profile name is visible in the popover');
  });

  qunit.test('when clicked on first avatar, first/selected profile position appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $profilePosition = this.$(profilePosition);

    assert.equal($profilePosition.length, 1, 'profile position exists');

    assert.equal($profilePosition.text(), 'MESSAGE %%generic.profile.position%%', 'profile position is visible in the popover');
  });

  qunit.test('when clicked on last avatar, last/selected profile position appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(lastProfile);

    assert.equal($profile.length, 1, 'last profile is rendered');

    $profile.click();

    var $profilePosition = this.$(profilePosition);

    assert.equal($profilePosition.length, 1, 'profile position exists');

    assert.equal($profilePosition.text(), 'MESSAGE %%generic.profile.position%%', 'profile position is visible in the popover');
  });

  qunit.test('when clicked on first avatar, first/selected profile company appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $profileCompany = this.$(profileCompany);

    assert.equal($profileCompany.length, 1, 'profile company exists');

    assert.equal($profileCompany.text(), 'Cisco systems', 'profile company is visible in the popover');
  });

  qunit.test('when clicked on last avatar, last/selected profile company appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(lastProfile);

    assert.equal($profile.length, 1, 'last profile is rendered');

    $profile.click();

    var $profileCompany = this.$(profileCompany);

    assert.equal($profileCompany.length, 1, 'profile company exists');

    assert.equal($profileCompany.text(), 'Cisco', 'profile company is visible in the popover');
  });

  qunit.test('when clicked on first avatar, first/selected profile place appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $profilePlace = this.$(profilePlace);

    assert.equal($profilePlace.length, 1, 'profile place exists');

    assert.equal($profilePlace.text(), 'MESSAGE %%generic.profile.place%%', 'profile place is visible in the popover');
  });

  qunit.test('when clicked on last avatar, last/selected profile place appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(lastProfile);

    assert.equal($profile.length, 1, 'last profile is rendered');

    $profile.click();

    var $profilePlace = this.$(profilePlace);

    assert.equal($profilePlace.length, 1, 'profile place exists');

    assert.equal($profilePlace.text(), 'MESSAGE %%generic.profile.place%%', 'profile place is visible in the popover');
  });

  qunit.test('when clicked on first avatar, first/selected profile time appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $profileTime = this.$(profileTime);

    assert.equal($profileTime.length, 1, 'profile time exists');

    assert.equal($profileTime.text(), 'MESSAGE %%generic.profile.time%%', 'profile time is visible in the popover');
  });

  qunit.test('when clicked on last avatar, last/selected profile time appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(lastProfile);

    assert.equal($profile.length, 1, 'last profile is rendered');

    $profile.click();

    var $profileTime = this.$(profileTime);

    assert.equal($profileTime.length, 1, 'profile time exists');

    assert.equal($profileTime.text(), 'MESSAGE %%generic.profile.time%%', 'profile time is visible in the popover');
  });

  qunit.test('when clicked on first avatar, first/selected profile open cases appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $profileOpenCases = this.$(profileOpenCases);

    assert.equal($profileOpenCases.length, 1, 'profile open cases exists');

    assert.equal($profileOpenCases.text(), 'MESSAGE %%generic.profile.openCases%%', 'profile open cases is visible in the popover');
  });

  qunit.test('when clicked on last avatar, last/selected profile open cases appears in the popover', function (assert) {

    assert.expect(3);

    var $profile = this.$(lastProfile);

    assert.equal($profile.length, 1, 'last profile is rendered');

    $profile.click();

    var $profileOpenCases = this.$(profileOpenCases);

    assert.equal($profileOpenCases.length, 1, 'profile open cases exists');

    assert.equal($profileOpenCases.text(), 'MESSAGE %%generic.profile.openCases%%', 'profile open cases is visible in the popover');
  });

  qunit.test('when clicked on first avatar, and then clicked on follow/unfollow triggers followToggle action', function (assert) {

    assert.expect(2);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $followToggle = this.$(followToggle);

    assert.equal($followToggle.length, 1, 'follow/unfollow button/link is rendered');

    // TODO: figure out how to set context on nested components and catch actions there (it is already tested in ko-profile and works)

    // this.set('followToggle', 'followToggle');

    // this.on('followToggle', a => {
    //   assert.deepEqual(a, viewers[0].profile, 'clicking follow/unfollow fires action passing profile');
    // });

    // $followToggle.click();
  });

  qunit.test('when clicked on last avatar, and then clicked on follow/unfollow triggers followToggle action', function (assert) {

    assert.expect(2);

    var $profile = this.$(lastProfile);

    assert.equal($profile.length, 1, 'last profile is rendered');

    $profile.click();

    var $followToggle = this.$(followToggle);

    assert.equal($followToggle.length, 1, 'follow/unfollow button/link is rendered');

    // TODO: figure out how to set context on nested components and catch actions there (it is already tested in ko-profile and works)

    // this.set('followToggle', 'followToggle');

    // this.on('followToggle', a => {
    //   assert.deepEqual(a, viewers[0].profile, 'clicking follow/unfollow fires action passing profile');
    // });

    // $followToggle.click();
  });

  qunit.test('when clicked on first avatar, and then clicked on profile detail button/link triggers profileDetail action', function (assert) {

    assert.expect(2);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $profileDetail = this.$(profileDetail);

    assert.equal($profileDetail.length, 1, 'profile detail button/link is rendered');

    // TODO: figure out how to set context on nested components and catch actions there (it is already tested in ko-profile and works)

    // this.set('showProfile', 'showProfile');

    // this.on('showProfile', a => {
    //   assert.deepEqual(a, profile, 'clicking follow/unfollow fires action passing profile');
    // });

    // $profileDetail.click();
  });

  qunit.test('when clicked on last avatar, and then clicked on profile detail button/link triggers profileDetail action', function (assert) {

    assert.expect(2);

    var $profile = this.$(lastProfile);

    assert.equal($profile.length, 1, 'last profile is rendered');

    $profile.click();

    var $profileDetail = this.$(profileDetail);

    assert.equal($profileDetail.length, 1, 'profile detail button/link is rendered');

    // TODO: figure out how to set context on nested components and catch actions there (it is already tested in ko-profile and works)

    // this.set('showProfile', 'showProfile');

    // this.on('showProfile', a => {
    //   assert.deepEqual(a, profile, 'clicking follow/unfollow fires action passing profile');
    // });

    // $profileDetail.click();
  });

  qunit.test('when popover is open, clicking somewhere else makes selectedViewer stay the same', function (assert) {

    assert.expect(3);

    var $profile = this.$(firstProfile);

    assert.equal($profile.length, 1, 'first profile is rendered');

    $profile.click();

    var $profileName = this.$(profileName);

    assert.equal($profileName.text(), 'John Smith', 'profile name exists');

    $profile = this.$(firstProfile);

    $profile.click();

    assert.equal($profileName.text(), 'John Smith', 'profile name stays the same');
  });

  qunit.test('by default popover is not visible', function (assert) {

    assert.expect(1);

    var $profileName = this.$(profileName);

    assert.equal($profileName.text(), '', 'profile name does not exist');
  });

});
define('frontend-cp/tests/test-helper', ['frontend-cp/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {

	'use strict';

	ember_qunit.setResolver(resolver['default']);

});
define('frontend-cp/tests/unit/adapters/application-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleFor('adapter:application', 'ApplicationAdapter', {
    // Specify the other units that are required for this test.
    // needs: ['serializer:foo']
  });

  // Replace this with your real tests.
  qunit.test('it exists', function (assert) {
    var adapter = this.subject();
    assert.ok(adapter);
  });

});
define('frontend-cp/tests/unit/adapters/private-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleFor('adapter:private', 'PrivateAdapter', {
    // Specify the other units that are required for this test.
    // needs: ['serializer:foo']
  });

  // Replace this with your real tests.
  qunit.test('it exists', function (assert) {
    var adapter = this.subject();
    assert.ok(adapter);
  });

});
define('frontend-cp/tests/unit/components/ko-add-participants-context-menu/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-add-participants-context-menu', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
    needs: ['component:ko-context-modal-item', 'component:ko-add-participants-popover', 'component:ko-add-user-popover']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-add-participants-popover/component-test', ['ember', 'frontend-cp/tests/helpers/qunit'], function (Ember, qunit) {

  'use strict';

  var component = undefined;
  var firstListItem = 'li:first';
  var x = 'i.i--close';

  var copyInParticipants = [{ image: 'http://lorempixel.com/48/48/people/', name: 'Jessica Myers', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Nina Jessicon', company: 'Stelco Steel Inc.', email: 'nina@stelco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Rebecca Sesam', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Jessica Myers', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'John Doe', company: 'Cisco Systems Inc.', email: 'johndoe@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Janine Smith', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'John Smith', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Kebab Soup', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }, { image: 'http://lorempixel.com/48/48/people/', name: 'Peter Myers', company: 'Cisco Systems Inc.', email: 'jessica@cisco.com' }];

  qunit.moduleForComponent('ko-add-participants-popover', {
    needs: ['component:ko-checkbox'],
    setup: function setup() {
      component = this.subject();
      component.set('results', copyInParticipants);
      component.set('contextModalId', 'addParticipants');
    },
    teardown: function teardown() {}
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    assert.equal(component._state, 'preRender');

    this.render();

    assert.equal(component._state, 'inDOM');
  });

  qunit.test('it does not show results when initialized', function (assert) {
    assert.expect(1);

    this.render();

    assert.equal(component.showResults, false, 'it doesnt show any results at initialization');
  });

  qunit.test('upon keypress/typing results start to show', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.send('whenKeyIsPressed');
    });

    assert.equal(component.showResults, true, 'it shows results');
  });

  qunit.test('searching by name works', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('showResults', true);
    });

    Ember['default'].run(function () {
      component.set('searchTerm', 'Peter');
    });

    Ember['default'].run(function () {
      component.send('query');
    });

    assert.equal(component.filteredParticipants[0].name, 'Peter Myers', 'only contains filtered participants');
  });

  qunit.test('searching by company works', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('showResults', true);
    });

    Ember['default'].run(function () {
      component.set('searchTerm', 'Stelco');
    });

    Ember['default'].run(function () {
      component.send('query');
    });

    assert.equal(component.filteredParticipants[0].company, 'Stelco Steel Inc.', 'only contains filtered participants');
  });

  qunit.test('searching by email works', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('showResults', true);
    });

    Ember['default'].run(function () {
      component.set('searchTerm', 'nina@stelco.com');
    });

    Ember['default'].run(function () {
      component.send('query');
    });

    assert.equal(component.filteredParticipants[0].email, 'nina@stelco.com', 'only contains filtered participants');
  });

  qunit.test('clicking on search result adds it to selected participants list', function (assert) {
    var _this = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('showResults', true);
    });

    Ember['default'].run(function () {
      component.set('searchTerm', 'nina@stelco.com');
    });

    Ember['default'].run(function () {
      component.send('query');
    });

    Ember['default'].run(function () {
      _this.$(firstListItem).click();
    });

    assert.equal(component.selectedParticipants[0].name, 'Nina Jessicon', 'participant has been selected');
  });

  qunit.test('clicking on x removes participant from selected list', function (assert) {
    var _this2 = this;

    assert.expect(2);

    this.render();

    Ember['default'].run(function () {
      component.set('showResults', true);
    });

    Ember['default'].run(function () {
      component.set('searchTerm', 'nina@stelco.com');
    });

    Ember['default'].run(function () {
      component.send('query');
    });

    Ember['default'].run(function () {
      _this2.$(firstListItem).click();
    });

    assert.equal(component.selectedParticipants[0].name, 'Nina Jessicon', 'participant has been selected');

    Ember['default'].run(function () {
      _this2.$(x).click();
    });

    assert.equal(component.selectedParticipants.length, 0, 'participant has been removed from selected list');
  });

});
define('frontend-cp/tests/unit/components/ko-add-user-popover/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-add-user-popover', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-address/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-address', 'Unit | Component | ko address', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-admin-card-team/component-test', ['ember', 'frontend-cp/tests/helpers/qunit'], function (Ember, qunit) {

  'use strict';

  var component = undefined;

  var people = new Ember['default'].A([{
    avatar: {
      url: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }
  }, {
    avatar: {
      url: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }
  }, {
    avatar: {
      url: 'https://s-media-cache-ak0.pinimg.com/736x/ca/c1/18/cac1189a8df5498d17ef09d65ad0f698.jpg'
    }
  }]);

  qunit.moduleForComponent('ko-admin-card-team', {
    needs: ['ko-admin-selectable-card'],
    integration: true,

    setup: function setup() {
      component = this.subject();
    },
    teardown: function teardown() {}
  });

  qunit.test('it correctly calculates number of members', function (assert) {
    component.set('members', people);
    assert.equal(component.get('memberCount'), people.length);
  });

  qunit.test('it doesn\'t pluralize member type if only 1 member is present', function (assert) {
    component.set('members', [people.firstObject]);
    component.set('memberType', 'Agent');

    assert.equal(component.get('pluralizedMemberType'), 'Agent');
  });

  qunit.test('it pluralizes member type if there are 3 members present', function (assert) {
    component.set('members', people);
    component.set('memberType', 'Agent');

    assert.equal(component.get('pluralizedMemberType'), 'Agents');
  });

  qunit.test('it renders a member', function (assert) {
    component.set('members', people);

    this.render();

    assert.equal(component._state, 'inDOM');
    assert.ok(this.$('.ko-avatar__image').length);
  });

});
define('frontend-cp/tests/unit/components/ko-admin-card-user/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-admin-card-user', 'Unit | Component | ko admin card user', {
    // Specify the other units that are required for this test
    needs: ['component:ko-admin-selectable-card', 'component:ko-avatar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-admin-selectable-card/component-test', ['ember', 'frontend-cp/tests/helpers/qunit'], function (Ember, qunit) {

  'use strict';

  var component = undefined,
      checkbox = '.ko-checkbox__checkbox';

  qunit.moduleForComponent('ko-admin-selectable-card', {
    needs: ['component:ko-checkbox'],
    integration: true,

    setup: function setup() {
      component = this.subject();
    },
    teardown: function teardown() {}
  });

  qunit.test('toggling isSelected property to true fires selected action', function (assert) {
    assert.expect(1);

    var modelId = 1;

    var targetObject = {
      componentWasSelectedAction: function componentWasSelectedAction(id) {
        assert.equal(id, modelId);
      }
    };

    Ember['default'].run(function () {
      component.set('selectableModelId', modelId);
      component.set('onComponentWasSelectedAction', 'componentWasSelectedAction');
      component.set('targetObject', targetObject);
      component.set('isSelected', true);
    });
  });

  qunit.test('toggling isSelected property to true fires selected action', function (assert) {
    assert.expect(1);

    var modelId = 2;

    var targetObject = {
      componentWasDeselectedAction: function componentWasDeselectedAction(id) {
        assert.equal(id, modelId);
      }
    };

    Ember['default'].run(function () {
      component.set('selectableModelId', modelId);
      component.set('onComponentWasDeselectedAction', 'componentWasDeselectedAction');
      component.set('targetObject', targetObject);
      component.set('isSelected', true);
      component.set('isSelected', false);
    });
  });

  qunit.test('toggling checkbox fires action', function (assert) {
    assert.expect(1);

    var modelId = 1;

    var targetObject = {
      componentWasSelectedAction: function componentWasSelectedAction(id) {
        assert.equal(id, modelId);
      }
    };

    this.render();

    Ember['default'].run(function () {
      component.set('selectableModelId', modelId);
      component.set('onComponentWasSelectedAction', 'componentWasSelectedAction');
      component.set('targetObject', targetObject);
    });

    this.$(checkbox).click();
  });

  qunit.test('setting inactive state adds class', function (assert) {
    Ember['default'].run(function () {
      component.set('isActive', false);
    });

    this.render();
    assert.ok(this.$().hasClass('ko-admin-selectable-card--inactive'));
  });

});
define('frontend-cp/tests/unit/components/ko-avatar/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-avatar', 'Unit | Component | ko avatar', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-case-metric/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-case-metric', 'Unit | Component | ko case metric', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-checkbox/component-test', ['ember', 'frontend-cp/tests/helpers/qunit', 'frontend-cp/lib/keycodes'], function (Ember, qunit, KeyCodes) {

  'use strict';

  var component = undefined;
  var checkbox = 'div:first';
  var label = 'label:first';

  qunit.moduleForComponent('ko-checkbox', {
    setup: function setup() {
      component = this.subject();
      component.set('label', 'Remember my preferences');
      component.set('tabindex', 0);
    },
    teardown: function teardown() {}
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    assert.equal(component._state, 'preRender');

    this.render();
    assert.equal(component._state, 'inDOM');
  });

  qunit.test('can be checked by pressing spacebar', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });

    assert.equal(component.checked, true, 'it has been checked');
  });

  qunit.test('can be checked by pressing spacebar (DDAU)', function (assert) {
    assert.expect(1);

    this.render();

    component.set('onCheck', 'checked');
    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, true, 'it has been checked');
      }
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });
  });

  qunit.test('can be unchecked by pressing spacebar', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('checked', true);
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });

    assert.equal(component.checked, false, 'it has been unchecked');
  });

  qunit.test('can be unchecked by pressing spacebar (DDAU)', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('checked', true);
    });

    component.set('onCheck', 'checked');
    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, false, 'it has been unchecked');
      }
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });
  });

  qunit.test('can be checked by clicking on checkbox', function (assert) {
    var _this = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this.$(checkbox).click();
    });

    assert.equal(component.checked, true, 'it has been checked');
  });

  qunit.test('can be checked by clicking on checkbox (DDAU)', function (assert) {
    var _this2 = this;

    assert.expect(1);

    this.render();

    component.set('onCheck', 'checked');
    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, true, 'it has been checked');
      }
    });

    Ember['default'].run(function () {
      _this2.$(checkbox).click();
    });
  });

  qunit.test('can be unchecked by clicking on checkbox', function (assert) {
    var _this3 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('checked', true);
    });

    Ember['default'].run(function () {
      _this3.$(checkbox).click();
    });

    assert.equal(component.checked, false, 'it has been unchecked');
  });

  qunit.test('can be unchecked by clicking on checkbox (DDAU)', function (assert) {
    var _this4 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('checked', true);
    });

    component.set('onCheck', 'checked');
    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, false, 'it has been unchecked');
      }
    });

    Ember['default'].run(function () {
      _this4.$(checkbox).click();
    });
  });

  qunit.test('can be checked by clicking on label', function (assert) {
    var _this5 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this5.$(label).click();
    });

    assert.equal(component.checked, true, 'it has been checked');
  });

  qunit.test('can be checked by clicking on label (DDAU)', function (assert) {
    var _this6 = this;

    assert.expect(1);

    this.render();

    component.set('onCheck', 'checked');
    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, true, 'it has been checked');
      }
    });

    Ember['default'].run(function () {
      _this6.$(label).click();
    });
  });

  qunit.test('can be unchecked by clicking on label', function (assert) {
    var _this7 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('checked', true);
    });

    Ember['default'].run(function () {
      _this7.$(label).click();
    });

    assert.equal(component.checked, false, 'it has been unchecked');
  });

  qunit.test('can be unchecked by clicking on label (DDAU)', function (assert) {
    var _this8 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('checked', true);
    });

    component.set('onCheck', 'checked');
    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, false, 'it has been unchecked');
      }
    });

    Ember['default'].run(function () {
      _this8.$(label).click();
    });
  });

  qunit.test('when disabled checkbox can\'t be checked', function (assert) {
    var _this9 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('disabled', true);
    });

    Ember['default'].run(function () {
      _this9.$(checkbox).click();
    });

    assert.equal(component.checked, false, 'it can\'t be checked');
  });

  qunit.test('when disabled checkbox can\'t be checked (DDAU)', function (assert) {
    var _this10 = this;

    assert.expect(0);

    this.render();

    Ember['default'].run(function () {
      component.set('disabled', true);
    });

    component.set('onCheck', 'checked');
    component.set('targetObject', {
      checked: function checked() {
        assert.equal(true, false, 'it can\'t be checked');
      }
    });

    Ember['default'].run(function () {
      _this10.$(checkbox).click();
    });
  });

});
define('frontend-cp/tests/unit/components/ko-contact-info/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-contact-info', 'Unit | Component | ko contact info', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-datepicker/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-datepicker', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-draggable-dropzone/component-test', ['ember', 'frontend-cp/tests/helpers/qunit'], function (Ember, qunit) {

  'use strict';

  var component = undefined;

  var filesMock = [{ name: 'Adam.png', type: 'image/png' }, { name: 'Peter.png', type: 'image/png' }];

  var eventMock = document.createEvent('CustomEvent');
  eventMock.initCustomEvent('drop', true, true, null);
  eventMock.dataTransfer = { data: {}, files: filesMock };

  qunit.moduleForComponent('ko-draggable-dropzone', {
    setup: function setup() {
      component = this.subject();
    },
    teardown: function teardown() {}
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    assert.equal(component._state, 'preRender');

    this.render();

    assert.equal(component._state, 'inDOM');
  });

  qunit.test('it has total size of 0 by default', function (assert) {
    assert.expect(1);

    this.render();

    assert.equal(component.totalSize, 0, 'has total size of 0');
  });

  qunit.test('it has drag counter of 0 by default', function (assert) {
    assert.expect(1);

    this.render();

    assert.equal(component.dragCounter, 0, 'drag counter is zero');
  });

  qunit.test('it can drop files', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      // TODO: neither of the two below work yet

      // component.drop(this.$(dropzone).trigger(new $.Event('drop', { dataTransfer: { files: filesMock } })));
      // component.drop(eventMock);
    });

    assert.equal(component.dragClass, false, 'drag and drop is over');
  });

  qunit.test('dragging in increments drag counter', function (assert) {
    assert.expect(1);

    Ember['default'].run(function () {
      component.dragEnter(eventMock);
    });

    assert.equal(component.dragCounter, 1, 'drag counter got incremented');
  });

  qunit.test('dragging out decrements drag counter', function (assert) {
    assert.expect(2);

    Ember['default'].run(function () {
      component.dragEnter(eventMock);
    });

    assert.equal(component.dragCounter, 1, 'drag counted got incremented');

    Ember['default'].run(function () {
      component.dragLeave(eventMock);
    });

    assert.equal(component.dragCounter, 0, 'drag counter got decremented');
  });

});
define('frontend-cp/tests/unit/components/ko-dropdown/container/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-dropdown/container', 'Unit | Component | ko dropdown container', {
    // Specify the other units that are required for this test
    needs: ['component:ko-dropdown/container/content', 'component:ko-dropdown/container/button']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-dropdown/list/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-dropdown/list', 'Unit | Component | ko dropdown list', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-dropdown/list/group/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-dropdown/list/group', 'Unit | Component | ko dropdown list/group', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-dropdown/list/hr/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-dropdown/list/hr', 'Unit | Component | ko dropdown list/hr', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-dropdown/list/item/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-dropdown/list/item', 'Unit | Component | ko dropdown list/item', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-dropdown/select/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-dropdown/select', 'Unit | Component | ko dropdown select', {
    // Specify the other units that are required for this test
    needs: ['component:ko-dropdown/container', 'component:ko-dropdown/list']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-editable-text/component-test', ['ember', 'frontend-cp/tests/helpers/qunit'], function (Ember, qunit) {

  'use strict';

  var component = undefined;
  var edit = 'div:first';

  qunit.moduleForComponent('ko-editable-text', {
    setup: function setup() {
      component = this.subject();
      component.set('value', 'I am a hunky munky');
    },
    teardown: function teardown() {}
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    assert.equal(component._state, 'preRender');

    this.render();

    assert.equal(component._state, 'inDOM');
  });

  qunit.test('is not editing by default', function (assert) {
    assert.expect(1);

    assert.equal(component.isEditing, false, 'is not editing by default');
  });

  qunit.test('when clicked/on focus it becomes editable', function (assert) {
    var _this = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this.$(edit).click();
    });

    assert.equal(component.isEditing, true, 'is editable');
  });

  qunit.test('when focused out it becomes not editable', function (assert) {
    var _this2 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this2.$(edit).click();
    });

    Ember['default'].run(function () {
      component.focusOut();
    });

    assert.equal(component.isEditing, false, 'is not editable');
  });

  qunit.test('focus out cancels editing changes', function (assert) {
    var _this3 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this3.$(edit).click();
    });

    Ember['default'].run(function () {
      component.set('value', 'I am a hunky munkyy');
    });

    Ember['default'].run(function () {
      component.focusOut();
    });

    assert.equal(component.valueToSave, 'I am a hunky munky', 'value stays the same');
  });

  qunit.test('pressing enter saves editing changes', function (assert) {
    var _this4 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this4.$(edit).click();
    });

    Ember['default'].run(function () {
      component.set('valueToSave', 'I am a hunky munkyy bla bla');
    });

    Ember['default'].run(function () {
      component.send('editComplete');
    });

    assert.equal(component.valueToSave, 'I am a hunky munkyy bla bla', 'value stays the same');
  });

});
define('frontend-cp/tests/unit/components/ko-feedback/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-feedback', 'Unit | Component | ko feedback', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-field/checkbox/component-test', ['ember', 'frontend-cp/tests/helpers/qunit'], function (Ember, qunit) {

  'use strict';

  qunit.moduleForComponent('ko-field/checkbox', {
    needs: ['component:ko-field/checkbox/single', 'template:components/ko-field/checkbox/single', 'component:ko-checkbox', 'template:components/ko-checkbox', 'helper:ko-helper']
  });

  var options = [{ id: 1, value: 'Red' }, { id: 2, value: 'Green' }, { id: 3, value: 'Blue' }];

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

  qunit.test('it has a title', function (assert) {
    assert.expect(2);

    var component = this.subject();

    assert.equal($.trim(this.$().text()), '');

    var title = 'Title Goes Here';
    Ember['default'].run(function () {
      component.set('title', title);
    });

    assert.equal($.trim(this.$('.info-bar-item__header').text()), title);
  });

  qunit.test('it has checkboxes', function (assert) {
    var component = this.subject();

    Ember['default'].run(function () {
      component.set('options', options);
    });

    assert.equal($.trim(this.$('label:eq(0)').text().trim()), options[0].value);
    assert.equal($.trim(this.$('label:eq(1)').text().trim()), options[1].value);
    assert.equal($.trim(this.$('label:eq(2)').text().trim()), options[2].value);
  });

  qunit.test('checkbox state is in sync with the data', function (assert) {
    var _this = this;

    assert.expect(4);
    var component = this.subject();

    Ember['default'].run(function () {
      component.set('options', options);
      component.set('value', ['2']);
    });

    assert.equal(this.$('[aria-checked]:eq(0)').attr('aria-checked'), 'false');
    assert.equal(this.$('[aria-checked]:eq(1)').attr('aria-checked'), 'true');
    assert.equal(this.$('[aria-checked]:eq(2)').attr('aria-checked'), 'false');

    component.set('onValueChange', 'checked');
    component.set('targetObject', {
      checked: function checked(value) {
        assert.deepEqual(value, ['1', '2'], 'it has been checked');
      }
    });

    Ember['default'].run(function () {
      _this.$('[aria-checked]:eq(0)').click();
    });
  });

});
define('frontend-cp/tests/unit/components/ko-field/select/component-test', ['ember', 'frontend-cp/tests/helpers/qunit', 'frontend-cp/lib/keycodes'], function (Ember, qunit, KeyCodes) {

  'use strict';

  qunit.moduleForComponent('ko-field/select', {
    needs: []
  });

  var dummyContent = ['Open', 'Pending', 'Closed'];

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

  qunit.test('it has a title', function (assert) {
    assert.expect(2);

    var component = this.subject();

    assert.equal($.trim(this.$().text()), '');

    Ember['default'].run(function () {
      component.set('title', 'Title Goes Here');
    });

    assert.equal($.trim(this.$().text()), 'Title Goes Here');
  });

  qunit.test('content appears in the dropdown', function (assert) {
    assert.expect(1);

    var component = this.subject();

    Ember['default'].run(function () {
      component.set('options', dummyContent);
    });

    this.$().find().click();

    assert.equal(this.$('ul li').text().replace(/(\r\n|\n|\r| )/g, ''), 'OpenPendingClosed');
  });

  qunit.test('clicking on a content item triggers value change', function (assert) {
    var _this = this;

    assert.expect(1);

    var component = this.subject();

    Ember['default'].run(function () {
      component.set('options', dummyContent);
    });

    component.set('onValueChange', 'change');
    component.set('targetObject', {
      change: function change(value) {
        assert.equal(value, 'Open');
      }
    });

    Ember['default'].run(function () {
      _this.$().click();
    });
    Ember['default'].run(function () {
      _this.$('ul li:first').click();
    });
  });

  qunit.test('pressing enter on a content item changes the value', function (assert) {
    assert.expect(1);

    var component = this.subject();

    Ember['default'].run(function () {
      component.set('options', dummyContent);
    });

    component.set('onValueChange', 'change');
    component.set('targetObject', {
      change: function change(value) {
        assert.equal(value, 'Open');
      }
    });

    this.render();

    Ember['default'].run(function () {
      component.keyDown({ keyCode: KeyCodes.tab });
      component.keyDown({ keyCode: KeyCodes.down });
      component.keyDown({ keyCode: KeyCodes.enter });
    });
  });

  qunit.test('when repeatedly selecting content items using the keyboard the selection should always start from the first position', function (assert) {
    assert.expect(2);

    var component = this.subject();

    Ember['default'].run(function () {
      component.set('options', dummyContent);
    });

    component.set('onValueChange', 'change');
    component.set('targetObject', {
      change: function change(value) {
        assert.equal(value, 'Closed');
      }
    });

    this.render();

    Ember['default'].run(function () {
      component.keyDown({ keyCode: KeyCodes.tab });
      component.keyDown({ keyCode: KeyCodes.down });
      component.keyDown({ keyCode: KeyCodes.down });
      component.keyDown({ keyCode: KeyCodes.down });
      component.keyDown({ keyCode: KeyCodes.enter });
    });

    component.set('targetObject', {
      change: function change(value) {
        assert.equal(value, 'Open');
      }
    });

    Ember['default'].run(function () {
      component.keyDown({ keyCode: KeyCodes.tab });
      component.keyDown({ keyCode: KeyCodes.down });
      component.keyDown({ keyCode: KeyCodes.enter });
    });
  });

});
define('frontend-cp/tests/unit/components/ko-field/tags/component-test', ['ember', 'frontend-cp/tests/helpers/qunit', 'frontend-cp/lib/keycodes'], function (Ember, qunit, KeyCodes) {

  'use strict';

  var component = undefined;
  var title = 'span:first';
  var firstSelectedTag = 'ul:first li:first';
  var secondSelectedTag = 'ul:first li:nth-child(2)';
  var firstSelectedTagText = 'ul:first li:first span:first';
  var deleteTag = 'span:nth-child(2)';
  var suggestionsList = 'ul:nth-child(3) li';
  var firstSuggestion = 'ul:nth-child(3) li:first';
  var searchField = 'ul:first li input';

  qunit.moduleForComponent('ko-field/tags', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
    setup: function setup() {
      component = this.subject();
      component.set('selectedTags', []);
      component.set('tags', ['dog', 'pig', 'moose', 'duck', 'donkey', 'dave', 'don', 'derek']);
    },
    teardown: function teardown() {}
  });

  qunit.test('is suggested', function (assert) {
    assert.expect(1);

    Ember['default'].run(function () {
      component.set('tags', ['dog']);
      component.set('searchTerm', 'dog');
      component.keyUp({ keyCode: KeyCodes.g });
    });

    assert.equal(component.get('isSuggested'), true);
  });

  qunit.test('is not suggested when there are no tags', function (assert) {
    assert.expect(1);

    Ember['default'].run(function () {
      component.set('tags', []);
      component.set('searchTerm', 'dog');
      component.keyUp({ keyCode: KeyCodes.g });
    });

    assert.equal(component.get('isSuggested'), false);
  });

  qunit.test('is not suggested when nothing has been typed', function (assert) {
    assert.expect(1);

    Ember['default'].run(function () {
      component.set('tags', ['dog']);
      component.set('searchTerm', '');
    });

    assert.equal(component.get('isSuggested'), false);
  });

  qunit.test('is selected', function (assert) {
    assert.expect(1);

    Ember['default'].run(function () {
      component.set('selectedTags', ['dog']);
      component.set('tags', ['dog']);
      component.set('searchTerm', 'dog');
      component.keyUp({ keyCode: KeyCodes.g });
    });

    assert.equal(component.get('isSelected'), true);
  });

  qunit.test('is not selected', function (assert) {
    assert.expect(1);

    Ember['default'].run(function () {
      component.set('selectedTags', []);
      component.set('tags', ['dog']);
      component.set('searchTerm', 'dog');
      component.keyUp({ keyCode: KeyCodes.g });
    });

    assert.equal(component.get('isSelected'), false);
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

  qunit.test('title can be set', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('title', 'Tags');
    });

    assert.equal(this.$(title).text(), 'Tags', 'title');
  });

  qunit.test('after a selection has taken place the text in the input should be cleared', function (assert) {
    assert.expect(2);

    this.render();

    Ember['default'].run(function () {
      component.set('searchTerm', 'dog');
      component.keyUp({ keyCode: KeyCodes.g });
    });

    assert.equal(this.$(firstSuggestion).text(), 'dog', 'suggestions list');

    this.$(firstSuggestion).click();

    assert.equal($.trim(component.$(searchField).val()), '', 'The search field has been cleared');
  });

  qunit.test('selected tags should not appear in suggestions', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('selectedTags', ['dog']);
      component.set('tags', ['dog', 'duck']);
      component.set('searchTerm', 'd');
      component.keyUp({ keyCode: KeyCodes.d });
    });

    assert.equal(this.$(suggestionsList).text(), 'duckdMESSAGE %%cases.newtag%%', 'suggestions list');
  });

  qunit.test('suggested tags should be able to be selected by mouse', function (assert) {
    assert.expect(3);

    this.render();

    var targetObject = {
      externalAction: function externalAction(newTag) {
        assert.deepEqual(newTag, 'dog', 'external action was called');
      }
    };

    component.set('onTagAddition', 'externalAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('searchTerm', 'dog');
      component.keyUp({ keyCode: KeyCodes.g });
    });

    assert.equal($.trim(this.$(firstSelectedTagText).text()), '', 'selected tags');
    assert.equal(this.$(firstSuggestion).text(), 'dog', 'suggested list');

    this.$(firstSuggestion).click();
  });

  qunit.test('selected tags should be able to be removed by mouse', function (assert) {
    assert.expect(2);

    this.render();

    var targetObject = {
      externalAction: function externalAction(tagToRemove) {
        assert.deepEqual(tagToRemove, 'dog', 'external action was called');
      }
    };

    component.set('onTagRemoval', 'externalAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('selectedTags', ['dog']);
    });

    assert.equal($.trim(component.$(firstSelectedTagText).text()), 'dog', 'selected tags');

    this.$(firstSelectedTag + ' ' + deleteTag).click();
  });

  qunit.test('all suggested tags should be visible when tabing in by keyboard', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.focusIn({ target: component.$(searchField) });
    });

    this.$().trigger(new $.Event('keydown', { keyCode: KeyCodes.down }));

    assert.equal(this.$(suggestionsList).text(), 'dogpigmooseduckdonkeydavedonderek', 'suggestions list');
  });

  qunit.test('suggested tags should be able to be selected by keyboard', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalTagSelectionChangeAction: function externalTagSelectionChangeAction(newTag) {
        assert.deepEqual(newTag, 'dog', 'external tag selection change action was called');
      }
    };

    component.set('onTagAddition', 'externalTagSelectionChangeAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('searchTerm', 'dog');
      component.keyUp({ keyCode: KeyCodes.g });
    });

    component.keyDown({ keyCode: KeyCodes.down });

    Ember['default'].run(function () {
      component.keyDown({ keyCode: KeyCodes.enter });
    });
  });

  qunit.test('selected tags should be able to be removed by keyboard', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalTagRemovalAction: function externalTagRemovalAction(tagToRemove) {
        assert.deepEqual(tagToRemove, 'cat', 'external tag selection change action was called');
      }
    };

    component.set('onTagRemoval', 'externalTagRemovalAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('selectedTags', ['dog', 'cat', 'mouse']);
    });

    Ember['default'].run(function () {
      component.focusIn({ target: component.$(secondSelectedTag) });
      component.keyDown({ keyCode: KeyCodes.backspace });
    });
  });

  qunit.test('new tags can be created and added by keyboard', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalTagAdditionAction: function externalTagAdditionAction(tags) {
        assert.deepEqual(tags, 'qwerty', 'external tag addition action was called');
      }
    };

    component.set('onTagAddition', 'externalTagAdditionAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('tags', '');
      component.set('searchTerm', 'qwerty');
      component.keyUp({ keyCode: KeyCodes.y });
    });

    component.keyDown({ keyCode: KeyCodes.down });
    Ember['default'].run(function () {
      component.keyDown({ keyCode: KeyCodes.enter });
    });
  });

  qunit.test('new tags can be created and added by enter press on keyboard', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalTagAdditionAction: function externalTagAdditionAction(tags) {
        assert.deepEqual(tags, 'qwerty', 'external tag addition action was called');
      }
    };

    component.set('onTagAddition', 'externalTagAdditionAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('tags', '');
      component.set('searchTerm', 'qwerty');
      component.keyUp({ keyCode: KeyCodes.y });
      component.keyDown({ keyCode: KeyCodes.enter });
    });
  });

  qunit.test('make sure suggestions are recalculated after selection by keyboard', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalTagAdditionAction: function externalTagAdditionAction(tags) {
        component.set('selectedTags', ['dog']);
      }
    };

    component.set('onTagAddition', 'externalTagAdditionAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('searchTerm', 'd');
      component.keyUp({ keyCode: KeyCodes.d });
    });

    component.keyDown({ keyCode: KeyCodes.down });

    Ember['default'].run(function () {
      component.keyDown({ keyCode: KeyCodes.enter });
    });

    assert.equal(this.$(suggestionsList).text(), 'pigmooseduckdonkeydavedonderek', 'suggestions list');
  });

});
define('frontend-cp/tests/unit/components/ko-file-field/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-file-field', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-file-size/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-file-size', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-info-bar/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-info-bar', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-linked-cases-context-menu/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-linked-cases-context-menu', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
    needs: ['component:ko-context-modal-item']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-linked-cases/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-linked-cases', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
    needs: ['component:ko-linked-cases-context-menu', 'component:ko-toggle-context-modal']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-notification-badge/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-notification-badge', 'Unit | Component | ko notification badge', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-option-list-drill-down/component-test', ['ember', 'ember-qunit', 'frontend-cp/lib/keycodes'], function (Ember, ember_qunit, KeyCodes) {

  'use strict';

  var component = undefined;
  var title = 'span:first:visible';
  var firstSuggestion = 'ul li:first:visible';
  var value = 'div:first:visible';
  var searchField = 'input:visible';
  var suggestionsList = 'ul:first li:visible';
  var hierarchyList = 'ul:last li:visible';
  var hierarchyLevelOneItemOne = 'ul:last li:first:visible';
  var hierarchyLevelOneItemTwo = 'ul:last li:nth-of-type(2):visible';
  var hierarchyLevelTwoItemThree = 'ul:last li:nth-of-type(3):visible';

  ember_qunit.moduleForComponent('ko-option-list-drill-down', 'Unit | Component | ko option list drill down', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
    needs: ['helper:ko-slasherizer', 'helper:ko-embolden', 'component:ko-search'],
    setup: function setup() {
      component = this.subject();
      component.set('options', [{ id: 1, value: 'Team A,Jesse Bennett-Chamberlain' }, { id: 2, value: 'Team A,Jamie Edwards' }, { id: 3, value: 'Team A,Drew Warkentin' }, { id: 4, value: 'Team B,Jesse Bennett-Chamberlain' }, { id: 5, value: 'Team C' }, { id: 6, value: 'Team D' }]);
    }
  });

  ember_qunit.test('levels are extracted from options', function (assert) {
    assert.expect(1);

    this.render();

    var expectedObject = new Ember['default'].A();
    expectedObject.pushObject(Ember['default'].Object.create({ isBranchItem: true, text: 'Team A' }));
    expectedObject.pushObject(Ember['default'].Object.create({ isBranchItem: true, text: 'Team B' }));
    expectedObject.pushObject(Ember['default'].Object.create({ isBranchItem: false, text: 'Team C' }));
    expectedObject.pushObject(Ember['default'].Object.create({ isBranchItem: false, text: 'Team D' }));

    assert.deepEqual(component.extractRootLevelHierarchyItems(), expectedObject);
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

  ember_qunit.test('title can be set', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('title', 'Assignee');
    });

    assert.equal(this.$(title).text(), 'Assignee', 'title');
  });

  ember_qunit.test('suggestions are recalculated after search', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('searchTerm', 'j');
      component.keyUp({ keyCode: KeyCodes.j });
    });

    var expectedList = ['Team A / Jesse Bennett-Chamberlain', 'Team A / Jamie Edwards', 'Team B / Jesse Bennett-Chamberlain'];

    var actualList = [];
    this.$(suggestionsList).each(function () {
      actualList.push($(this).text());
    });
    assert.deepEqual(actualList, expectedList, 'suggestions list');
  });

  ember_qunit.test('if the search list is in use it redraws correctly when the options change', function (assert) {
    assert.expect(2);

    this.render();

    Ember['default'].run(function () {
      component.set('searchTerm', 'j');
      component.keyUp({ keyCode: KeyCodes.j });
    });

    var expectedList = ['Team A / Jesse Bennett-Chamberlain', 'Team A / Jamie Edwards', 'Team B / Jesse Bennett-Chamberlain'];

    var actualList = [];
    this.$(suggestionsList).each(function () {
      actualList.push($(this).text());
    });
    assert.deepEqual(actualList, expectedList, 'suggestions list');

    Ember['default'].run(function () {
      component.set('options', [{ id: 2, value: 'Team A,Jamie Edwards' }]);
    });

    Ember['default'].run(function () {
      component.set('searchTerm', 'j');
      component.keyUp({ keyCode: KeyCodes.j });
    });

    var expectedListTwo = ['Team A / Jamie Edwards'];

    var actualListTwo = [];
    this.$(suggestionsList).each(function () {
      actualListTwo.push($(this).text());
    });
    assert.deepEqual(actualListTwo, expectedListTwo, 'suggestions list after options update');
  });

  ember_qunit.test('suggestions should be able to be selected by mouse', function (assert) {
    assert.expect(3);

    this.render();

    var targetObject = {
      externalAction: function externalAction(value) {
        var options = component.get('options');
        var selectedObject = options.filter(function (i) {
          return i.id === value;
        });

        assert.deepEqual(value, 2, 'external action was called');
        component.set('value', selectedObject[0].value.split(',').join(' / '));
      }
    };

    component.set('onValueChange', 'externalAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('searchTerm', 'Jamie');
      component.keyUp({ keyCode: KeyCodes.e });
    });

    assert.equal(this.$(firstSuggestion).text(), 'Team A / Jamie Edwards', 'suggested list');

    this.$(firstSuggestion).click();

    assert.equal($.trim(this.$(value).text()), 'Team A / Jamie Edwards', 'value');
  });

  ember_qunit.test('suggestions should be able to be selected by enter press on keyboard', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalAction: function externalAction(value) {
        assert.equal(value, 2, 'external action was called');
      }
    };

    component.set('onValueChange', 'externalAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('searchTerm', 'Jamie');
      component.keyUp({ keyCode: KeyCodes.e });
    });

    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.enter });
  });

  ember_qunit.test('suggestions should be able to be selected by right arrow press on keyboard', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalAction: function externalAction(value) {
        assert.equal(value, 2, 'external action was called');
      }
    };

    component.set('onValueChange', 'externalAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.set('searchTerm', 'Jamie');
      component.keyUp({ keyCode: KeyCodes.e });
    });

    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.right });
  });

  ember_qunit.test('search input should be cleared after use', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('searchTerm', 'Jamie');
      component.keyUp({ keyCode: KeyCodes.e });
    });

    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.enter });

    assert.equal(component.get('searchterm'), null, 'searchTerm after selection');
  });

  ember_qunit.test('as soon as a search is started the hierarchy dropdown is replaced with the search dropdown', function (assert) {
    assert.expect(2);

    this.render();

    Ember['default'].run(function () {
      component.focusIn({ target: component.$(searchField) });
    });

    var expectedHierarchyList = ['Team A', 'Team B', 'Team C', 'Team D'];

    var actualHierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualHierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualHierarchyList, expectedHierarchyList, 'hierarchy list');

    Ember['default'].run(function () {
      component.set('searchTerm', 'j');
      component.keyUp({ keyCode: KeyCodes.j });
    });

    var expectedSuggestionsList = ['Team A / Jesse Bennett-Chamberlain', 'Team A / Jamie Edwards', 'Team B / Jesse Bennett-Chamberlain'];

    var actualSuggestionsList = [];
    this.$(suggestionsList).each(function () {
      actualSuggestionsList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualSuggestionsList, expectedSuggestionsList, 'suggestions list');
  });

  ember_qunit.test('if a search is started but then all the characters are cleared from the search field the hierarchy dropdown should be shown', function (assert) {
    assert.expect(2);

    this.render();

    Ember['default'].run(function () {
      component.set('searchTerm', 'j');
      component.keyUp({ keyCode: KeyCodes.j });
    });

    var expectedSuggestionsList = ['Team A / Jesse Bennett-Chamberlain', 'Team A / Jamie Edwards', 'Team B / Jesse Bennett-Chamberlain'];

    var actualSuggestionsList = [];
    this.$(suggestionsList).each(function () {
      actualSuggestionsList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualSuggestionsList, expectedSuggestionsList, 'suggestions list');

    Ember['default'].run(function () {
      component.set('searchTerm', '');
      component.keyUp({ keyCode: KeyCodes.backspace });
    });

    var expectedHierarchyList = ['Team A', 'Team B', 'Team C', 'Team D'];

    var actualHierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualHierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualHierarchyList, expectedHierarchyList, 'hierarchy list');
  });

  ember_qunit.test('moving up and down the hierarchy by mouse', function (assert) {
    assert.expect(3);

    this.render();

    Ember['default'].run(function () {
      component.focusIn({ target: component.$(searchField) });
    });

    this.$(hierarchyLevelOneItemOne).click();

    var expectedLevel1HierarchyList = ['Back', 'Team A / Jesse Bennett-Chamberlain', 'Team A / Jamie Edwards', 'Team A / Drew Warkentin'];

    var actualLevel1HierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualLevel1HierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualLevel1HierarchyList, expectedLevel1HierarchyList, 'level 1 hierarchy list');

    this.$(hierarchyLevelOneItemOne).click();

    var expectedRootHierarchyList = ['Team A', 'Team B', 'Team C', 'Team D'];

    var actualRootHierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualRootHierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualRootHierarchyList, expectedRootHierarchyList, 'root hierarchy list');

    this.$(hierarchyLevelOneItemTwo).click();

    var expectedSecondLevel1HierarchyList = ['Back', 'Team B / Jesse Bennett-Chamberlain'];

    var actualSecondLevel1HierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualSecondLevel1HierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualSecondLevel1HierarchyList, expectedSecondLevel1HierarchyList, 'second level 1 hierarchy list');
  });

  ember_qunit.test('items at the bottom of a hierarchy should be able to be selected by mouse', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalAction: function externalAction(value) {
        assert.deepEqual(value, 2, 'external action was called');
      }
    };

    component.set('onValueChange', 'externalAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.focusIn({ target: component.$(searchField) });
    });

    this.$(hierarchyLevelOneItemOne).click();
    this.$(hierarchyLevelTwoItemThree).click();
  });

  ember_qunit.test('moving up and down the hierarchy by keyboard', function (assert) {
    assert.expect(3);

    this.render();

    Ember['default'].run(function () {
      component.focusIn({ target: component.$(searchField) });
    });

    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.enter });

    var expectedLevel1HierarchyList = ['Back', 'Team A / Jesse Bennett-Chamberlain', 'Team A / Jamie Edwards', 'Team A / Drew Warkentin'];

    var actualLevel1HierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualLevel1HierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualLevel1HierarchyList, expectedLevel1HierarchyList, 'level 1 hierarchy list');

    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.enter });

    var expectedRootHierarchyList = ['Team A', 'Team B', 'Team C', 'Team D'];

    var actualRootHierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualRootHierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualRootHierarchyList, expectedRootHierarchyList, 'root hierarchy list');

    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.enter });

    var expectedSecondLevel1HierarchyList = ['Back', 'Team B / Jesse Bennett-Chamberlain'];

    var actualSecondLevel1HierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualSecondLevel1HierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualSecondLevel1HierarchyList, expectedSecondLevel1HierarchyList, 'second level 1 hierarchy list');
  });

  ember_qunit.test('items at the bottom of a hierarchy should be able to be selected by keyboard', function (assert) {
    assert.expect(1);

    this.render();

    var targetObject = {
      externalAction: function externalAction(value) {
        assert.equal(value, 2, 'external action was called');
      }
    };

    component.set('onValueChange', 'externalAction');
    component.set('targetObject', targetObject);

    Ember['default'].run(function () {
      component.focusIn({ target: component.$(searchField) });
    });

    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.enter });
    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.down });
    component.keyDown({ keyCode: KeyCodes.enter });
  });

  ember_qunit.test('when showExpandedByDefault is true the hierarchy list should be shown by default', function (assert) {
    assert.expect(1);

    component.set('showExpandedByDefault', true);

    this.render();

    var expectedRootHierarchyList = ['Team A', 'Team B', 'Team C', 'Team D'];

    var actualRootHierarchyList = [];
    this.$(hierarchyList).each(function () {
      actualRootHierarchyList.push($.trim($(this).text()));
    });
    assert.deepEqual(actualRootHierarchyList, expectedRootHierarchyList, 'root hierarchy list');
  });

});
define('frontend-cp/tests/unit/components/ko-pagination/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-pagination', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-radio/component-test', ['ember', 'frontend-cp/tests/helpers/qunit', 'frontend-cp/lib/keycodes'], function (Ember, qunit, KeyCodes) {

  'use strict';

  var component = undefined;
  var radio = 'div:first';
  var label = 'label:first';

  qunit.moduleForComponent('ko-radio', {
    setup: function setup() {
      component = this.subject();
      component.set('label', 'You can do this!');
      component.set('tabindex', 0);
      component.set('value', 'one');
    },
    teardown: function teardown() {}
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    assert.equal(component._state, 'preRender');

    this.render();
    assert.equal(component._state, 'inDOM');
  });

  qunit.test('can be selected by pressing spacebar', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });

    assert.equal(component.value === component.checked, true, 'it has been selected');
  });

  qunit.test('can be selected by pressing spacebar (DDAU)', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('onRadio', 'checked');
      component.set('checked', 'one');
    });

    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, 'one', 'it has been selected');
      }
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });
  });

  qunit.test('can not be unselected by pressing spacebar', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('selected', true);
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });

    assert.equal(component.value === component.checked, true, 'it has not been unselected');
  });

  qunit.test('can not be unselected by pressing spacebar (DDAU)', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('selected', true);
    });

    Ember['default'].run(function () {
      component.set('onRadio', 'checked');
      component.set('checked', 'one');
    });

    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, 'one', 'it has not been unselected');
      }
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });
  });

  qunit.test('can be selected by clicking on radio', function (assert) {
    var _this = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this.$(radio).click();
    });

    assert.equal(component.value === component.checked, true, 'it has been selected');
  });

  qunit.test('can be selected by clicking on radio (DDAU)', function (assert) {
    var _this2 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('onRadio', 'checked');
      component.set('checked', 'one');
    });

    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, 'one', 'it has been selected');
      }
    });

    Ember['default'].run(function () {
      _this2.$(radio).click();
    });
  });

  qunit.test('can not be unselected by clicking on radio', function (assert) {
    var _this3 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('selected', true);
    });

    Ember['default'].run(function () {
      _this3.$(radio).click();
    });

    assert.equal(component.value === component.checked, true, 'it has not been unselected');
  });

  qunit.test('can not be unselected by clicking on radio (DDAU)', function (assert) {
    var _this4 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('selected', true);
    });

    Ember['default'].run(function () {
      component.set('onRadio', 'checked');
      component.set('checked', 'one');
    });

    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, 'one', 'it has not been unselected');
      }
    });

    Ember['default'].run(function () {
      _this4.$(radio).click();
    });
  });

  qunit.test('can be selected by clicking on label', function (assert) {
    var _this5 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this5.$(label).click();
    });

    assert.equal(component.value === component.checked, true, 'it has been selected');
  });

  qunit.test('can be selected by clicking on label (DDAU)', function (assert) {
    var _this6 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('onRadio', 'checked');
      component.set('checked', 'one');
    });

    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, 'one', 'it has been checked');
      }
    });

    Ember['default'].run(function () {
      _this6.$(label).click();
    });
  });

  qunit.test('can not be unselected by clicking on label', function (assert) {
    var _this7 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('selected', true);
    });

    Ember['default'].run(function () {
      _this7.$(label).click();
    });

    assert.equal(component.value === component.checked, true, 'it has not been unselected');
  });

  qunit.test('can not be unselected by clicking on label (DDAU)', function (assert) {
    var _this8 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('selected', true);
    });

    Ember['default'].run(function () {
      component.set('onRadio', 'checked');
      component.set('checked', 'one');
    });

    component.set('targetObject', {
      checked: function checked(value) {
        assert.equal(value, 'one', 'it has not been unselected');
      }
    });

    Ember['default'].run(function () {
      _this8.$(label).click();
    });
  });

  qunit.test('when disabled radio can\'t be selected', function (assert) {
    var _this9 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('disabled', true);
    });

    Ember['default'].run(function () {
      _this9.$(radio).click();
    });

    assert.equal(component.value === component.checked, false, 'radio cant be selected');
  });

  qunit.test('when disabled radio can\'t be selected (DDAU)', function (assert) {
    var _this10 = this;

    assert.expect(0);

    this.render();

    Ember['default'].run(function () {
      component.set('disabled', true);
    });

    Ember['default'].run(function () {
      component.set('onRadio', 'selected');
      component.set('checked', 'one');
    });

    component.set('targetObject', {
      selected: function selected() {
        assert.equal(true, false, 'it can\'t be selected');
      }
    });

    Ember['default'].run(function () {
      _this10.$(radio).click();
    });
  });

});
define('frontend-cp/tests/unit/components/ko-recent-cases/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-recent-cases', 'Unit | Component | ko recent cases', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-recent-members/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-recent-members', 'Unit | Component | ko recent members', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-table-body/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-table/body', 'Unit | Component | ko table body', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-table-cell/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-table/cell', 'Unit | Component | ko table cell', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-table-column/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  var component = undefined;

  ember_qunit.moduleForComponent('ko-table/column', 'Unit | Component | ko table column', {
    // Specify the other units that are required for this test
    // needs: ['helper:eq']
    setup: function setup() {
      component = this.subject();
    }
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

  ember_qunit.test('it is unsortable by default', function (assert) {
    assert.expect(0);
    this.render();
    component.set('parentView', {
      send: function send() {
        throw new Error('Should not be sorted');
      }
    });

    component.click();
  });

  // test('it emits sort action', function (assert) {
  //   let columnName = 'name';
  //   assert.expect(2);
  //
  //   component.set('parentView', {
  //     send(action, column) {
  //       assert.equal(action, 'sort');
  //       assert.equal(column, columnName);
  //     }
  //   });
  //
  //   Ember.run(() => {
  //     component.set('sortable', columnName);
  //   });
  //
  //   component.click();
  // });

});
define('frontend-cp/tests/unit/components/ko-table-header/component-test', function () {

	'use strict';

	// import { moduleForComponent, test } from 'frontend-cp/tests/helpers/qunit';
	// import Ember from 'ember';
	//
	// let component;
	// let table;
	//
	// moduleForComponent('ko-table/header', 'Unit | Component | ko table header', {
	//   // Specify the other units that are required for this test
	//   needs: ['component:ko-checkbox'],
	//   setup() {
	//     component = this.subject();
	//     table = Ember.Object.create();
	//     component.set('parentView', table);
	//   }
	// });
	//
	// test('it renders', function (assert) {
	//   assert.expect(2);
	//
	//   // Creates the component instance
	//   assert.equal(component._state, 'preRender');
	//
	//   // Renders the component to the page
	//   this.render();
	//   assert.equal(component._state, 'inDOM');
	// });
	//
	// test('it doesn\'t have a checkbox by default', function (assert) {
	//   assert.equal(this.$('th').length, 0);
	// });
	//
	// test('it displays a checkbox when table\'s selectable=true', function (assert) {
	//   Ember.run(() => {
	//     table.set('selectable', true);
	//   });
	//   assert.equal(this.$('th').length, 1);
	// });
	//
	// test('it emits an action on the table when checkbox is clicked', function (assert) {
	//   assert.expect(2);
	//   Ember.run(() => {
	//     table.set('selectable', true);
	//   });
	//
	//   table.set('send', (action) => {
	//     assert.equal(action, 'selectAll');
	//   });
	//
	//   Ember.run(() => {
	//     component.send('selectAll', true);
	//   });
	//
	//   table.set('send', (action) => {
	//     assert.equal(action, 'deselectAll');
	//   });
	//
	//   Ember.run(() => {
	//     component.send('selectAll', false);
	//   });
	// });
	//
	// test('it modifies sorting order and column and emits an action when sorted', function (assert) {
	//   assert.expect(14);
	//   component.set('onSort', 'onSort');
	//
	//   // initial values
	//   assert.equal(component.get('sortColumn'), '');
	//   assert.equal(component.get('sortOrder'), '');
	//
	//   // initial sort
	//   component.set('targetObject', {
	//     onSort(sortColumn, sortOrder) {
	//       assert.equal(sortColumn, 'foo');
	//       assert.equal(sortOrder, 'asc');
	//     }
	//   });
	//   component.send('sort', 'foo');
	//   assert.equal(component.get('sortColumn'), 'foo');
	//   assert.equal(component.get('sortOrder'), 'asc');
	//
	//   // desc sort
	//   component.set('targetObject', {
	//     onSort(sortColumn, sortOrder) {
	//       assert.equal(sortOrder, 'desc');
	//     }
	//   });
	//   component.send('sort', 'foo');
	//   assert.equal(component.get('sortOrder'), 'desc');
	//
	//   // back to asc
	//   component.set('targetObject', {
	//     onSort(sortColumn, sortOrder) {
	//       assert.equal(sortOrder, 'asc');
	//     }
	//   });
	//   component.send('sort', 'foo');
	//   assert.equal(component.get('sortOrder'), 'asc');
	//
	//   // different column
	//   component.set('targetObject', {
	//     onSort(sortColumn, sortOrder) {
	//       assert.equal(sortColumn, 'bar');
	//       assert.equal(sortOrder, 'asc');
	//     }
	//   });
	//   component.send('sort', 'bar');
	//   assert.equal(component.get('sortColumn'), 'bar');
	//   assert.equal(component.get('sortOrder'), 'asc');
	// });

});
define('frontend-cp/tests/unit/components/ko-table-row/component-test', function () {

	'use strict';

	// import { moduleForComponent, test } from 'frontend-cp/tests/helpers/qunit';
	// import Ember from 'ember';
	//
	// let component;
	// let table;
	// let body;
	//
	// moduleForComponent('ko-table/row', 'Unit | Component | ko table row', {
	//   // Specify the other units that are required for this test
	//   needs: ['component:ko-checkbox'],
	//   setup() {
	//     component = this.subject();
	//     table = Ember.Object.create({
	//       send() {}
	//     });
	//     body = Ember.Object.create({
	//       table: table
	//     });
	//     component.set('parentView', body);
	//   }
	// });
	//
	// test('it renders', function(assert) {
	//   assert.expect(2);
	//
	//   // Creates the component instance
	//   assert.equal(component._state, 'preRender');
	//
	//   // Renders the component to the page
	//   this.render();
	//   assert.equal(component._state, 'inDOM');
	// });
	//
	// test('it is selectable whenever the table is', function (assert) {
	//   this.render();
	//   assert.equal(this.$('td').length, 0);
	//
	//   Ember.run(() => {
	//     table.set('selectable', true);
	//   });
	//
	//   assert.equal(this.$('td').length, 1);
	// });
	//
	// test('it emits registerRow on the table when inserted into dom', function (assert) {
	//   assert.expect(2);
	//
	//   table.set('send', (action, row) => {
	//     assert.equal(action, 'registerRow');
	//     assert.equal(row, component);
	//     table.set('send', () => {});
	//   });
	//
	//   this.render();
	// });
	//
	// test('it emits unregisterRow on the table when removed from dom', function (assert) {
	//   assert.expect(2);
	//   this.render();
	//
	//   table.set('send', (action, row) => {
	//     assert.equal(action, 'unregisterRow');
	//     assert.equal(row, component);
	//   });
	// });

});
define('frontend-cp/tests/unit/components/ko-table/component-test', ['frontend-cp/tests/helpers/qunit', 'ember'], function (qunit, Ember) {

  'use strict';

  var component = undefined;
  var rows = undefined;

  qunit.moduleForComponent('ko-table', 'Unit | Component | ko table', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
    setup: function setup() {
      component = this.subject();
      rows = [Ember['default'].Object.create({ selected: false }), Ember['default'].Object.create({ selected: false }), Ember['default'].Object.create({ selected: false })];
      rows.forEach(function (row) {
        return component.send('registerRow', row);
      });
    }
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

  qunit.test('it tracks the selected state of rows', function (assert) {
    assert.equal(component.get('allRowsSelected'), false);

    rows[0].set('selected', true);
    rows[1].set('selected', true);
    assert.equal(component.get('allRowsSelected'), false);

    rows[2].set('selected', true);
    assert.equal(component.get('allRowsSelected'), true);

    rows[0].set('selected', false);
    assert.equal(component.get('allRowsSelected'), false);
  });

  qunit.test('it selects all rows', function (assert) {
    component.send('selectAll');
    rows.forEach(function (row) {
      return assert.equal(row.get('selected'), true);
    });

    component.send('deselectAll');
    rows.forEach(function (row) {
      return assert.equal(row.get('selected'), false);
    });
  });

});
define('frontend-cp/tests/unit/components/ko-text-editor/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-text-editor', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
    needs: ['component:ko-file-field', 'component:ko-draggable-dropzone', 'component:ko-channel-select', 'component:ko-dropdown/list/item', 'component:ko-text-editor/toggle-button']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-toggle-context-modal/component-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('ko-toggle-context-modal', 'Unit | Component | ko toggle context modal', {
    // Specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  ember_qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/ko-toggle/component-test', ['ember', 'frontend-cp/tests/helpers/qunit', 'frontend-cp/lib/keycodes'], function (Ember, qunit, KeyCodes) {

  'use strict';

  var component = undefined;
  var radio = 'div:first';
  var label = 'label:first';

  qunit.moduleForComponent('ko-toggle', {
    setup: function setup() {
      component = this.subject();
      component.set('label', 'Nuclear bomb switch');
      component.set('tabindex', 0);
    },
    teardown: function teardown() {}
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    assert.equal(component._state, 'preRender');

    this.render();
    assert.equal(component._state, 'inDOM');
  });

  qunit.test('can be activated by pressing spacebar', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });

    assert.equal(component.activated, true, 'it has been activated');
  });

  qunit.test('can be activated by pressing spacebar (DDAU)', function (assert) {
    assert.expect(1);

    this.render();

    component.set('onToggle', 'activated');
    component.set('targetObject', {
      activated: function activated(value) {
        assert.equal(value, true, 'it has been activated');
      }
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });
  });

  qunit.test('can be deactivated by pressing spacebar', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('activated', true);
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });

    assert.equal(component.activated, false, 'it has been deactivated');
  });

  qunit.test('can be deactivated by pressing spacebar (DDAU)', function (assert) {
    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('activated', true);
    });

    component.set('onToggle', 'activated');
    component.set('targetObject', {
      activated: function activated(value) {
        assert.equal(value, false, 'it has been deactivated');
      }
    });

    Ember['default'].run(function () {
      component.keyUp({ keyCode: KeyCodes.space });
    });
  });

  qunit.test('can be activated by clicking on radio', function (assert) {
    var _this = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this.$(radio).click();
    });

    assert.equal(component.activated, true, 'it has been activated');
  });

  qunit.test('can be activated by clicking on toggle (DDAU)', function (assert) {
    var _this2 = this;

    assert.expect(1);

    this.render();

    component.set('onToggle', 'activated');
    component.set('targetObject', {
      activated: function activated(value) {
        assert.equal(value, true, 'it has been activated');
      }
    });

    Ember['default'].run(function () {
      _this2.$(radio).click();
    });
  });

  qunit.test('can be deactivated by clicking on radio', function (assert) {
    var _this3 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('activated', true);
    });

    Ember['default'].run(function () {
      _this3.$(radio).click();
    });

    assert.equal(component.activated, false, 'it has been deactivated');
  });

  qunit.test('can be deactivated by clicking on radio (DDAU)', function (assert) {
    var _this4 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('activated', true);
    });

    component.set('onToggle', 'activated');
    component.set('targetObject', {
      activated: function activated(value) {
        assert.equal(value, false, 'it has been deactivated');
      }
    });

    Ember['default'].run(function () {
      _this4.$(radio).click();
    });
  });

  qunit.test('can be activated by clicking on label', function (assert) {
    var _this5 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      _this5.$(label).click();
    });

    assert.equal(component.activated, true, 'it has been activated');
  });

  qunit.test('can be activated by clicking on label (DDAU)', function (assert) {
    var _this6 = this;

    assert.expect(1);

    this.render();

    component.set('onToggle', 'activated');
    component.set('targetObject', {
      activated: function activated(value) {
        assert.equal(value, true, 'it has been activated');
      }
    });

    Ember['default'].run(function () {
      _this6.$(label).click();
    });
  });

  qunit.test('can be deactivated by clicking on label', function (assert) {
    var _this7 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('activated', true);
    });

    Ember['default'].run(function () {
      _this7.$(label).click();
    });

    assert.equal(component.activated, false, 'it has been deactivated');
  });

  qunit.test('can be deactivated by clicking on label (DDAU)', function (assert) {
    var _this8 = this;

    assert.expect(1);

    this.render();

    Ember['default'].run(function () {
      component.set('activated', true);
    });

    component.set('onToggle', 'activated');
    component.set('targetObject', {
      activated: function activated(value) {
        assert.equal(value, false, 'it has been deactivated');
      }
    });

    Ember['default'].run(function () {
      _this8.$(label).click();
    });
  });

});
define('frontend-cp/tests/unit/components/ko-user-menu/component-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleForComponent('ko-user-menu', 'Unit | Component | ko user menu', {
    // Specify the other units that are required for this test
    needs: ['component:ko-dropdown/container']
  });

  qunit.test('it renders', function (assert) {
    assert.expect(2);

    // Creates the component instance
    var component = this.subject();
    assert.equal(component._state, 'preRender');

    // Renders the component to the page
    this.render();
    assert.equal(component._state, 'inDOM');
  });

});
define('frontend-cp/tests/unit/components/mixins/drop-down-keyboard-nav-test', ['ember', 'frontend-cp/components/mixins/drop-down-keyboard-nav', 'qunit'], function (Ember, DropDownKeyboardNavMixin, qunit) {

  'use strict';

  qunit.module('DropDownKeyboardNavMixin');

  // Replace this with your real tests.
  qunit.test('it works', function (assert) {
    var DropDownKeyboardNavObject = Ember['default'].Object.extend(DropDownKeyboardNavMixin['default']);
    var subject = DropDownKeyboardNavObject.create();
    assert.ok(subject);
  });

});
define('frontend-cp/tests/unit/components/mixins/suggestions-test', ['ember', 'frontend-cp/components/mixins/suggestions', 'qunit'], function (Ember, SuggestionsMixin, qunit) {

  'use strict';

  var SuggestionsObject = undefined;
  var subject = undefined;
  var source = undefined;

  qunit.module('SuggestionsMixin', {
    setup: function setup() {
      SuggestionsObject = Ember['default'].Object.extend(SuggestionsMixin['default']);
      subject = SuggestionsObject.create();
      source = new Ember['default'].A(['pig', 'dog', 'chicken']);
    }
  });

  qunit.test('searching for a unique string in the source returns only that string', function (assert) {
    assert.expect(1);

    var results = subject.matches('dog', source);

    assert.equal(results, 'dog');
  });

  qunit.test('searching for a single character in the source returns any string that contains that character', function (assert) {
    assert.expect(1);

    var results = subject.matches('i', source);

    assert.equal(results, 'pig,chicken');
  });

  qunit.test('can handle empty source', function (assert) {
    assert.expect(1);

    source = new Ember['default'].A();

    var results = subject.matches('i', source);

    assert.equal(results, '');
  });

});
define('frontend-cp/tests/unit/mixins/simple-state-test', ['ember', 'frontend-cp/mixins/simple-state', 'qunit'], function (Ember, SimpleStateMixin, qunit) {

  'use strict';

  qunit.module('SimpleStateMixin');

  // Replace this with your real tests.
  qunit.test('it works', function (assert) {
    var SimpleStateObject = Ember['default'].Object.extend(SimpleStateMixin['default']);
    var subject = SimpleStateObject.create();
    assert.ok(subject);
  });

});
define('frontend-cp/tests/unit/services/context-modal-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleFor('service:context-modal', {
    // Specify the other units that are required for this test.
    // needs: ['service:foo']
  });

  // Replace this with your real tests.
  qunit.test('it exists', function (assert) {
    var service = this.subject();
    assert.ok(service);
  });

});
define('frontend-cp/tests/unit/services/route-state-test', ['frontend-cp/tests/helpers/qunit', 'frontend-cp/tests/fixtures/router/mock-router', 'frontend-cp/tests/fixtures/location/mock-location'], function (qunit, MockRouter, MockLocation) {

  'use strict';

  qunit.moduleFor('service:route-state', {
    beforeEach: function beforeEach() {
      this.container.register('router:main', MockRouter['default'].create(), { instantiate: false });
    }
  });

  qunit.test('it exists', function (assert) {
    assert.expect(1);

    var service = this.subject();

    assert.ok(service);
  });

  qunit.test('it gets the history API state', function (assert) {
    assert.expect(1);

    var location = createMockLocation({
      rootUrl: '/root/',
      path: '/initial',
      state: {
        initial: true
      }
    });
    this.container.lookup('router:main').set('location', location);

    var service = this.subject();

    assert.deepEqual(service.getState(), { path: '/root/initial', initial: true });
  });

  qunit.test('it extends the history API state', function (assert) {
    assert.expect(6);

    var location = createMockLocation({
      rootUrl: '/root/',
      path: '/initial'
    });
    this.container.lookup('router:main').set('location', location);

    var service = this.subject();

    assert.equal(location.get('history').length, 1);
    assert.deepEqual(service.getState(), { path: '/root/initial' });

    service.updateState({ update1: true, update2: true });

    assert.equal(location.get('history').length, 1);
    assert.deepEqual(service.getState(), { path: '/root/initial', update1: true, update2: true });

    service.updateState({ update3: true, update4: true });

    assert.equal(location.get('history').length, 1);
    assert.deepEqual(service.getState(), { path: '/root/initial', update1: true, update2: true, update3: true, update4: true });
  });

  qunit.test('it transitions to a history API state', function (assert) {
    assert.expect(6);

    var location = createMockLocation({
      rootUrl: '/root/',
      path: '/initial'
    });
    this.container.lookup('router:main').set('location', location);

    var done = assert.async();

    var service = this.subject();

    assert.equal(location.get('history').length, 1);
    assert.deepEqual(service.getState(), { path: '/root/initial' });

    service.transitionToState('/state', { state: true }).then(function () {
      assert.equal(location.get('history').length, 2);
      assert.deepEqual(service.getState(), { path: '/root/state', state: true });

      service.transitionToState('/stateless').then(function () {
        assert.equal(location.get('history').length, 3);
        assert.deepEqual(service.getState(), { path: '/root/stateless' });
        done();
      });
    });
  });

  function createMockLocation() {
    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var _ref$rootUrl = _ref.rootUrl;
    var rootUrl = _ref$rootUrl === undefined ? '/' : _ref$rootUrl;
    var _ref$path = _ref.path;
    var path = _ref$path === undefined ? '/' : _ref$path;
    var _ref$state = _ref.state;
    var state = _ref$state === undefined ? null : _ref$state;

    var location = MockLocation['default'].create({
      rootURL: rootUrl
    });

    location.replaceState(location.formatURL(path));

    if (state) {
      var _history = location.get('history');
      var currentState = location.getState();
      var updatedState = Object.assign({}, currentState, state);
      _history.replaceState(updatedState, null, currentState.path);
    }

    return location;
  }

});
define('frontend-cp/tests/unit/services/tabs-test', ['frontend-cp/tests/helpers/qunit', 'frontend-cp/tests/fixtures/services/mock-local-store'], function (qunit, MockLocalStoreService) {

  'use strict';

  qunit.moduleFor('service:tabs', {
    beforeEach: function beforeEach() {
      this.container.register('service:localStore', MockLocalStoreService['default']);
    }
  });

  qunit.test('it exists', function (assert) {
    assert.expect(1);

    var service = this.subject();

    assert.ok(service);
  });

  qunit.test('it creates new tabs', function (assert) {
    assert.expect(2);

    var service = this.subject();

    var defaultTab = service.createTab();

    assert.propertiesEqual(defaultTab, {
      url: null,
      baseUrl: null,
      label: null,
      selected: false,
      state: null
    });

    var tab = service.createTab({
      url: '/cases/1/user',
      baseUrl: '/cases/1',
      label: 'Case 1'
    });

    assert.propertiesEqual(tab, {
      url: '/cases/1/user',
      baseUrl: '/cases/1',
      label: 'Case 1',
      selected: false,
      state: null
    });
  });

  qunit.test('it loads tabs from session storage', function (assert) {
    assert.expect(5);

    var localStoreService = MockLocalStoreService['default'].create();
    this.container.register('service:localStore', localStoreService, { instantiate: false });

    var service = this.subject();

    var emptyTabs = service.loadTabsFromStorage();
    assert.deepEqual(emptyTabs, []);

    localStoreService.setItem('tabs', [{
      baseUrl: '/cases/1',
      url: '/cases/1/user',
      label: 'Case 1'
    }, {
      baseUrl: '/cases/2',
      url: '/cases/2/user',
      label: 'Case 2'
    }, {
      baseUrl: '/cases/3',
      url: '/cases/3/user',
      label: 'Case 3'
    }]);

    var tabs = service.loadTabsFromStorage();
    var expectedTabs = [{
      baseUrl: '/cases/1',
      url: '/cases/1/user',
      label: 'Case 1'
    }, {
      baseUrl: '/cases/2',
      url: '/cases/2/user',
      label: 'Case 2'
    }, {
      baseUrl: '/cases/3',
      url: '/cases/3/user',
      label: 'Case 3'
    }];
    assert.equal(tabs.length, expectedTabs.length);
    expectedTabs.forEach(function (expected, index) {
      var tab = tabs[index];
      assert.propertiesEqual(tab, expected);
    });
  });

  qunit.test('it saves tabs to session storage', function (assert) {
    assert.expect(1);

    this.container.register('service:localStore', MockLocalStoreService['default']);

    var service = this.subject();

    var localStoreService = MockLocalStoreService['default'].create();
    this.container.register('service:localStore', localStoreService, { instantiate: false });

    service.saveTabsToStorage([service.createTab({
      baseUrl: '/cases/1',
      url: '/cases/1/user',
      label: 'Case 1',
      selected: true,
      state: {}
    }), service.createTab({
      baseUrl: '/cases/2',
      url: '/cases/2/user',
      label: 'Case 2',
      selected: false,
      state: {}
    }), service.createTab({
      baseUrl: '/cases/3',
      url: '/cases/3/user',
      label: 'Case 3',
      selected: false,
      state: {}
    })]);

    assert.deepEqual(localStoreService.getItem('tabs'), [{
      baseUrl: '/cases/1',
      url: '/cases/1/user',
      label: 'Case 1'
    }, {
      baseUrl: '/cases/2',
      url: '/cases/2/user',
      label: 'Case 2'
    }, {
      baseUrl: '/cases/3',
      url: '/cases/3/user',
      label: 'Case 3'
    }]);
  });

});
define('frontend-cp/tests/unit/services/url-test', ['frontend-cp/tests/helpers/qunit'], function (qunit) {

  'use strict';

  qunit.moduleFor('service:url', {
    // Specify the other units that are required for this test.
    // needs: ['service:foo']
  });

  // Replace this with your real tests.
  qunit.test('it exists', function (assert) {
    var service = this.subject();
    assert.ok(service);
  });

});
define('frontend-cp/transforms/array', ['exports', 'ember-data'], function (exports, DS) {

  'use strict';

  exports['default'] = DS['default'].Transform.extend({
    deserialize: function deserialize(serialized) {
      return serialized;
    },

    serialize: function serialize(deserialized) {
      return deserialized;
    }
  });

});
define('frontend-cp/transforms/fragment-array', ['exports'], function (exports) {

	'use strict';

	exports['default'] = DS.FragmentArrayTransform;

});
define('frontend-cp/transforms/fragment', ['exports'], function (exports) {

	'use strict';

	exports['default'] = DS.FragmentTransform;

});
/* jshint ignore:start */

/* jshint ignore:end */

/* jshint ignore:start */

define('frontend-cp/config/environment', ['ember'], function(Ember) {
  var prefix = 'frontend-cp';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */

});

if (runningTests) {
  require("frontend-cp/tests/test-helper");
} else {
  require("frontend-cp/app")["default"].create({"PUSHER_OPTIONS":{"logEvents":false,"key":"a092caf2ca262a318f02"},"name":"frontend-cp","version":"0.0.0+0108275b"});
}

/* jshint ignore:end */
//# sourceMappingURL=frontend-cp.map