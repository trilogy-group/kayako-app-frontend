{"version":3,"sources":["service-worker-orig.js"],"names":["makeCaseUrl","event","currentTarget","origin","notification","data","id","getActionsForNotification","resource_type","resource_id","action","title","self","addEventListener","type","caseUrl","clients","openWindow","waitUntil","skipWaiting","pushPayload","json","promiseChain","registration","showNotification","body","summary","icon","avatar_url"],"mappings":"AASA,QAASA,aAAaC,GACpB,MAAOA,GAAMC,cAAcC,OAAS,gBAAkBF,EAAMG,aAAaC,KAAKC,GAYhF,QAASC,2BAA2BH,GAIlC,MAAmC,SAA/BA,EAAaI,eAA4BJ,EAAaK,cAEtDC,OAAQ,YACRC,MAAO,iBAObC,KAAKC,iBAAiB,oBAAqB,SAAUZ,GACnD,GAAqB,KAAjBA,EAAMS,QAA6C,SAA5BT,EAAMG,aAAaU,KAAiB,CAC7D,GAAIC,GAAUf,YAAYC,EAC1Be,SAAQC,WAAWF,MAIvBH,KAAKC,iBAAiB,UAAW,SAAUZ,GACzCA,EAAMiB,UAAUN,KAAKO,iBAGvBP,KAAKC,iBAAiB,OAAQ,SAAUZ,GACtC,GAAKA,EAAMI,KAAX,CAIA,GAAIe,GAAcnB,EAAMI,KAAKgB,MAK7B,IAAKD,EAAYT,MAAjB,CAIA,GAAIW,GAAeV,KAAKW,aAAaC,iBAAiBJ,EAAYT,OAChEc,KAAML,EAAYM,QAClBC,KAAMP,EAAYQ,WAClBvB,MACEC,GAAIc,EAAYX,aAElBK,KAAMM,EAAYZ,eAGpBP,GAAMiB,UAAUI","file":"service-worker.js","sourcesContent":["/**\n * Makes complete case url\n *\n * @method makeCaseUrl\n *\n * @param  {Object}    event\n *\n * @return {String}\n */\nfunction makeCaseUrl (event) {\n  return event.currentTarget.origin + '/agent/cases/' + event.notification.data.id;\n}\n\n/**\n * Returns an array of actions for a given resource type\n *\n * @method getActionsForNotification\n *\n * @param  {Object}                  notification\n *\n * @return {Array}\n */\nfunction getActionsForNotification (notification) {\n  /**\n   * For now we only support actions for cases\n   */\n  if (notification.resource_type === 'case' && notification.resource_id) {\n    return [{\n      action: 'open-case',\n      title: 'Open case'\n    }];\n  }\n\n  return [];\n}\n\nself.addEventListener('notificationclick', function (event) {\n  if (event.action === '' || event.notification.type === 'case') {\n    var caseUrl = makeCaseUrl(event);\n    clients.openWindow(caseUrl);\n  }\n});\n\nself.addEventListener('install', function (event) {\n  event.waitUntil(self.skipWaiting());\n});\n\nself.addEventListener('push', function (event) {\n  if (!event.data) {\n    return;\n  }\n\n  var pushPayload = event.data.json();\n\n  /**\n   * Cannot show notification when there is no title\n   */\n  if (!pushPayload.title) {\n    return;\n  }\n\n  var promiseChain = self.registration.showNotification(pushPayload.title, {\n    body: pushPayload.summary,\n    icon: pushPayload.avatar_url,\n    data: {\n      id: pushPayload.resource_id\n    },\n    type: pushPayload.resource_type\n  });\n\n  event.waitUntil(promiseChain);\n});\n"]}